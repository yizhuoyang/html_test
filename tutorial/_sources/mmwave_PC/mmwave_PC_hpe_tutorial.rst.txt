
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "mmwave_PC/mmwave_PC_hpe_tutorial.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_mmwave_PC_mmwave_PC_hpe_tutorial.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_mmwave_PC_mmwave_PC_hpe_tutorial.py:


Tutorial for Human Pose Estimation
==============================================================

.. GENERATED FROM PYTHON SOURCE LINES 8-9

In[1]:

.. GENERATED FROM PYTHON SOURCE LINES 9-16

.. code-block:: Python


    import yaml
    import torch
    import torch.nn as nn
    from tqdm import tqdm
    import os








.. GENERATED FROM PYTHON SOURCE LINES 17-19

Dataset with MetaFi: 
------------------------

.. GENERATED FROM PYTHON SOURCE LINES 21-24

Point cloud Pose reconstruction dataset collected by Ti 6843 mmWave radar. 40 subjects are included and the human poses are obtained by 2 RGB camera.
We provide cross-subject experiment settings with all daily activities. 
In the library, we provide a dataloader to use mmWave PC data, and predict these human poses. 

.. GENERATED FROM PYTHON SOURCE LINES 27-29

Load the data
------------------------

.. GENERATED FROM PYTHON SOURCE LINES 31-32

In[3]:

.. GENERATED FROM PYTHON SOURCE LINES 32-39

.. code-block:: Python


    from pysensing.mmwave.PC.dataset.hpe import load_hpe_dataset
    # The path contains the radHAR dataset

    train_dataset, test_dataset = load_hpe_dataset("MetaFi")






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Try to download MetaFi dateset in /home/kemove/yyz/av-gihub/tutorials/mmwave_PC_source/mmfi
    Downloading MetaFi to /home/kemove/yyz/av-gihub/tutorials/mmwave_PC_source/mmfi.zip...
    Downloading:   0%|          | 0.00/260M [00:00<?, ?iB/s]    Downloading:   0%|          | 440k/260M [00:00<00:58, 4.40MiB/s]    Downloading:   0%|          | 881k/260M [00:00<01:18, 3.31MiB/s]    Downloading:   0%|          | 1.23M/260M [00:00<01:21, 3.17MiB/s]    Downloading:   1%|          | 1.61M/260M [00:00<01:16, 3.36MiB/s]    Downloading:   1%|          | 1.95M/260M [00:00<01:19, 3.23MiB/s]    Downloading:   1%|          | 2.57M/260M [00:00<01:01, 4.15MiB/s]    Downloading:   1%|          | 3.02M/260M [00:00<01:00, 4.24MiB/s]    Downloading:   1%|▏         | 3.77M/260M [00:00<00:48, 5.25MiB/s]    Downloading:   2%|▏         | 4.31M/260M [00:01<00:50, 5.05MiB/s]    Downloading:   2%|▏         | 5.00M/260M [00:01<00:46, 5.48MiB/s]    Downloading:   2%|▏         | 5.69M/260M [00:01<00:43, 5.88MiB/s]    Downloading:   2%|▏         | 6.28M/260M [00:01<00:48, 5.22MiB/s]    Downloading:   3%|▎         | 6.82M/260M [00:01<00:55, 4.52MiB/s]    Downloading:   3%|▎         | 7.54M/260M [00:01<00:48, 5.17MiB/s]    Downloading:   3%|▎         | 8.08M/260M [00:01<00:52, 4.81MiB/s]    Downloading:   3%|▎         | 9.04M/260M [00:01<00:42, 5.96MiB/s]    Downloading:   4%|▎         | 9.67M/260M [00:02<00:47, 5.30MiB/s]    Downloading:   4%|▍         | 10.2M/260M [00:02<01:00, 4.12MiB/s]    Downloading:   4%|▍         | 10.7M/260M [00:02<01:07, 3.69MiB/s]    Downloading:   4%|▍         | 11.2M/260M [00:02<01:02, 3.97MiB/s]    Downloading:   4%|▍         | 11.7M/260M [00:02<01:11, 3.47MiB/s]    Downloading:   5%|▍         | 12.0M/260M [00:02<01:12, 3.43MiB/s]    Downloading:   5%|▍         | 12.6M/260M [00:02<01:01, 4.02MiB/s]    Downloading:   5%|▌         | 13.3M/260M [00:03<00:52, 4.68MiB/s]    Downloading:   5%|▌         | 13.8M/260M [00:03<00:51, 4.78MiB/s]    Downloading:   6%|▌         | 14.3M/260M [00:03<00:57, 4.27MiB/s]    Downloading:   6%|▌         | 14.9M/260M [00:03<01:01, 3.97MiB/s]    Downloading:   6%|▌         | 15.3M/260M [00:03<01:08, 3.59MiB/s]    Downloading:   6%|▌         | 15.7M/260M [00:03<01:16, 3.18MiB/s]    Downloading:   6%|▌         | 16.0M/260M [00:03<01:28, 2.76MiB/s]    Downloading:   6%|▋         | 16.3M/260M [00:04<01:30, 2.68MiB/s]    Downloading:   6%|▋         | 16.6M/260M [00:04<01:27, 2.78MiB/s]    Downloading:   7%|▋         | 16.9M/260M [00:04<01:32, 2.63MiB/s]    Downloading:   7%|▋         | 17.2M/260M [00:04<01:31, 2.66MiB/s]    Downloading:   7%|▋         | 17.5M/260M [00:04<01:36, 2.50MiB/s]    Downloading:   7%|▋         | 17.9M/260M [00:04<01:38, 2.44MiB/s]    Downloading:   7%|▋         | 18.3M/260M [00:04<01:22, 2.93MiB/s]    Downloading:   7%|▋         | 18.9M/260M [00:04<01:06, 3.63MiB/s]    Downloading:   8%|▊         | 19.5M/260M [00:04<00:57, 4.17MiB/s]    Downloading:   8%|▊         | 20.1M/260M [00:05<00:51, 4.64MiB/s]    Downloading:   8%|▊         | 20.7M/260M [00:05<00:53, 4.47MiB/s]    Downloading:   8%|▊         | 21.1M/260M [00:05<00:54, 4.38MiB/s]    Downloading:   8%|▊         | 21.7M/260M [00:05<00:51, 4.62MiB/s]    Downloading:   9%|▊         | 22.1M/260M [00:05<00:54, 4.39MiB/s]    Downloading:   9%|▊         | 22.6M/260M [00:05<00:59, 4.01MiB/s]    Downloading:   9%|▉         | 23.0M/260M [00:05<00:59, 3.98MiB/s]    Downloading:   9%|▉         | 23.4M/260M [00:05<01:05, 3.60MiB/s]    Downloading:   9%|▉         | 23.8M/260M [00:06<01:11, 3.30MiB/s]    Downloading:   9%|▉         | 24.1M/260M [00:06<01:28, 2.66MiB/s]    Downloading:   9%|▉         | 24.4M/260M [00:06<01:28, 2.65MiB/s]    Downloading:  10%|▉         | 24.7M/260M [00:06<01:32, 2.54MiB/s]    Downloading:  10%|▉         | 24.9M/260M [00:06<01:41, 2.31MiB/s]    Downloading:  10%|▉         | 25.2M/260M [00:06<01:46, 2.19MiB/s]    Downloading:  10%|▉         | 25.4M/260M [00:06<02:03, 1.89MiB/s]    Downloading:  10%|▉         | 25.6M/260M [00:07<01:59, 1.96MiB/s]    Downloading:  10%|▉         | 25.8M/260M [00:07<02:29, 1.56MiB/s]    Downloading:  10%|█         | 26.0M/260M [00:07<02:50, 1.37MiB/s]    Downloading:  10%|█         | 26.1M/260M [00:07<03:21, 1.16MiB/s]    Downloading:  10%|█         | 26.3M/260M [00:07<03:23, 1.14MiB/s]    Downloading:  10%|█         | 26.4M/260M [00:07<03:16, 1.18MiB/s]    Downloading:  10%|█         | 26.6M/260M [00:07<03:12, 1.21MiB/s]    Downloading:  10%|█         | 26.8M/260M [00:08<02:47, 1.39MiB/s]    Downloading:  10%|█         | 27.0M/260M [00:08<02:32, 1.53MiB/s]    Downloading:  11%|█         | 27.4M/260M [00:08<01:41, 2.30MiB/s]    Downloading:  11%|█         | 27.6M/260M [00:08<01:39, 2.32MiB/s]    Downloading:  11%|█         | 28.1M/260M [00:08<01:18, 2.94MiB/s]    Downloading:  11%|█         | 28.6M/260M [00:08<01:06, 3.48MiB/s]    Downloading:  11%|█         | 29.2M/260M [00:08<00:54, 4.19MiB/s]    Downloading:  11%|█▏        | 29.7M/260M [00:08<00:50, 4.51MiB/s]    Downloading:  12%|█▏        | 30.2M/260M [00:08<00:49, 4.61MiB/s]    Downloading:  12%|█▏        | 30.7M/260M [00:08<00:51, 4.46MiB/s]    Downloading:  12%|█▏        | 31.2M/260M [00:09<00:56, 4.07MiB/s]    Downloading:  12%|█▏        | 31.6M/260M [00:09<00:57, 3.95MiB/s]    Downloading:  12%|█▏        | 32.4M/260M [00:09<00:45, 5.03MiB/s]    Downloading:  13%|█▎        | 32.9M/260M [00:09<00:44, 5.04MiB/s]    Downloading:  13%|█▎        | 33.4M/260M [00:09<00:48, 4.64MiB/s]    Downloading:  13%|█▎        | 34.2M/260M [00:09<00:41, 5.44MiB/s]    Downloading:  13%|█▎        | 34.7M/260M [00:09<00:43, 5.19MiB/s]    Downloading:  14%|█▎        | 35.3M/260M [00:09<00:48, 4.59MiB/s]    Downloading:  14%|█▍        | 35.8M/260M [00:10<00:46, 4.84MiB/s]    Downloading:  14%|█▍        | 36.4M/260M [00:10<00:43, 5.13MiB/s]    Downloading:  14%|█▍        | 37.0M/260M [00:10<00:43, 5.14MiB/s]    Downloading:  15%|█▍        | 37.8M/260M [00:10<00:40, 5.47MiB/s]    Downloading:  15%|█▍        | 38.6M/260M [00:10<00:37, 5.89MiB/s]    Downloading:  15%|█▌        | 39.1M/260M [00:10<00:38, 5.76MiB/s]    Downloading:  15%|█▌        | 39.7M/260M [00:10<00:39, 5.63MiB/s]    Downloading:  16%|█▌        | 40.5M/260M [00:10<00:36, 5.93MiB/s]    Downloading:  16%|█▌        | 41.4M/260M [00:10<00:31, 6.89MiB/s]    Downloading:  16%|█▌        | 42.1M/260M [00:11<00:32, 6.72MiB/s]    Downloading:  17%|█▋        | 42.9M/260M [00:11<00:30, 7.17MiB/s]    Downloading:  17%|█▋        | 43.7M/260M [00:11<00:29, 7.33MiB/s]    Downloading:  17%|█▋        | 44.7M/260M [00:11<00:27, 7.89MiB/s]    Downloading:  18%|█▊        | 45.7M/260M [00:11<00:25, 8.48MiB/s]    Downloading:  18%|█▊        | 46.6M/260M [00:11<00:24, 8.82MiB/s]    Downloading:  18%|█▊        | 47.5M/260M [00:11<00:25, 8.18MiB/s]    Downloading:  19%|█▊        | 48.3M/260M [00:11<00:26, 8.00MiB/s]    Downloading:  19%|█▉        | 49.2M/260M [00:11<00:25, 8.10MiB/s]    Downloading:  19%|█▉        | 50.1M/260M [00:11<00:25, 8.16MiB/s]    Downloading:  20%|█▉        | 50.9M/260M [00:12<00:28, 7.26MiB/s]    Downloading:  20%|█▉        | 51.6M/260M [00:12<00:34, 6.09MiB/s]    Downloading:  20%|██        | 52.3M/260M [00:12<00:34, 5.97MiB/s]    Downloading:  20%|██        | 52.9M/260M [00:12<00:50, 4.11MiB/s]    Downloading:  21%|██        | 53.4M/260M [00:12<00:56, 3.64MiB/s]    Downloading:  21%|██        | 53.9M/260M [00:13<00:57, 3.56MiB/s]    Downloading:  21%|██        | 54.3M/260M [00:13<00:58, 3.49MiB/s]    Downloading:  21%|██        | 54.6M/260M [00:13<01:01, 3.34MiB/s]    Downloading:  21%|██        | 55.0M/260M [00:13<00:58, 3.49MiB/s]    Downloading:  21%|██▏       | 55.5M/260M [00:13<00:53, 3.84MiB/s]    Downloading:  22%|██▏       | 56.2M/260M [00:13<00:43, 4.66MiB/s]    Downloading:  22%|██▏       | 56.8M/260M [00:13<00:42, 4.82MiB/s]    Downloading:  22%|██▏       | 57.5M/260M [00:13<00:36, 5.55MiB/s]    Downloading:  22%|██▏       | 58.1M/260M [00:13<00:37, 5.41MiB/s]    Downloading:  23%|██▎       | 58.6M/260M [00:13<00:37, 5.39MiB/s]    Downloading:  23%|██▎       | 59.2M/260M [00:14<00:42, 4.67MiB/s]    Downloading:  23%|██▎       | 59.8M/260M [00:14<00:42, 4.74MiB/s]    Downloading:  23%|██▎       | 60.3M/260M [00:14<00:41, 4.83MiB/s]    Downloading:  23%|██▎       | 60.8M/260M [00:14<00:42, 4.62MiB/s]    Downloading:  24%|██▎       | 61.2M/260M [00:14<00:49, 4.01MiB/s]    Downloading:  24%|██▍       | 61.7M/260M [00:14<00:46, 4.24MiB/s]    Downloading:  24%|██▍       | 62.2M/260M [00:14<00:50, 3.88MiB/s]    Downloading:  24%|██▍       | 62.7M/260M [00:15<00:47, 4.19MiB/s]    Downloading:  24%|██▍       | 63.2M/260M [00:15<01:00, 3.27MiB/s]    Downloading:  24%|██▍       | 63.6M/260M [00:15<00:57, 3.40MiB/s]    Downloading:  25%|██▍       | 64.0M/260M [00:15<00:54, 3.58MiB/s]    Downloading:  25%|██▍       | 64.7M/260M [00:15<00:43, 4.47MiB/s]    Downloading:  25%|██▌       | 65.6M/260M [00:15<00:35, 5.45MiB/s]    Downloading:  25%|██▌       | 66.1M/260M [00:15<00:45, 4.28MiB/s]    Downloading:  26%|██▌       | 66.6M/260M [00:15<00:45, 4.24MiB/s]    Downloading:  26%|██▌       | 67.3M/260M [00:16<00:40, 4.75MiB/s]    Downloading:  26%|██▌       | 68.0M/260M [00:16<00:36, 5.24MiB/s]    Downloading:  26%|██▋       | 68.5M/260M [00:16<00:37, 5.16MiB/s]    Downloading:  27%|██▋       | 69.1M/260M [00:16<00:40, 4.73MiB/s]    Downloading:  27%|██▋       | 69.6M/260M [00:16<00:47, 4.01MiB/s]    Downloading:  27%|██▋       | 70.0M/260M [00:16<00:51, 3.67MiB/s]    Downloading:  27%|██▋       | 70.4M/260M [00:16<01:00, 3.12MiB/s]    Downloading:  27%|██▋       | 70.7M/260M [00:17<01:04, 2.92MiB/s]    Downloading:  27%|██▋       | 71.0M/260M [00:17<01:05, 2.87MiB/s]    Downloading:  27%|██▋       | 71.3M/260M [00:17<01:06, 2.83MiB/s]    Downloading:  28%|██▊       | 71.6M/260M [00:17<01:15, 2.50MiB/s]    Downloading:  28%|██▊       | 71.9M/260M [00:17<01:15, 2.49MiB/s]    Downloading:  28%|██▊       | 72.1M/260M [00:17<01:15, 2.49MiB/s]    Downloading:  28%|██▊       | 72.4M/260M [00:17<01:12, 2.59MiB/s]    Downloading:  28%|██▊       | 72.8M/260M [00:17<01:06, 2.81MiB/s]    Downloading:  28%|██▊       | 73.2M/260M [00:17<00:58, 3.20MiB/s]    Downloading:  28%|██▊       | 73.9M/260M [00:18<00:47, 3.94MiB/s]    Downloading:  29%|██▊       | 74.3M/260M [00:18<00:54, 3.42MiB/s]    Downloading:  29%|██▉       | 74.7M/260M [00:18<00:50, 3.67MiB/s]    Downloading:  29%|██▉       | 75.2M/260M [00:18<00:50, 3.63MiB/s]    Downloading:  29%|██▉       | 75.5M/260M [00:18<00:58, 3.16MiB/s]    Downloading:  29%|██▉       | 75.9M/260M [00:18<00:57, 3.22MiB/s]    Downloading:  29%|██▉       | 76.3M/260M [00:18<00:54, 3.35MiB/s]    Downloading:  30%|██▉       | 76.6M/260M [00:18<00:57, 3.20MiB/s]    Downloading:  30%|██▉       | 76.9M/260M [00:19<01:01, 2.97MiB/s]    Downloading:  30%|██▉       | 77.2M/260M [00:19<01:01, 2.95MiB/s]    Downloading:  30%|██▉       | 77.5M/260M [00:19<01:05, 2.78MiB/s]    Downloading:  30%|██▉       | 77.8M/260M [00:19<01:10, 2.58MiB/s]    Downloading:  30%|███       | 78.1M/260M [00:19<01:56, 1.56MiB/s]    Downloading:  30%|███       | 78.3M/260M [00:19<02:02, 1.48MiB/s]    Downloading:  30%|███       | 78.6M/260M [00:20<01:39, 1.82MiB/s]    Downloading:  30%|███       | 78.9M/260M [00:20<01:29, 2.01MiB/s]    Downloading:  31%|███       | 79.2M/260M [00:20<01:21, 2.21MiB/s]    Downloading:  31%|███       | 79.6M/260M [00:20<01:10, 2.54MiB/s]    Downloading:  31%|███       | 79.8M/260M [00:20<01:14, 2.41MiB/s]    Downloading:  31%|███       | 80.1M/260M [00:20<01:16, 2.33MiB/s]    Downloading:  31%|███       | 80.4M/260M [00:20<01:13, 2.43MiB/s]    Downloading:  31%|███       | 80.8M/260M [00:20<01:04, 2.78MiB/s]    Downloading:  31%|███▏      | 81.1M/260M [00:20<00:59, 3.02MiB/s]    Downloading:  31%|███▏      | 81.4M/260M [00:21<01:01, 2.92MiB/s]    Downloading:  32%|███▏      | 82.0M/260M [00:21<00:50, 3.49MiB/s]    Downloading:  32%|███▏      | 82.3M/260M [00:21<00:52, 3.39MiB/s]    Downloading:  32%|███▏      | 82.9M/260M [00:21<00:43, 4.05MiB/s]    Downloading:  32%|███▏      | 83.3M/260M [00:21<00:45, 3.91MiB/s]    Downloading:  32%|███▏      | 83.8M/260M [00:21<00:41, 4.19MiB/s]    Downloading:  33%|███▎      | 84.4M/260M [00:21<00:37, 4.67MiB/s]    Downloading:  33%|███▎      | 85.0M/260M [00:21<00:35, 4.87MiB/s]    Downloading:  33%|███▎      | 85.5M/260M [00:21<00:41, 4.23MiB/s]    Downloading:  33%|███▎      | 86.1M/260M [00:22<00:39, 4.41MiB/s]    Downloading:  33%|███▎      | 86.6M/260M [00:22<00:47, 3.64MiB/s]    Downloading:  33%|███▎      | 86.9M/260M [00:22<00:49, 3.46MiB/s]    Downloading:  34%|███▎      | 87.3M/260M [00:22<01:01, 2.82MiB/s]    Downloading:  34%|███▍      | 87.6M/260M [00:22<01:04, 2.66MiB/s]    Downloading:  34%|███▍      | 88.2M/260M [00:22<00:51, 3.35MiB/s]    Downloading:  34%|███▍      | 88.7M/260M [00:22<00:44, 3.83MiB/s]    Downloading:  34%|███▍      | 89.2M/260M [00:23<00:43, 3.89MiB/s]    Downloading:  35%|███▍      | 89.6M/260M [00:23<00:44, 3.86MiB/s]    Downloading:  35%|███▍      | 90.1M/260M [00:23<00:40, 4.19MiB/s]    Downloading:  35%|███▍      | 90.6M/260M [00:23<00:37, 4.53MiB/s]    Downloading:  35%|███▌      | 91.1M/260M [00:23<00:38, 4.43MiB/s]    Downloading:  35%|███▌      | 91.7M/260M [00:23<00:34, 4.80MiB/s]    Downloading:  36%|███▌      | 92.5M/260M [00:23<00:29, 5.71MiB/s]    Downloading:  36%|███▌      | 93.3M/260M [00:23<00:26, 6.22MiB/s]    Downloading:  36%|███▌      | 94.1M/260M [00:23<00:24, 6.73MiB/s]    Downloading:  37%|███▋      | 94.8M/260M [00:23<00:24, 6.63MiB/s]    Downloading:  37%|███▋      | 95.4M/260M [00:24<00:26, 6.29MiB/s]    Downloading:  37%|███▋      | 96.1M/260M [00:24<00:30, 5.42MiB/s]    Downloading:  37%|███▋      | 96.6M/260M [00:24<00:31, 5.21MiB/s]    Downloading:  37%|███▋      | 97.2M/260M [00:24<00:31, 5.15MiB/s]    Downloading:  38%|███▊      | 97.7M/260M [00:24<00:32, 4.96MiB/s]    Downloading:  38%|███▊      | 98.2M/260M [00:24<00:34, 4.64MiB/s]    Downloading:  38%|███▊      | 98.8M/260M [00:24<00:33, 4.82MiB/s]    Downloading:  38%|███▊      | 99.3M/260M [00:24<00:33, 4.80MiB/s]    Downloading:  38%|███▊      | 99.8M/260M [00:25<00:33, 4.71MiB/s]    Downloading:  39%|███▊      | 100M/260M [00:25<00:32, 4.96MiB/s]     Downloading:  39%|███▉      | 101M/260M [00:25<00:29, 5.30MiB/s]    Downloading:  39%|███▉      | 101M/260M [00:25<00:32, 4.93MiB/s]    Downloading:  39%|███▉      | 102M/260M [00:25<00:49, 3.19MiB/s]    Downloading:  39%|███▉      | 102M/260M [00:25<01:02, 2.53MiB/s]    Downloading:  40%|███▉      | 103M/260M [00:26<01:10, 2.21MiB/s]    Downloading:  40%|███▉      | 103M/260M [00:26<01:22, 1.89MiB/s]    Downloading:  40%|███▉      | 103M/260M [00:26<01:28, 1.77MiB/s]    Downloading:  40%|███▉      | 103M/260M [00:26<01:26, 1.80MiB/s]    Downloading:  40%|███▉      | 104M/260M [00:26<01:37, 1.60MiB/s]    Downloading:  40%|███▉      | 104M/260M [00:26<01:44, 1.49MiB/s]    Downloading:  40%|████      | 104M/260M [00:27<01:44, 1.48MiB/s]    Downloading:  40%|████      | 104M/260M [00:27<01:30, 1.72MiB/s]    Downloading:  40%|████      | 104M/260M [00:27<01:23, 1.86MiB/s]    Downloading:  40%|████      | 105M/260M [00:27<01:24, 1.83MiB/s]    Downloading:  40%|████      | 105M/260M [00:27<01:16, 2.01MiB/s]    Downloading:  41%|████      | 105M/260M [00:27<01:27, 1.77MiB/s]    Downloading:  41%|████      | 105M/260M [00:27<01:14, 2.06MiB/s]    Downloading:  41%|████      | 106M/260M [00:27<01:02, 2.46MiB/s]    Downloading:  41%|████      | 106M/260M [00:27<00:53, 2.85MiB/s]    Downloading:  41%|████      | 107M/260M [00:28<00:50, 3.02MiB/s]    Downloading:  41%|████      | 107M/260M [00:28<00:44, 3.39MiB/s]    Downloading:  41%|████▏     | 107M/260M [00:28<00:42, 3.54MiB/s]    Downloading:  42%|████▏     | 108M/260M [00:28<00:42, 3.59MiB/s]    Downloading:  42%|████▏     | 108M/260M [00:28<00:37, 4.00MiB/s]    Downloading:  42%|████▏     | 109M/260M [00:28<00:38, 3.95MiB/s]    Downloading:  42%|████▏     | 109M/260M [00:28<00:33, 4.47MiB/s]    Downloading:  42%|████▏     | 110M/260M [00:28<00:34, 4.36MiB/s]    Downloading:  42%|████▏     | 110M/260M [00:28<00:39, 3.76MiB/s]    Downloading:  43%|████▎     | 111M/260M [00:29<00:44, 3.37MiB/s]    Downloading:  43%|████▎     | 111M/260M [00:29<00:45, 3.26MiB/s]    Downloading:  43%|████▎     | 111M/260M [00:29<00:48, 3.06MiB/s]    Downloading:  43%|████▎     | 112M/260M [00:29<00:55, 2.69MiB/s]    Downloading:  43%|████▎     | 112M/260M [00:29<00:54, 2.68MiB/s]    Downloading:  43%|████▎     | 113M/260M [00:29<00:42, 3.46MiB/s]    Downloading:  44%|████▎     | 113M/260M [00:29<00:39, 3.74MiB/s]    Downloading:  44%|████▎     | 114M/260M [00:29<00:35, 4.14MiB/s]    Downloading:  44%|████▍     | 114M/260M [00:30<00:39, 3.67MiB/s]    Downloading:  44%|████▍     | 114M/260M [00:30<00:40, 3.59MiB/s]    Downloading:  44%|████▍     | 115M/260M [00:30<00:40, 3.57MiB/s]    Downloading:  44%|████▍     | 115M/260M [00:30<01:04, 2.23MiB/s]    Downloading:  44%|████▍     | 115M/260M [00:30<01:04, 2.24MiB/s]    Downloading:  45%|████▍     | 116M/260M [00:31<01:33, 1.54MiB/s]    Downloading:  45%|████▍     | 116M/260M [00:31<01:40, 1.43MiB/s]    Downloading:  45%|████▍     | 116M/260M [00:31<01:35, 1.51MiB/s]    Downloading:  45%|████▍     | 116M/260M [00:31<01:53, 1.26MiB/s]    Downloading:  45%|████▍     | 117M/260M [00:31<01:32, 1.55MiB/s]    Downloading:  45%|████▍     | 117M/260M [00:31<01:36, 1.49MiB/s]    Downloading:  45%|████▌     | 117M/260M [00:32<01:28, 1.62MiB/s]    Downloading:  45%|████▌     | 117M/260M [00:32<01:22, 1.73MiB/s]    Downloading:  45%|████▌     | 117M/260M [00:32<01:22, 1.72MiB/s]    Downloading:  45%|████▌     | 118M/260M [00:32<01:33, 1.51MiB/s]    Downloading:  45%|████▌     | 118M/260M [00:32<01:34, 1.50MiB/s]    Downloading:  45%|████▌     | 118M/260M [00:32<01:38, 1.44MiB/s]    Downloading:  46%|████▌     | 118M/260M [00:32<01:34, 1.50MiB/s]    Downloading:  46%|████▌     | 118M/260M [00:32<01:37, 1.45MiB/s]    Downloading:  46%|████▌     | 119M/260M [00:33<01:21, 1.72MiB/s]    Downloading:  46%|████▌     | 119M/260M [00:33<01:26, 1.63MiB/s]    Downloading:  46%|████▌     | 119M/260M [00:33<01:34, 1.48MiB/s]    Downloading:  46%|████▌     | 119M/260M [00:33<01:41, 1.39MiB/s]    Downloading:  46%|████▌     | 119M/260M [00:33<01:38, 1.42MiB/s]    Downloading:  46%|████▌     | 119M/260M [00:33<01:25, 1.64MiB/s]    Downloading:  46%|████▌     | 120M/260M [00:33<01:21, 1.71MiB/s]    Downloading:  46%|████▌     | 120M/260M [00:33<01:05, 2.13MiB/s]    Downloading:  46%|████▋     | 120M/260M [00:33<01:09, 2.01MiB/s]    Downloading:  46%|████▋     | 120M/260M [00:34<01:05, 2.13MiB/s]    Downloading:  47%|████▋     | 121M/260M [00:34<01:01, 2.25MiB/s]    Downloading:  47%|████▋     | 121M/260M [00:34<01:00, 2.29MiB/s]    Downloading:  47%|████▋     | 121M/260M [00:34<01:13, 1.89MiB/s]    Downloading:  47%|████▋     | 121M/260M [00:34<01:26, 1.60MiB/s]    Downloading:  47%|████▋     | 122M/260M [00:34<01:40, 1.37MiB/s]    Downloading:  47%|████▋     | 122M/260M [00:34<01:37, 1.42MiB/s]    Downloading:  47%|████▋     | 122M/260M [00:35<01:53, 1.21MiB/s]    Downloading:  47%|████▋     | 122M/260M [00:35<01:46, 1.29MiB/s]    Downloading:  47%|████▋     | 122M/260M [00:35<01:58, 1.16MiB/s]    Downloading:  47%|████▋     | 122M/260M [00:35<01:40, 1.37MiB/s]    Downloading:  47%|████▋     | 123M/260M [00:35<01:18, 1.73MiB/s]    Downloading:  47%|████▋     | 123M/260M [00:35<01:24, 1.61MiB/s]    Downloading:  47%|████▋     | 123M/260M [00:35<01:35, 1.43MiB/s]    Downloading:  47%|████▋     | 123M/260M [00:36<01:48, 1.25MiB/s]    Downloading:  48%|████▊     | 123M/260M [00:36<01:45, 1.29MiB/s]    Downloading:  48%|████▊     | 124M/260M [00:36<01:34, 1.43MiB/s]    Downloading:  48%|████▊     | 124M/260M [00:36<01:22, 1.65MiB/s]    Downloading:  48%|████▊     | 124M/260M [00:36<01:24, 1.60MiB/s]    Downloading:  48%|████▊     | 124M/260M [00:36<01:20, 1.68MiB/s]    Downloading:  48%|████▊     | 125M/260M [00:36<01:10, 1.92MiB/s]    Downloading:  48%|████▊     | 125M/260M [00:36<01:12, 1.85MiB/s]    Downloading:  48%|████▊     | 125M/260M [00:36<01:00, 2.21MiB/s]    Downloading:  48%|████▊     | 125M/260M [00:37<00:56, 2.36MiB/s]    Downloading:  48%|████▊     | 126M/260M [00:37<00:52, 2.53MiB/s]    Downloading:  49%|████▊     | 126M/260M [00:37<00:57, 2.34MiB/s]    Downloading:  49%|████▊     | 126M/260M [00:37<00:56, 2.34MiB/s]    Downloading:  49%|████▊     | 126M/260M [00:37<00:56, 2.37MiB/s]    Downloading:  49%|████▉     | 127M/260M [00:37<00:53, 2.48MiB/s]    Downloading:  49%|████▉     | 127M/260M [00:41<11:44, 188kiB/s]     Downloading:  49%|████▉     | 127M/260M [00:42<09:36, 230kiB/s]    Downloading:  49%|████▉     | 127M/260M [00:42<08:03, 273kiB/s]    Downloading:  49%|████▉     | 128M/260M [00:42<04:00, 548kiB/s]    Downloading:  49%|████▉     | 128M/260M [00:42<02:47, 784kiB/s]    Downloading:  50%|████▉     | 129M/260M [00:42<02:00, 1.08MiB/s]    Downloading:  50%|████▉     | 129M/260M [00:42<01:39, 1.31MiB/s]    Downloading:  50%|████▉     | 129M/260M [00:42<01:16, 1.69MiB/s]    Downloading:  50%|████▉     | 130M/260M [00:43<01:07, 1.92MiB/s]    Downloading:  50%|█████     | 130M/260M [00:43<01:10, 1.85MiB/s]    Downloading:  50%|█████     | 130M/260M [00:43<01:04, 2.01MiB/s]    Downloading:  50%|█████     | 131M/260M [00:43<00:51, 2.51MiB/s]    Downloading:  51%|█████     | 131M/260M [00:43<00:39, 3.24MiB/s]    Downloading:  51%|█████     | 132M/260M [00:43<00:36, 3.53MiB/s]    Downloading:  51%|█████     | 133M/260M [00:43<00:27, 4.54MiB/s]    Downloading:  51%|█████▏    | 133M/260M [00:43<00:23, 5.28MiB/s]    Downloading:  52%|█████▏    | 134M/260M [00:43<00:23, 5.32MiB/s]    Downloading:  52%|█████▏    | 134M/260M [00:44<00:23, 5.30MiB/s]    Downloading:  52%|█████▏    | 135M/260M [00:44<00:23, 5.41MiB/s]    Downloading:  52%|█████▏    | 136M/260M [00:44<00:21, 5.77MiB/s]    Downloading:  53%|█████▎    | 136M/260M [00:44<00:22, 5.38MiB/s]    Downloading:  53%|█████▎    | 137M/260M [00:44<00:29, 4.18MiB/s]    Downloading:  53%|█████▎    | 137M/260M [00:44<00:27, 4.46MiB/s]    Downloading:  53%|█████▎    | 138M/260M [00:44<00:25, 4.84MiB/s]    Downloading:  53%|█████▎    | 139M/260M [00:44<00:21, 5.72MiB/s]    Downloading:  54%|█████▍    | 140M/260M [00:44<00:18, 6.45MiB/s]    Downloading:  54%|█████▍    | 140M/260M [00:45<00:18, 6.50MiB/s]    Downloading:  54%|█████▍    | 141M/260M [00:45<00:16, 7.12MiB/s]    Downloading:  55%|█████▍    | 142M/260M [00:45<00:16, 7.03MiB/s]    Downloading:  55%|█████▌    | 143M/260M [00:45<00:16, 7.16MiB/s]    Downloading:  55%|█████▌    | 144M/260M [00:45<00:17, 6.76MiB/s]    Downloading:  56%|█████▌    | 144M/260M [00:45<00:20, 5.54MiB/s]    Downloading:  56%|█████▌    | 145M/260M [00:45<00:23, 4.92MiB/s]    Downloading:  56%|█████▌    | 145M/260M [00:45<00:23, 4.84MiB/s]    Downloading:  56%|█████▌    | 146M/260M [00:46<00:24, 4.70MiB/s]    Downloading:  56%|█████▋    | 146M/260M [00:46<00:28, 3.95MiB/s]    Downloading:  57%|█████▋    | 147M/260M [00:46<00:32, 3.43MiB/s]    Downloading:  57%|█████▋    | 147M/260M [00:46<00:32, 3.51MiB/s]    Downloading:  57%|█████▋    | 148M/260M [00:46<00:31, 3.57MiB/s]    Downloading:  57%|█████▋    | 148M/260M [00:46<00:27, 4.01MiB/s]    Downloading:  57%|█████▋    | 149M/260M [00:46<00:23, 4.68MiB/s]    Downloading:  58%|█████▊    | 150M/260M [00:46<00:19, 5.69MiB/s]    Downloading:  58%|█████▊    | 150M/260M [00:47<00:25, 4.22MiB/s]    Downloading:  58%|█████▊    | 151M/260M [00:47<00:28, 3.82MiB/s]    Downloading:  58%|█████▊    | 151M/260M [00:47<00:31, 3.44MiB/s]    Downloading:  58%|█████▊    | 151M/260M [00:47<00:36, 2.96MiB/s]    Downloading:  59%|█████▊    | 152M/260M [00:47<00:30, 3.50MiB/s]    Downloading:  59%|█████▊    | 152M/260M [00:47<00:29, 3.61MiB/s]    Downloading:  59%|█████▉    | 153M/260M [00:48<00:27, 3.94MiB/s]    Downloading:  59%|█████▉    | 154M/260M [00:48<00:24, 4.27MiB/s]    Downloading:  59%|█████▉    | 154M/260M [00:48<00:22, 4.60MiB/s]    Downloading:  60%|█████▉    | 155M/260M [00:48<00:21, 4.76MiB/s]    Downloading:  60%|█████▉    | 155M/260M [00:48<00:22, 4.60MiB/s]    Downloading:  60%|██████    | 156M/260M [00:48<00:20, 5.01MiB/s]    Downloading:  60%|██████    | 156M/260M [00:48<00:21, 4.82MiB/s]    Downloading:  60%|██████    | 157M/260M [00:48<00:22, 4.61MiB/s]    Downloading:  61%|██████    | 158M/260M [00:48<00:19, 5.26MiB/s]    Downloading:  61%|██████    | 158M/260M [00:49<00:19, 5.21MiB/s]    Downloading:  61%|██████    | 159M/260M [00:49<00:18, 5.49MiB/s]    Downloading:  61%|██████▏   | 159M/260M [00:49<00:23, 4.29MiB/s]    Downloading:  62%|██████▏   | 160M/260M [00:49<00:27, 3.62MiB/s]    Downloading:  62%|██████▏   | 160M/260M [00:49<00:29, 3.39MiB/s]    Downloading:  62%|██████▏   | 161M/260M [00:49<00:37, 2.61MiB/s]    Downloading:  62%|██████▏   | 161M/260M [00:50<00:37, 2.62MiB/s]    Downloading:  62%|██████▏   | 161M/260M [00:50<00:35, 2.79MiB/s]    Downloading:  62%|██████▏   | 162M/260M [00:50<00:34, 2.84MiB/s]    Downloading:  62%|██████▏   | 162M/260M [00:50<00:29, 3.27MiB/s]    Downloading:  63%|██████▎   | 162M/260M [00:50<00:25, 3.76MiB/s]    Downloading:  63%|██████▎   | 163M/260M [00:50<00:25, 3.86MiB/s]    Downloading:  63%|██████▎   | 163M/260M [00:50<00:24, 3.96MiB/s]    Downloading:  63%|██████▎   | 164M/260M [00:50<00:26, 3.68MiB/s]    Downloading:  63%|██████▎   | 164M/260M [00:50<00:32, 2.98MiB/s]    Downloading:  63%|██████▎   | 164M/260M [00:51<00:36, 2.59MiB/s]    Downloading:  63%|██████▎   | 165M/260M [00:51<00:35, 2.69MiB/s]    Downloading:  64%|██████▎   | 165M/260M [00:51<00:40, 2.32MiB/s]    Downloading:  64%|██████▎   | 165M/260M [00:51<00:40, 2.34MiB/s]    Downloading:  64%|██████▍   | 166M/260M [00:51<00:36, 2.59MiB/s]    Downloading:  64%|██████▍   | 166M/260M [00:51<00:35, 2.63MiB/s]    Downloading:  64%|██████▍   | 166M/260M [00:51<00:34, 2.69MiB/s]    Downloading:  64%|██████▍   | 167M/260M [00:51<00:35, 2.63MiB/s]    Downloading:  64%|██████▍   | 167M/260M [00:52<00:34, 2.66MiB/s]    Downloading:  64%|██████▍   | 167M/260M [00:52<00:35, 2.58MiB/s]    Downloading:  64%|██████▍   | 167M/260M [00:52<00:57, 1.61MiB/s]    Downloading:  65%|██████▍   | 168M/260M [00:52<01:21, 1.13MiB/s]    Downloading:  65%|██████▍   | 168M/260M [00:53<01:27, 1.05MiB/s]    Downloading:  65%|██████▍   | 168M/260M [00:53<01:23, 1.09MiB/s]    Downloading:  65%|██████▍   | 168M/260M [00:53<01:44, 879kiB/s]     Downloading:  65%|██████▍   | 168M/260M [00:53<01:43, 887kiB/s]    Downloading:  65%|██████▍   | 168M/260M [00:53<02:03, 741kiB/s]    Downloading:  65%|██████▍   | 168M/260M [00:53<02:29, 611kiB/s]    Downloading:  65%|██████▍   | 168M/260M [00:54<02:29, 610kiB/s]    Downloading:  65%|██████▍   | 168M/260M [00:54<02:21, 643kiB/s]    Downloading:  65%|██████▍   | 169M/260M [00:54<01:57, 777kiB/s]    Downloading:  65%|██████▍   | 169M/260M [00:54<01:56, 778kiB/s]    Downloading:  65%|██████▌   | 169M/260M [00:54<01:41, 892kiB/s]    Downloading:  65%|██████▌   | 169M/260M [00:54<01:25, 1.06MiB/s]    Downloading:  65%|██████▌   | 169M/260M [00:54<01:22, 1.10MiB/s]    Downloading:  65%|██████▌   | 169M/260M [00:54<01:21, 1.10MiB/s]    Downloading:  65%|██████▌   | 169M/260M [00:54<01:04, 1.39MiB/s]    Downloading:  65%|██████▌   | 170M/260M [00:55<01:01, 1.46MiB/s]    Downloading:  65%|██████▌   | 170M/260M [00:55<01:03, 1.41MiB/s]    Downloading:  65%|██████▌   | 170M/260M [00:55<00:56, 1.59MiB/s]    Downloading:  66%|██████▌   | 170M/260M [00:55<00:52, 1.72MiB/s]    Downloading:  66%|██████▌   | 170M/260M [00:55<00:45, 1.96MiB/s]    Downloading:  66%|██████▌   | 171M/260M [00:55<00:33, 2.67MiB/s]    Downloading:  66%|██████▌   | 171M/260M [00:55<00:36, 2.40MiB/s]    Downloading:  66%|██████▌   | 171M/260M [00:55<00:40, 2.15MiB/s]    Downloading:  66%|██████▌   | 172M/260M [00:56<00:44, 1.99MiB/s]    Downloading:  66%|██████▋   | 172M/260M [00:56<00:29, 3.01MiB/s]    Downloading:  67%|██████▋   | 173M/260M [00:56<00:22, 3.83MiB/s]    Downloading:  67%|██████▋   | 173M/260M [00:56<00:22, 3.80MiB/s]    Downloading:  67%|██████▋   | 174M/260M [00:56<00:18, 4.56MiB/s]    Downloading:  67%|██████▋   | 175M/260M [00:56<00:18, 4.52MiB/s]    Downloading:  67%|██████▋   | 175M/260M [00:56<00:22, 3.74MiB/s]    Downloading:  68%|██████▊   | 175M/260M [00:56<00:21, 3.87MiB/s]    Downloading:  68%|██████▊   | 176M/260M [00:56<00:19, 4.22MiB/s]    Downloading:  68%|██████▊   | 176M/260M [00:57<00:20, 4.11MiB/s]    Downloading:  68%|██████▊   | 177M/260M [00:57<00:22, 3.73MiB/s]    Downloading:  68%|██████▊   | 177M/260M [00:57<00:28, 2.88MiB/s]    Downloading:  68%|██████▊   | 178M/260M [00:57<00:28, 2.83MiB/s]    Downloading:  69%|██████▊   | 178M/260M [00:57<00:27, 2.92MiB/s]    Downloading:  69%|██████▊   | 178M/260M [00:57<00:29, 2.80MiB/s]    Downloading:  69%|██████▉   | 179M/260M [00:57<00:30, 2.65MiB/s]    Downloading:  69%|██████▉   | 179M/260M [00:58<00:30, 2.61MiB/s]    Downloading:  69%|██████▉   | 179M/260M [00:58<00:28, 2.81MiB/s]    Downloading:  69%|██████▉   | 179M/260M [00:58<00:33, 2.38MiB/s]    Downloading:  69%|██████▉   | 180M/260M [00:58<00:36, 2.16MiB/s]    Downloading:  69%|██████▉   | 180M/260M [00:58<00:40, 1.94MiB/s]    Downloading:  69%|██████▉   | 180M/260M [00:58<00:46, 1.72MiB/s]    Downloading:  69%|██████▉   | 180M/260M [00:58<00:56, 1.40MiB/s]    Downloading:  70%|██████▉   | 180M/260M [00:59<00:56, 1.41MiB/s]    Downloading:  70%|██████▉   | 181M/260M [00:59<00:56, 1.39MiB/s]    Downloading:  70%|██████▉   | 181M/260M [00:59<00:58, 1.35MiB/s]    Downloading:  70%|██████▉   | 181M/260M [00:59<00:48, 1.63MiB/s]    Downloading:  70%|██████▉   | 181M/260M [00:59<00:44, 1.74MiB/s]    Downloading:  70%|███████   | 182M/260M [00:59<00:30, 2.56MiB/s]    Downloading:  70%|███████   | 182M/260M [00:59<00:26, 2.92MiB/s]    Downloading:  70%|███████   | 183M/260M [00:59<00:26, 2.86MiB/s]    Downloading:  71%|███████   | 183M/260M [01:00<00:18, 4.22MiB/s]    Downloading:  71%|███████   | 184M/260M [01:00<00:15, 5.02MiB/s]    Downloading:  71%|███████   | 185M/260M [01:00<00:13, 5.65MiB/s]    Downloading:  71%|███████▏  | 186M/260M [01:00<00:12, 6.12MiB/s]    Downloading:  72%|███████▏  | 186M/260M [01:00<00:11, 6.37MiB/s]    Downloading:  72%|███████▏  | 187M/260M [01:00<00:19, 3.69MiB/s]    Downloading:  72%|███████▏  | 187M/260M [01:00<00:19, 3.73MiB/s]    Downloading:  72%|███████▏  | 188M/260M [01:01<00:22, 3.17MiB/s]    Downloading:  73%|███████▎  | 188M/260M [01:01<00:27, 2.62MiB/s]    Downloading:  73%|███████▎  | 189M/260M [01:01<00:27, 2.61MiB/s]    Downloading:  73%|███████▎  | 189M/260M [01:01<00:35, 1.99MiB/s]    Downloading:  73%|███████▎  | 189M/260M [01:01<00:35, 2.00MiB/s]    Downloading:  73%|███████▎  | 189M/260M [01:01<00:33, 2.09MiB/s]    Downloading:  73%|███████▎  | 190M/260M [01:02<00:32, 2.16MiB/s]    Downloading:  73%|███████▎  | 190M/260M [01:02<00:32, 2.17MiB/s]    Downloading:  73%|███████▎  | 190M/260M [01:02<00:33, 2.05MiB/s]    Downloading:  73%|███████▎  | 190M/260M [01:02<00:35, 1.97MiB/s]    Downloading:  73%|███████▎  | 191M/260M [01:02<00:36, 1.89MiB/s]    Downloading:  74%|███████▎  | 191M/260M [01:02<00:36, 1.89MiB/s]    Downloading:  74%|███████▎  | 191M/260M [01:02<00:40, 1.70MiB/s]    Downloading:  74%|███████▎  | 191M/260M [01:02<00:38, 1.79MiB/s]    Downloading:  74%|███████▎  | 191M/260M [01:03<00:43, 1.57MiB/s]    Downloading:  74%|███████▍  | 192M/260M [01:03<00:53, 1.27MiB/s]    Downloading:  74%|███████▍  | 192M/260M [01:03<00:54, 1.24MiB/s]    Downloading:  74%|███████▍  | 192M/260M [01:03<01:02, 1.09MiB/s]    Downloading:  74%|███████▍  | 192M/260M [01:03<01:01, 1.10MiB/s]    Downloading:  74%|███████▍  | 192M/260M [01:03<00:58, 1.15MiB/s]    Downloading:  74%|███████▍  | 192M/260M [01:03<00:52, 1.27MiB/s]    Downloading:  74%|███████▍  | 192M/260M [01:04<00:49, 1.36MiB/s]    Downloading:  74%|███████▍  | 193M/260M [01:04<00:45, 1.46MiB/s]    Downloading:  74%|███████▍  | 193M/260M [01:04<00:50, 1.33MiB/s]    Downloading:  74%|███████▍  | 193M/260M [01:04<00:51, 1.30MiB/s]    Downloading:  74%|███████▍  | 193M/260M [01:04<00:41, 1.62MiB/s]    Downloading:  75%|███████▍  | 193M/260M [01:04<00:39, 1.66MiB/s]    Downloading:  75%|███████▍  | 194M/260M [01:04<00:48, 1.35MiB/s]    Downloading:  75%|███████▍  | 194M/260M [01:04<00:47, 1.39MiB/s]    Downloading:  75%|███████▍  | 194M/260M [01:05<00:54, 1.20MiB/s]    Downloading:  75%|███████▍  | 194M/260M [01:05<00:56, 1.17MiB/s]    Downloading:  75%|███████▍  | 194M/260M [01:05<00:57, 1.13MiB/s]    Downloading:  75%|███████▍  | 194M/260M [01:05<01:03, 1.03MiB/s]    Downloading:  75%|███████▍  | 194M/260M [01:05<00:59, 1.10MiB/s]    Downloading:  75%|███████▍  | 194M/260M [01:05<01:03, 1.03MiB/s]    Downloading:  75%|███████▍  | 195M/260M [01:05<01:06, 971kiB/s]     Downloading:  75%|███████▌  | 195M/260M [01:05<00:54, 1.19MiB/s]    Downloading:  75%|███████▌  | 195M/260M [01:06<00:46, 1.40MiB/s]    Downloading:  75%|███████▌  | 195M/260M [01:06<00:48, 1.33MiB/s]    Downloading:  75%|███████▌  | 195M/260M [01:06<01:07, 956kiB/s]     Downloading:  75%|███████▌  | 195M/260M [01:06<01:10, 916kiB/s]    Downloading:  75%|███████▌  | 196M/260M [01:06<01:00, 1.06MiB/s]    Downloading:  75%|███████▌  | 196M/260M [01:06<00:58, 1.10MiB/s]    Downloading:  75%|███████▌  | 196M/260M [01:06<00:51, 1.23MiB/s]    Downloading:  76%|███████▌  | 196M/260M [01:06<00:48, 1.30MiB/s]    Downloading:  76%|███████▌  | 196M/260M [01:07<00:40, 1.57MiB/s]    Downloading:  76%|███████▌  | 196M/260M [01:07<00:47, 1.34MiB/s]    Downloading:  76%|███████▌  | 197M/260M [01:07<00:46, 1.35MiB/s]    Downloading:  76%|███████▌  | 197M/260M [01:07<00:41, 1.50MiB/s]    Downloading:  76%|███████▌  | 197M/260M [01:07<00:35, 1.77MiB/s]    Downloading:  76%|███████▌  | 197M/260M [01:07<00:56, 1.10MiB/s]    Downloading:  76%|███████▌  | 197M/260M [01:10<05:51, 177kiB/s]     Downloading:  76%|███████▌  | 197M/260M [01:11<06:05, 170kiB/s]    Downloading:  76%|███████▌  | 198M/260M [01:12<06:43, 154kiB/s]    Downloading:  76%|███████▌  | 198M/260M [01:12<06:15, 165kiB/s]    Downloading:  76%|███████▌  | 198M/260M [01:12<04:42, 219kiB/s]    Downloading:  76%|███████▌  | 198M/260M [01:12<03:33, 289kiB/s]    Downloading:  76%|███████▋  | 198M/260M [01:12<02:45, 371kiB/s]    Downloading:  76%|███████▋  | 198M/260M [01:13<02:18, 445kiB/s]    Downloading:  76%|███████▋  | 198M/260M [01:13<02:02, 502kiB/s]    Downloading:  76%|███████▋  | 198M/260M [01:13<01:54, 538kiB/s]    Downloading:  76%|███████▋  | 198M/260M [01:13<01:57, 523kiB/s]    Downloading:  76%|███████▋  | 198M/260M [01:13<01:43, 594kiB/s]    Downloading:  76%|███████▋  | 199M/260M [01:13<01:18, 775kiB/s]    Downloading:  77%|███████▋  | 199M/260M [01:13<01:11, 855kiB/s]    Downloading:  77%|███████▋  | 199M/260M [01:13<01:03, 961kiB/s]    Downloading:  77%|███████▋  | 199M/260M [01:13<00:53, 1.13MiB/s]    Downloading:  77%|███████▋  | 199M/260M [01:14<01:01, 988kiB/s]     Downloading:  77%|███████▋  | 199M/260M [01:14<01:00, 996kiB/s]    Downloading:  77%|███████▋  | 199M/260M [01:14<00:57, 1.04MiB/s]    Downloading:  77%|███████▋  | 199M/260M [01:14<00:57, 1.04MiB/s]    Downloading:  77%|███████▋  | 200M/260M [01:14<01:08, 877kiB/s]     Downloading:  77%|███████▋  | 200M/260M [01:14<01:08, 880kiB/s]    Downloading:  77%|███████▋  | 200M/260M [01:14<01:01, 977kiB/s]    Downloading:  77%|███████▋  | 200M/260M [01:14<00:46, 1.27MiB/s]    Downloading:  77%|███████▋  | 200M/260M [01:15<00:31, 1.89MiB/s]    Downloading:  77%|███████▋  | 201M/260M [01:15<00:25, 2.33MiB/s]    Downloading:  77%|███████▋  | 201M/260M [01:15<00:21, 2.73MiB/s]    Downloading:  78%|███████▊  | 201M/260M [01:15<00:19, 2.92MiB/s]    Downloading:  78%|███████▊  | 202M/260M [01:15<00:20, 2.88MiB/s]    Downloading:  78%|███████▊  | 202M/260M [01:15<00:20, 2.80MiB/s]    Downloading:  78%|███████▊  | 202M/260M [01:15<00:23, 2.45MiB/s]    Downloading:  78%|███████▊  | 203M/260M [01:15<00:26, 2.17MiB/s]    Downloading:  78%|███████▊  | 203M/260M [01:16<00:27, 2.07MiB/s]    Downloading:  78%|███████▊  | 203M/260M [01:16<00:28, 1.98MiB/s]    Downloading:  78%|███████▊  | 203M/260M [01:16<00:34, 1.65MiB/s]    Downloading:  78%|███████▊  | 203M/260M [01:16<00:35, 1.58MiB/s]    Downloading:  78%|███████▊  | 204M/260M [01:16<00:35, 1.56MiB/s]    Downloading:  79%|███████▊  | 204M/260M [01:16<00:32, 1.72MiB/s]    Downloading:  79%|███████▊  | 204M/260M [01:16<00:30, 1.83MiB/s]    Downloading:  79%|███████▊  | 204M/260M [01:16<00:30, 1.84MiB/s]    Downloading:  79%|███████▉  | 204M/260M [01:17<00:31, 1.74MiB/s]    Downloading:  79%|███████▉  | 205M/260M [01:17<00:36, 1.51MiB/s]    Downloading:  79%|███████▉  | 205M/260M [01:17<00:37, 1.45MiB/s]    Downloading:  79%|███████▉  | 205M/260M [01:17<00:36, 1.50MiB/s]    Downloading:  79%|███████▉  | 205M/260M [01:17<00:40, 1.35MiB/s]    Downloading:  79%|███████▉  | 205M/260M [01:17<00:31, 1.74MiB/s]    Downloading:  79%|███████▉  | 206M/260M [01:17<00:21, 2.53MiB/s]    Downloading:  80%|███████▉  | 206M/260M [01:17<00:16, 3.16MiB/s]    Downloading:  80%|███████▉  | 207M/260M [01:17<00:15, 3.49MiB/s]    Downloading:  80%|███████▉  | 207M/260M [01:18<00:12, 4.10MiB/s]    Downloading:  80%|████████  | 208M/260M [01:18<00:11, 4.35MiB/s]    Downloading:  80%|████████  | 208M/260M [01:18<00:10, 4.67MiB/s]    Downloading:  80%|████████  | 209M/260M [01:18<00:11, 4.34MiB/s]    Downloading:  81%|████████  | 210M/260M [01:18<00:10, 4.91MiB/s]    Downloading:  81%|████████  | 210M/260M [01:18<00:08, 5.86MiB/s]    Downloading:  81%|████████▏ | 211M/260M [01:18<00:09, 5.01MiB/s]    Downloading:  82%|████████▏ | 212M/260M [01:18<00:09, 5.18MiB/s]    Downloading:  82%|████████▏ | 212M/260M [01:19<00:09, 4.85MiB/s]    Downloading:  82%|████████▏ | 213M/260M [01:19<00:11, 4.10MiB/s]    Downloading:  82%|████████▏ | 213M/260M [01:19<00:12, 3.85MiB/s]    Downloading:  82%|████████▏ | 214M/260M [01:19<00:12, 3.72MiB/s]    Downloading:  82%|████████▏ | 214M/260M [01:19<00:17, 2.67MiB/s]    Downloading:  83%|████████▎ | 214M/260M [01:19<00:18, 2.44MiB/s]    Downloading:  83%|████████▎ | 215M/260M [01:20<00:20, 2.21MiB/s]    Downloading:  83%|████████▎ | 215M/260M [01:20<00:18, 2.36MiB/s]    Downloading:  83%|████████▎ | 215M/260M [01:20<00:24, 1.82MiB/s]    Downloading:  83%|████████▎ | 215M/260M [01:20<00:23, 1.86MiB/s]    Downloading:  83%|████████▎ | 216M/260M [01:20<00:21, 2.06MiB/s]    Downloading:  83%|████████▎ | 216M/260M [01:20<00:22, 1.93MiB/s]    Downloading:  83%|████████▎ | 216M/260M [01:20<00:22, 1.96MiB/s]    Downloading:  83%|████████▎ | 216M/260M [01:21<00:22, 1.88MiB/s]    Downloading:  83%|████████▎ | 217M/260M [01:21<00:19, 2.23MiB/s]    Downloading:  84%|████████▎ | 217M/260M [01:21<00:18, 2.26MiB/s]    Downloading:  84%|████████▎ | 217M/260M [01:21<00:17, 2.48MiB/s]    Downloading:  84%|████████▍ | 217M/260M [01:21<00:19, 2.15MiB/s]    Downloading:  84%|████████▍ | 218M/260M [01:21<00:16, 2.58MiB/s]    Downloading:  84%|████████▍ | 218M/260M [01:21<00:13, 2.96MiB/s]    Downloading:  84%|████████▍ | 219M/260M [01:21<00:13, 2.98MiB/s]    Downloading:  84%|████████▍ | 219M/260M [01:21<00:13, 2.99MiB/s]    Downloading:  85%|████████▍ | 219M/260M [01:22<00:14, 2.82MiB/s]    Downloading:  85%|████████▍ | 220M/260M [01:22<00:12, 3.08MiB/s]    Downloading:  85%|████████▍ | 220M/260M [01:22<00:11, 3.34MiB/s]    Downloading:  85%|████████▍ | 220M/260M [01:22<00:11, 3.27MiB/s]    Downloading:  85%|████████▌ | 221M/260M [01:22<00:11, 3.30MiB/s]    Downloading:  85%|████████▌ | 221M/260M [01:22<00:11, 3.42MiB/s]    Downloading:  85%|████████▌ | 222M/260M [01:22<00:17, 2.12MiB/s]    Downloading:  85%|████████▌ | 222M/260M [01:26<02:08, 295kiB/s]     Downloading:  86%|████████▌ | 222M/260M [01:26<01:56, 322kiB/s]    Downloading:  86%|████████▌ | 222M/260M [01:26<01:22, 449kiB/s]    Downloading:  86%|████████▌ | 223M/260M [01:26<01:04, 577kiB/s]    Downloading:  86%|████████▌ | 223M/260M [01:26<00:50, 722kiB/s]    Downloading:  86%|████████▌ | 223M/260M [01:27<00:39, 914kiB/s]    Downloading:  86%|████████▌ | 223M/260M [01:27<00:28, 1.26MiB/s]    Downloading:  86%|████████▋ | 224M/260M [01:27<00:18, 1.88MiB/s]    Downloading:  86%|████████▋ | 224M/260M [01:27<00:15, 2.31MiB/s]    Downloading:  87%|████████▋ | 225M/260M [01:27<00:11, 3.07MiB/s]    Downloading:  87%|████████▋ | 226M/260M [01:27<00:10, 3.20MiB/s]    Downloading:  87%|████████▋ | 226M/260M [01:27<00:09, 3.41MiB/s]    Downloading:  87%|████████▋ | 226M/260M [01:27<00:13, 2.53MiB/s]    Downloading:  87%|████████▋ | 227M/260M [01:28<00:14, 2.22MiB/s]    Downloading:  87%|████████▋ | 227M/260M [01:28<00:15, 2.11MiB/s]    Downloading:  88%|████████▊ | 227M/260M [01:28<00:16, 1.99MiB/s]    Downloading:  88%|████████▊ | 227M/260M [01:28<00:16, 1.95MiB/s]    Downloading:  88%|████████▊ | 228M/260M [01:28<00:14, 2.16MiB/s]    Downloading:  88%|████████▊ | 228M/260M [01:28<00:13, 2.40MiB/s]    Downloading:  88%|████████▊ | 228M/260M [01:28<00:11, 2.64MiB/s]    Downloading:  88%|████████▊ | 229M/260M [01:29<00:11, 2.57MiB/s]    Downloading:  88%|████████▊ | 229M/260M [01:29<00:12, 2.48MiB/s]    Downloading:  88%|████████▊ | 229M/260M [01:29<00:12, 2.44MiB/s]    Downloading:  88%|████████▊ | 230M/260M [01:29<00:11, 2.53MiB/s]    Downloading:  89%|████████▊ | 230M/260M [01:29<00:12, 2.42MiB/s]    Downloading:  89%|████████▊ | 230M/260M [01:29<00:11, 2.53MiB/s]    Downloading:  89%|████████▊ | 230M/260M [01:29<00:12, 2.42MiB/s]    Downloading:  89%|████████▉ | 231M/260M [01:29<00:12, 2.39MiB/s]    Downloading:  89%|████████▉ | 231M/260M [01:29<00:09, 2.89MiB/s]    Downloading:  89%|████████▉ | 231M/260M [01:30<00:09, 3.04MiB/s]    Downloading:  89%|████████▉ | 232M/260M [01:30<00:08, 3.31MiB/s]    Downloading:  89%|████████▉ | 232M/260M [01:30<00:08, 3.37MiB/s]    Downloading:  90%|████████▉ | 232M/260M [01:30<00:08, 3.38MiB/s]    Downloading:  90%|████████▉ | 233M/260M [01:30<00:08, 3.09MiB/s]    Downloading:  90%|████████▉ | 233M/260M [01:30<00:10, 2.64MiB/s]    Downloading:  90%|████████▉ | 233M/260M [01:30<00:11, 2.31MiB/s]    Downloading:  90%|█████████ | 234M/260M [01:30<00:13, 1.95MiB/s]    Downloading:  90%|█████████ | 234M/260M [01:31<00:13, 1.87MiB/s]    Downloading:  90%|█████████ | 234M/260M [01:31<00:16, 1.54MiB/s]    Downloading:  90%|█████████ | 234M/260M [01:31<00:18, 1.35MiB/s]    Downloading:  90%|█████████ | 234M/260M [01:31<00:18, 1.33MiB/s]    Downloading:  90%|█████████ | 235M/260M [01:31<00:18, 1.34MiB/s]    Downloading:  90%|█████████ | 235M/260M [01:31<00:18, 1.34MiB/s]    Downloading:  90%|█████████ | 235M/260M [01:31<00:18, 1.36MiB/s]    Downloading:  91%|█████████ | 235M/260M [01:32<00:19, 1.25MiB/s]    Downloading:  91%|█████████ | 235M/260M [01:32<00:19, 1.26MiB/s]    Downloading:  91%|█████████ | 235M/260M [01:32<00:18, 1.35MiB/s]    Downloading:  91%|█████████ | 235M/260M [01:32<00:23, 1.03MiB/s]    Downloading:  91%|█████████ | 236M/260M [01:32<00:28, 857kiB/s]     Downloading:  91%|█████████ | 236M/260M [01:32<00:32, 734kiB/s]    Downloading:  91%|█████████ | 236M/260M [01:33<00:28, 833kiB/s]    Downloading:  91%|█████████ | 236M/260M [01:33<00:28, 842kiB/s]    Downloading:  91%|█████████ | 236M/260M [01:33<00:24, 981kiB/s]    Downloading:  91%|█████████ | 236M/260M [01:33<00:21, 1.07MiB/s]    Downloading:  91%|█████████ | 236M/260M [01:33<00:21, 1.07MiB/s]    Downloading:  91%|█████████ | 236M/260M [01:33<00:23, 988kiB/s]     Downloading:  91%|█████████ | 236M/260M [01:33<00:23, 996kiB/s]    Downloading:  91%|█████████ | 237M/260M [01:33<00:23, 974kiB/s]    Downloading:  91%|█████████ | 237M/260M [01:33<00:24, 936kiB/s]    Downloading:  91%|█████████ | 237M/260M [01:34<00:25, 877kiB/s]    Downloading:  91%|█████████▏| 237M/260M [01:34<00:25, 889kiB/s]    Downloading:  91%|█████████▏| 237M/260M [01:34<00:25, 883kiB/s]    Downloading:  91%|█████████▏| 237M/260M [01:34<00:26, 858kiB/s]    Downloading:  91%|█████████▏| 237M/260M [01:34<00:26, 839kiB/s]    Downloading:  91%|█████████▏| 237M/260M [01:34<00:29, 748kiB/s]    Downloading:  91%|█████████▏| 237M/260M [01:34<00:30, 738kiB/s]    Downloading:  91%|█████████▏| 237M/260M [01:34<00:28, 770kiB/s]    Downloading:  91%|█████████▏| 237M/260M [01:34<00:27, 794kiB/s]    Downloading:  92%|█████████▏| 238M/260M [01:35<00:27, 799kiB/s]    Downloading:  92%|█████████▏| 238M/260M [01:35<00:24, 876kiB/s]    Downloading:  92%|█████████▏| 238M/260M [01:35<00:25, 860kiB/s]    Downloading:  92%|█████████▏| 238M/260M [01:35<00:18, 1.18MiB/s]    Downloading:  92%|█████████▏| 238M/260M [01:35<00:21, 1.00MiB/s]    Downloading:  92%|█████████▏| 238M/260M [01:35<00:12, 1.64MiB/s]    Downloading:  92%|█████████▏| 239M/260M [01:35<00:11, 1.89MiB/s]    Downloading:  92%|█████████▏| 239M/260M [01:35<00:09, 2.22MiB/s]    Downloading:  92%|█████████▏| 239M/260M [01:36<00:10, 1.92MiB/s]    Downloading:  92%|█████████▏| 240M/260M [01:36<00:07, 2.60MiB/s]    Downloading:  93%|█████████▎| 240M/260M [01:36<00:07, 2.77MiB/s]    Downloading:  93%|█████████▎| 240M/260M [01:36<00:08, 2.37MiB/s]    Downloading:  93%|█████████▎| 241M/260M [01:36<00:08, 2.30MiB/s]    Downloading:  93%|█████████▎| 241M/260M [01:36<00:09, 1.95MiB/s]    Downloading:  93%|█████████▎| 241M/260M [01:36<00:10, 1.74MiB/s]    Downloading:  93%|█████████▎| 241M/260M [01:36<00:09, 1.83MiB/s]    Downloading:  93%|█████████▎| 242M/260M [01:37<00:08, 2.15MiB/s]    Downloading:  93%|█████████▎| 242M/260M [01:37<00:10, 1.75MiB/s]    Downloading:  93%|█████████▎| 242M/260M [01:37<00:08, 1.94MiB/s]    Downloading:  93%|█████████▎| 243M/260M [01:37<00:07, 2.28MiB/s]    Downloading:  94%|█████████▎| 243M/260M [01:37<00:06, 2.44MiB/s]    Downloading:  94%|█████████▎| 243M/260M [01:38<00:28, 574kiB/s]     Downloading:  94%|█████████▎| 243M/260M [01:41<01:19, 205kiB/s]    Downloading:  94%|█████████▍| 243M/260M [01:42<01:14, 216kiB/s]    Downloading:  94%|█████████▍| 244M/260M [01:42<01:04, 248kiB/s]    Downloading:  94%|█████████▍| 244M/260M [01:42<00:56, 285kiB/s]    Downloading:  94%|█████████▍| 244M/260M [01:42<00:49, 322kiB/s]    Downloading:  94%|█████████▍| 244M/260M [01:42<00:30, 511kiB/s]    Downloading:  94%|█████████▍| 244M/260M [01:43<00:18, 817kiB/s]    Downloading:  94%|█████████▍| 245M/260M [01:43<00:12, 1.23MiB/s]    Downloading:  94%|█████████▍| 245M/260M [01:43<00:07, 1.85MiB/s]    Downloading:  95%|█████████▍| 246M/260M [01:43<00:05, 2.39MiB/s]    Downloading:  95%|█████████▍| 246M/260M [01:43<00:05, 2.70MiB/s]    Downloading:  95%|█████████▍| 246M/260M [01:43<00:04, 2.87MiB/s]    Downloading:  95%|█████████▌| 247M/260M [01:43<00:04, 2.66MiB/s]    Downloading:  95%|█████████▌| 247M/260M [01:43<00:05, 2.46MiB/s]    Downloading:  95%|█████████▌| 247M/260M [01:43<00:04, 2.48MiB/s]    Downloading:  95%|█████████▌| 248M/260M [01:44<00:05, 2.26MiB/s]    Downloading:  96%|█████████▌| 248M/260M [01:44<00:05, 2.22MiB/s]    Downloading:  96%|█████████▌| 248M/260M [01:44<00:04, 2.35MiB/s]    Downloading:  96%|█████████▌| 249M/260M [01:44<00:04, 2.62MiB/s]    Downloading:  96%|█████████▌| 249M/260M [01:44<00:03, 2.89MiB/s]    Downloading:  96%|█████████▌| 250M/260M [01:44<00:02, 3.95MiB/s]    Downloading:  96%|█████████▋| 250M/260M [01:44<00:02, 4.48MiB/s]    Downloading:  97%|█████████▋| 251M/260M [01:44<00:01, 5.11MiB/s]    Downloading:  97%|█████████▋| 251M/260M [01:45<00:01, 5.03MiB/s]    Downloading:  97%|█████████▋| 252M/260M [01:45<00:01, 4.58MiB/s]    Downloading:  97%|█████████▋| 252M/260M [01:45<00:01, 4.60MiB/s]    Downloading:  97%|█████████▋| 253M/260M [01:45<00:01, 4.25MiB/s]    Downloading:  98%|█████████▊| 253M/260M [01:45<00:01, 4.40MiB/s]    Downloading:  98%|█████████▊| 254M/260M [01:45<00:01, 4.32MiB/s]    Downloading:  98%|█████████▊| 255M/260M [01:45<00:01, 4.52MiB/s]    Downloading:  98%|█████████▊| 255M/260M [01:45<00:01, 3.86MiB/s]    Downloading:  98%|█████████▊| 255M/260M [01:46<00:01, 3.51MiB/s]    Downloading:  99%|█████████▊| 256M/260M [01:46<00:01, 3.32MiB/s]    Downloading:  99%|█████████▊| 256M/260M [01:46<00:00, 3.48MiB/s]    Downloading:  99%|█████████▉| 257M/260M [01:46<00:00, 3.72MiB/s]    Downloading:  99%|█████████▉| 257M/260M [01:46<00:00, 3.92MiB/s]    Downloading:  99%|█████████▉| 258M/260M [01:46<00:00, 4.04MiB/s]    Downloading:  99%|█████████▉| 258M/260M [01:46<00:00, 4.34MiB/s]    Downloading: 100%|█████████▉| 259M/260M [01:46<00:00, 4.48MiB/s]    Downloading: 100%|█████████▉| 259M/260M [01:46<00:00, 4.30MiB/s]    Downloading: 100%|██████████| 260M/260M [01:46<00:00, 2.43MiB/s]
    Extracting:   0%|          | 0/324045 [00:00<?, ?file/s]    Extracting:   1%|          | 2757/324045 [00:00<00:11, 27566.74file/s]    Extracting:   2%|▏         | 5860/324045 [00:00<00:10, 29597.81file/s]    Extracting:   3%|▎         | 9276/324045 [00:00<00:09, 31678.97file/s]    Extracting:   4%|▍         | 12588/324045 [00:00<00:09, 32244.39file/s]    Extracting:   5%|▍         | 15813/324045 [00:00<00:09, 31788.14file/s]    Extracting:   6%|▌         | 19151/324045 [00:00<00:09, 32322.02file/s]    Extracting:   7%|▋         | 22450/324045 [00:00<00:09, 32538.19file/s]    Extracting:   8%|▊         | 25848/324045 [00:00<00:09, 32994.27file/s]    Extracting:   9%|▉         | 29149/324045 [00:00<00:09, 32074.73file/s]    Extracting:  10%|█         | 32519/324045 [00:01<00:08, 32563.69file/s]    Extracting:  11%|█         | 35786/324045 [00:01<00:08, 32594.24file/s]    Extracting:  12%|█▏        | 39049/324045 [00:01<00:09, 31506.96file/s]    Extracting:  13%|█▎        | 42294/324045 [00:01<00:08, 31781.98file/s]    Extracting:  14%|█▍        | 45480/324045 [00:01<00:08, 30965.22file/s]    Extracting:  15%|█▌        | 48697/324045 [00:01<00:08, 31314.62file/s]    Extracting:  16%|█▌        | 52063/324045 [00:01<00:08, 32002.55file/s]    Extracting:  17%|█▋        | 55355/324045 [00:01<00:08, 32270.67file/s]    Extracting:  18%|█▊        | 58588/324045 [00:01<00:08, 32231.73file/s]    Extracting:  19%|█▉        | 61995/324045 [00:01<00:07, 32777.32file/s]    Extracting:  20%|██        | 65400/324045 [00:02<00:07, 33155.39file/s]    Extracting:  21%|██        | 68775/324045 [00:02<00:07, 33332.18file/s]    Extracting:  22%|██▏       | 72110/324045 [00:02<00:07, 33286.81file/s]    Extracting:  23%|██▎       | 75478/324045 [00:02<00:07, 33402.12file/s]    Extracting:  24%|██▍       | 78820/324045 [00:02<00:07, 33373.42file/s]    Extracting:  25%|██▌       | 82226/324045 [00:02<00:07, 33578.07file/s]    Extracting:  26%|██▋       | 85585/324045 [00:02<00:07, 32914.70file/s]    Extracting:  27%|██▋       | 89049/324045 [00:02<00:07, 33421.77file/s]    Extracting:  29%|██▊       | 92412/324045 [00:02<00:06, 33483.15file/s]    Extracting:  30%|██▉       | 95775/324045 [00:02<00:06, 33525.55file/s]    Extracting:  31%|███       | 99130/324045 [00:03<00:06, 33521.93file/s]    Extracting:  32%|███▏      | 102484/324045 [00:03<00:06, 33490.93file/s]    Extracting:  33%|███▎      | 105936/324045 [00:03<00:06, 33796.91file/s]    Extracting:  34%|███▎      | 109317/324045 [00:03<00:06, 33515.87file/s]    Extracting:  35%|███▍      | 112670/324045 [00:03<00:06, 33441.00file/s]    Extracting:  36%|███▌      | 116015/324045 [00:03<00:06, 32897.22file/s]    Extracting:  37%|███▋      | 119307/324045 [00:03<00:06, 32700.37file/s]    Extracting:  38%|███▊      | 122688/324045 [00:03<00:06, 33027.58file/s]    Extracting:  39%|███▉      | 126068/324045 [00:03<00:05, 33254.94file/s]    Extracting:  40%|███▉      | 129458/324045 [00:03<00:05, 33444.53file/s]    Extracting:  41%|████      | 132969/324045 [00:04<00:05, 33940.91file/s]    Extracting:  42%|████▏     | 136393/324045 [00:04<00:05, 34028.31file/s]    Extracting:  43%|████▎     | 139797/324045 [00:04<00:05, 33787.95file/s]    Extracting:  44%|████▍     | 143177/324045 [00:04<00:05, 33427.95file/s]    Extracting:  45%|████▌     | 146542/324045 [00:04<00:05, 33491.62file/s]    Extracting:  46%|████▋     | 149971/324045 [00:04<00:05, 33726.82file/s]    Extracting:  47%|████▋     | 153345/324045 [00:04<00:05, 33671.71file/s]    Extracting:  48%|████▊     | 156769/324045 [00:04<00:04, 33839.16file/s]    Extracting:  49%|████▉     | 160286/324045 [00:04<00:04, 34234.87file/s]    Extracting:  51%|█████     | 163710/324045 [00:04<00:04, 33994.24file/s]    Extracting:  52%|█████▏    | 167111/324045 [00:05<00:04, 33099.45file/s]    Extracting:  53%|█████▎    | 170427/324045 [00:05<00:04, 33015.21file/s]    Extracting:  54%|█████▎    | 173732/324045 [00:05<00:04, 32870.67file/s]    Extracting:  55%|█████▍    | 177022/324045 [00:05<00:04, 32761.40file/s]    Extracting:  56%|█████▌    | 180300/324045 [00:05<00:04, 32611.83file/s]    Extracting:  57%|█████▋    | 183563/324045 [00:05<00:04, 32300.97file/s]    Extracting:  58%|█████▊    | 186819/324045 [00:05<00:04, 32376.01file/s]    Extracting:  59%|█████▊    | 190269/324045 [00:05<00:04, 33005.24file/s]    Extracting:  60%|█████▉    | 193571/324045 [00:05<00:03, 32660.10file/s]    Extracting:  61%|██████    | 196839/324045 [00:05<00:03, 32426.53file/s]    Extracting:  62%|██████▏   | 200083/324045 [00:06<00:03, 31949.60file/s]    Extracting:  63%|██████▎   | 203389/324045 [00:06<00:03, 32274.00file/s]    Extracting:  64%|██████▍   | 206844/324045 [00:06<00:03, 32944.66file/s]    Extracting:  65%|██████▍   | 210251/324045 [00:06<00:03, 33275.61file/s]    Extracting:  66%|██████▌   | 213581/324045 [00:06<00:03, 32940.83file/s]    Extracting:  67%|██████▋   | 216877/324045 [00:06<00:03, 32558.13file/s]    Extracting:  68%|██████▊   | 220135/324045 [00:06<00:03, 32551.63file/s]    Extracting:  69%|██████▉   | 223392/324045 [00:06<00:03, 32485.06file/s]    Extracting:  70%|██████▉   | 226766/324045 [00:06<00:02, 32855.02file/s]    Extracting:  71%|███████   | 230053/324045 [00:07<00:02, 32517.85file/s]    Extracting:  72%|███████▏  | 233395/324045 [00:07<00:02, 32782.45file/s]    Extracting:  73%|███████▎  | 236724/324045 [00:07<00:02, 32930.76file/s]    Extracting:  74%|███████▍  | 240034/324045 [00:07<00:02, 32959.75file/s]    Extracting:  75%|███████▌  | 243636/324045 [00:07<00:02, 33870.06file/s]    Extracting:  76%|███████▌  | 247024/324045 [00:07<00:02, 33504.65file/s]    Extracting:  77%|███████▋  | 250376/324045 [00:07<00:02, 33050.41file/s]    Extracting:  78%|███████▊  | 253684/324045 [00:07<00:02, 32501.58file/s]    Extracting:  79%|███████▉  | 256937/324045 [00:07<00:02, 32036.23file/s]    Extracting:  80%|████████  | 260143/324045 [00:07<00:02, 31430.01file/s]    Extracting:  81%|████████▏ | 263463/324045 [00:08<00:01, 31941.48file/s]    Extracting:  82%|████████▏ | 266819/324045 [00:08<00:01, 32415.76file/s]    Extracting:  83%|████████▎ | 270065/324045 [00:08<00:01, 31727.94file/s]    Extracting:  84%|████████▍ | 273417/324045 [00:08<00:01, 32248.69file/s]    Extracting:  85%|████████▌ | 276814/324045 [00:08<00:01, 32754.74file/s]    Extracting:  86%|████████▋ | 280094/324045 [00:08<00:01, 32567.11file/s]    Extracting:  87%|████████▋ | 283354/324045 [00:08<00:01, 32439.27file/s]    Extracting:  88%|████████▊ | 286680/324045 [00:08<00:01, 32681.04file/s]    Extracting:  89%|████████▉ | 289950/324045 [00:08<00:01, 32022.11file/s]    Extracting:  90%|█████████ | 293215/324045 [00:08<00:00, 32203.75file/s]    Extracting:  91%|█████████▏| 296439/324045 [00:09<00:00, 32028.91file/s]    Extracting:  92%|█████████▏| 299683/324045 [00:09<00:00, 32147.80file/s]    Extracting:  93%|█████████▎| 302900/324045 [00:09<00:00, 31735.51file/s]    Extracting:  94%|█████████▍| 306116/324045 [00:09<00:00, 31860.00file/s]    Extracting:  95%|█████████▌| 309312/324045 [00:09<00:00, 31887.32file/s]    Extracting:  96%|█████████▋| 312637/324045 [00:09<00:00, 32292.23file/s]    Extracting:  97%|█████████▋| 315868/324045 [00:09<00:00, 31944.64file/s]    Extracting:  99%|█████████▊| 319198/324045 [00:09<00:00, 32344.13file/s]    Extracting: 100%|█████████▉| 322434/324045 [00:09<00:00, 31602.87file/s]    Extracting: 100%|██████████| 324045/324045 [00:09<00:00, 32679.08file/s]
    Extracted to /home/kemove/yyz/av-gihub/tutorials/mmwave_PC_source/
    Using default config file.
    using dataset: MetaFi DATA
    S02 ['A02', 'A03', 'A04', 'A05', 'A14', 'A18', 'A19', 'A21', 'A22', 'A23', 'A27']
    S03 ['A02', 'A03', 'A04', 'A05', 'A13', 'A14', 'A17', 'A18', 'A19', 'A20', 'A21', 'A22']
    S05 ['A02', 'A03', 'A04', 'A05', 'A13', 'A14', 'A17', 'A19', 'A20', 'A21', 'A22', 'A23', 'A27']
    S06 ['A02', 'A04', 'A05', 'A14', 'A17', 'A18', 'A20', 'A21', 'A22', 'A23', 'A27']
    S08 ['A02', 'A03', 'A05', 'A13', 'A14', 'A17', 'A18', 'A19', 'A20', 'A21', 'A23', 'A27']
    S09 ['A02', 'A17', 'A18', 'A20', 'A21', 'A22', 'A23', 'A27']
    S11 ['A02', 'A03', 'A04', 'A13', 'A14', 'A18', 'A20', 'A21', 'A22', 'A23']
    S12 ['A02', 'A05', 'A13', 'A14', 'A17', 'A18', 'A19', 'A20', 'A21', 'A22', 'A27']
    S13 ['A02', 'A04', 'A05', 'A13', 'A14', 'A17', 'A18', 'A19', 'A20', 'A21', 'A27']
    S14 ['A02', 'A03', 'A04', 'A05', 'A13', 'A14', 'A17', 'A18', 'A19', 'A20', 'A21', 'A23']
    S15 ['A02', 'A03', 'A04', 'A05', 'A13', 'A17', 'A19', 'A20', 'A21', 'A22', 'A23', 'A27']
    S16 ['A02', 'A05', 'A13', 'A14', 'A18', 'A19', 'A20', 'A22', 'A23', 'A27']
    S17 ['A02', 'A03', 'A04', 'A05', 'A13', 'A18', 'A19', 'A20', 'A21', 'A23']
    S18 ['A02', 'A03', 'A04', 'A05', 'A13', 'A14', 'A17', 'A18', 'A19', 'A20', 'A21', 'A23', 'A27']
    S19 ['A02', 'A03', 'A05', 'A13', 'A14', 'A17', 'A18', 'A19', 'A20', 'A21', 'A22', 'A23']
    S21 ['A02', 'A03', 'A04', 'A05', 'A13', 'A14', 'A18', 'A20', 'A21', 'A22', 'A23', 'A27']
    S23 ['A02', 'A03', 'A05', 'A13', 'A14', 'A17', 'A18', 'A19', 'A21', 'A22', 'A27']
    S25 ['A02', 'A03', 'A04', 'A13', 'A14', 'A17', 'A18', 'A19', 'A20', 'A21', 'A22', 'A23', 'A27']
    S26 ['A02', 'A03', 'A04', 'A05', 'A13', 'A14', 'A19', 'A20', 'A23']
    S27 ['A02', 'A03', 'A04', 'A05', 'A13', 'A14', 'A17', 'A18', 'A20', 'A21', 'A22', 'A23']
    S28 ['A02', 'A03', 'A04', 'A05', 'A13', 'A17', 'A18', 'A19', 'A21', 'A27']
    S29 ['A02', 'A03', 'A04', 'A05', 'A13', 'A14', 'A17', 'A19', 'A22', 'A23', 'A27']
    S30 ['A02', 'A03', 'A04', 'A05', 'A13', 'A14', 'A17', 'A18', 'A19', 'A22', 'A23', 'A27']
    S31 ['A02', 'A03', 'A04', 'A05', 'A17', 'A18', 'A19', 'A20', 'A21', 'A22', 'A23', 'A27']
    S32 ['A02', 'A03', 'A05', 'A13', 'A14', 'A17', 'A18', 'A19', 'A20', 'A21', 'A22', 'A23', 'A27']
    S33 ['A02', 'A03', 'A04', 'A05', 'A13', 'A14', 'A17', 'A18', 'A19', 'A20', 'A21', 'A22', 'A23', 'A27']
    S34 ['A02', 'A03', 'A04', 'A13', 'A14', 'A17', 'A18', 'A19', 'A23', 'A27']
    S35 ['A02', 'A03', 'A04', 'A05', 'A13', 'A14', 'A17', 'A18', 'A19', 'A20', 'A21', 'A22', 'A23']
    S36 ['A02', 'A03', 'A05', 'A13', 'A19', 'A20', 'A21', 'A22', 'A27']
    S37 ['A02', 'A03', 'A04', 'A05', 'A13', 'A14', 'A17', 'A18', 'A19', 'A20', 'A22', 'A23', 'A27']
    S38 ['A02', 'A04', 'A05', 'A13', 'A17', 'A18', 'A19', 'A20', 'A21', 'A22', 'A23', 'A27']
    S40 ['A02', 'A03', 'A04', 'A05', 'A13', 'A14', 'A17', 'A18', 'A19', 'A21', 'A22', 'A23', 'A27']
    S04 ['A03', 'A04', 'A14', 'A17', 'A20', 'A21', 'A22', 'A27']
    S07 ['A03', 'A04', 'A05', 'A13', 'A14', 'A17', 'A18', 'A19', 'A20', 'A21', 'A22', 'A27']
    S20 ['A03', 'A04', 'A13', 'A14', 'A17', 'A20', 'A21', 'A22', 'A23', 'A27']
    S22 ['A03', 'A04', 'A13', 'A14', 'A17', 'A18', 'A20', 'A21', 'A22', 'A23', 'A27']
    S24 ['A03', 'A04', 'A05', 'A14', 'A17', 'A19', 'A20', 'A21', 'A22', 'A23', 'A27']
    S39 ['A03', 'A04', 'A05', 'A13', 'A14', 'A17', 'A18', 'A19', 'A21', 'A22', 'A23', 'A27']
    S01 ['A04', 'A14', 'A17', 'A18', 'A19', 'A20', 'A22', 'A23', 'A27']
    S10 ['A04', 'A05', 'A18', 'A19', 'A20', 'A22', 'A23', 'A27']
    S01 ['A02', 'A03', 'A05', 'A13', 'A21']
    S04 ['A02', 'A05', 'A13', 'A18', 'A19', 'A23']
    S07 ['A02', 'A23']
    S10 ['A02', 'A03', 'A13', 'A14', 'A17', 'A21']
    S20 ['A02', 'A05', 'A18', 'A19']
    S22 ['A02', 'A05', 'A19']
    S24 ['A02', 'A13', 'A18']
    S39 ['A02', 'A20']
    S06 ['A03', 'A13', 'A19']
    S09 ['A03', 'A04', 'A05', 'A13', 'A14', 'A19']
    S12 ['A03', 'A04', 'A23']
    S13 ['A03', 'A22', 'A23']
    S16 ['A03', 'A04', 'A17', 'A21']
    S38 ['A03', 'A14']
    S08 ['A04', 'A22']
    S19 ['A04', 'A27']
    S23 ['A04', 'A20', 'A23']
    S32 ['A04']
    S36 ['A04', 'A14', 'A17', 'A18', 'A23']
    S11 ['A05', 'A17', 'A19', 'A27']
    S25 ['A05']
    S34 ['A05', 'A20', 'A21', 'A22']
    S02 ['A13', 'A17', 'A20']
    S31 ['A13', 'A14']
    S15 ['A14', 'A18']
    S17 ['A14', 'A17', 'A22', 'A27']
    S28 ['A14', 'A20', 'A22', 'A23']
    S21 ['A17', 'A19']
    S26 ['A17', 'A18', 'A21', 'A22', 'A27']
    S05 ['A18']
    S29 ['A18', 'A20', 'A21']
    S27 ['A19', 'A27']
    S30 ['A20', 'A21']
    S40 ['A20']
    S37 ['A21']
    S14 ['A22', 'A27']
    S18 ['A22']
    S03 ['A23', 'A27']
    S35 ['A27']




.. GENERATED FROM PYTHON SOURCE LINES 40-42

Visualize the PC data
------------------------

.. GENERATED FROM PYTHON SOURCE LINES 44-45

In[6]:

.. GENERATED FROM PYTHON SOURCE LINES 45-54

.. code-block:: Python


    from matplotlib import pyplot as plt
    from pysensing.mmwave.PC.tutorial.plot import plot_3d_graph
    # Example of the samples in the dataset
    index = 10  # Randomly select an index
    pc,pose = train_dataset.__getitem__(index)
    print(pc.shape, type(pose))
    plot_3d_graph(pose, pc[0])




.. image-sg:: /mmwave_PC/images/sphx_glr_mmwave_PC_hpe_tutorial_001.png
   :alt: mmwave PC hpe tutorial
   :srcset: /mmwave_PC/images/sphx_glr_mmwave_PC_hpe_tutorial_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    (5, 150, 5) <class 'torch.Tensor'>




.. GENERATED FROM PYTHON SOURCE LINES 55-57

Create model 
------------------------

.. GENERATED FROM PYTHON SOURCE LINES 59-62

mmFi utilizes PointTransformer model as a baseline hpe method. From model.hpe, we can import 
desired hpe model designed for mmWave PC. The model parameter for PointTransformer reimplemented 
for mmFi is as follows:

.. GENERATED FROM PYTHON SOURCE LINES 64-65

In[7]:

.. GENERATED FROM PYTHON SOURCE LINES 65-75

.. code-block:: Python


    from pysensing.mmwave.PC.model.hpe import PointTransformerReg
    model = PointTransformerReg(
                        input_dim = 5,
                        nblocks = 5,
                        n_p = 17
                    )
    print(model)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    PointTransformerReg(
      (backbone): Backbone(
        (fc1): Sequential(
          (0): Linear(in_features=5, out_features=32, bias=True)
          (1): ReLU()
          (2): Linear(in_features=32, out_features=32, bias=True)
        )
        (transformer1): TransformerBlock(
          (fc1): Linear(in_features=32, out_features=128, bias=True)
          (fc2): Linear(in_features=128, out_features=32, bias=True)
          (fc_delta): Sequential(
            (0): Linear(in_features=3, out_features=128, bias=True)
            (1): ReLU()
            (2): Linear(in_features=128, out_features=128, bias=True)
          )
          (fc_gamma): Sequential(
            (0): Linear(in_features=128, out_features=128, bias=True)
            (1): ReLU()
            (2): Linear(in_features=128, out_features=128, bias=True)
          )
          (w_qs): Linear(in_features=128, out_features=128, bias=False)
          (w_ks): Linear(in_features=128, out_features=128, bias=False)
          (w_vs): Linear(in_features=128, out_features=128, bias=False)
        )
        (transition_downs): ModuleList(
          (0): TransitionDown(
            (conv1): Sequential(
              (0): Conv1d(35, 64, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
            (conv2): Sequential(
              (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
          )
          (1): TransitionDown(
            (conv1): Sequential(
              (0): Conv1d(67, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
            (conv2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
          )
          (2): TransitionDown(
            (conv1): Sequential(
              (0): Conv1d(131, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
            (conv2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
          )
          (3): TransitionDown(
            (conv1): Sequential(
              (0): Conv1d(259, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
            (conv2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
          )
        )
        (transformers): ModuleList(
          (0): TransformerBlock(
            (fc1): Linear(in_features=64, out_features=128, bias=True)
            (fc2): Linear(in_features=128, out_features=64, bias=True)
            (fc_delta): Sequential(
              (0): Linear(in_features=3, out_features=128, bias=True)
              (1): ReLU()
              (2): Linear(in_features=128, out_features=128, bias=True)
            )
            (fc_gamma): Sequential(
              (0): Linear(in_features=128, out_features=128, bias=True)
              (1): ReLU()
              (2): Linear(in_features=128, out_features=128, bias=True)
            )
            (w_qs): Linear(in_features=128, out_features=128, bias=False)
            (w_ks): Linear(in_features=128, out_features=128, bias=False)
            (w_vs): Linear(in_features=128, out_features=128, bias=False)
          )
          (1): TransformerBlock(
            (fc1): Linear(in_features=128, out_features=128, bias=True)
            (fc2): Linear(in_features=128, out_features=128, bias=True)
            (fc_delta): Sequential(
              (0): Linear(in_features=3, out_features=128, bias=True)
              (1): ReLU()
              (2): Linear(in_features=128, out_features=128, bias=True)
            )
            (fc_gamma): Sequential(
              (0): Linear(in_features=128, out_features=128, bias=True)
              (1): ReLU()
              (2): Linear(in_features=128, out_features=128, bias=True)
            )
            (w_qs): Linear(in_features=128, out_features=128, bias=False)
            (w_ks): Linear(in_features=128, out_features=128, bias=False)
            (w_vs): Linear(in_features=128, out_features=128, bias=False)
          )
          (2): TransformerBlock(
            (fc1): Linear(in_features=256, out_features=128, bias=True)
            (fc2): Linear(in_features=128, out_features=256, bias=True)
            (fc_delta): Sequential(
              (0): Linear(in_features=3, out_features=128, bias=True)
              (1): ReLU()
              (2): Linear(in_features=128, out_features=128, bias=True)
            )
            (fc_gamma): Sequential(
              (0): Linear(in_features=128, out_features=128, bias=True)
              (1): ReLU()
              (2): Linear(in_features=128, out_features=128, bias=True)
            )
            (w_qs): Linear(in_features=128, out_features=128, bias=False)
            (w_ks): Linear(in_features=128, out_features=128, bias=False)
            (w_vs): Linear(in_features=128, out_features=128, bias=False)
          )
          (3): TransformerBlock(
            (fc1): Linear(in_features=512, out_features=128, bias=True)
            (fc2): Linear(in_features=128, out_features=512, bias=True)
            (fc_delta): Sequential(
              (0): Linear(in_features=3, out_features=128, bias=True)
              (1): ReLU()
              (2): Linear(in_features=128, out_features=128, bias=True)
            )
            (fc_gamma): Sequential(
              (0): Linear(in_features=128, out_features=128, bias=True)
              (1): ReLU()
              (2): Linear(in_features=128, out_features=128, bias=True)
            )
            (w_qs): Linear(in_features=128, out_features=128, bias=False)
            (w_ks): Linear(in_features=128, out_features=128, bias=False)
            (w_vs): Linear(in_features=128, out_features=128, bias=False)
          )
        )
      )
      (transformer): Transformer(
        (layers): ModuleList(
          (0-4): 5 x ModuleList(
            (0): Residual(
              (fn): PreNorm(
                (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                (fn): Attention(
                  (to_k): Linear(in_features=512, out_features=512, bias=False)
                  (to_v): Linear(in_features=512, out_features=512, bias=False)
                  (to_q): Linear(in_features=512, out_features=512, bias=False)
                  (to_out): Sequential(
                    (0): Linear(in_features=512, out_features=512, bias=True)
                    (1): GELU(approximate='none')
                    (2): Dropout(p=0.0, inplace=False)
                  )
                )
              )
            )
            (1): Residual(
              (fn): PreNorm(
                (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                (fn): FeedForward(
                  (net): Sequential(
                    (0): Linear(in_features=512, out_features=256, bias=True)
                    (1): GELU(approximate='none')
                    (2): Dropout(p=0.0, inplace=False)
                    (3): Linear(in_features=256, out_features=512, bias=True)
                    (4): Dropout(p=0.0, inplace=False)
                  )
                )
              )
            )
          )
        )
      )
      (fc2): Sequential(
        (0): Linear(in_features=512, out_features=256, bias=True)
        (1): Dropout(p=0.0, inplace=False)
        (2): ReLU()
        (3): Linear(in_features=256, out_features=32, bias=True)
      )
      (fc3): Sequential(
        (0): ReLU()
        (1): Linear(in_features=32, out_features=64, bias=True)
        (2): Dropout(p=0.0, inplace=False)
        (3): ReLU()
        (4): Linear(in_features=64, out_features=3, bias=True)
      )
    )




.. GENERATED FROM PYTHON SOURCE LINES 76-77

A shortcut for loading the hpe model to avoid the tedious hyper-parameter setting.

.. GENERATED FROM PYTHON SOURCE LINES 80-81

In[8]:

.. GENERATED FROM PYTHON SOURCE LINES 81-88

.. code-block:: Python



    from pysensing.mmwave.PC.model.hpe import load_hpe_model
    model = load_hpe_model("MetaFi", "PointTransformer")
    print(model)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    PointTransformerReg(
      (backbone): Backbone(
        (fc1): Sequential(
          (0): Linear(in_features=5, out_features=32, bias=True)
          (1): ReLU()
          (2): Linear(in_features=32, out_features=32, bias=True)
        )
        (transformer1): TransformerBlock(
          (fc1): Linear(in_features=32, out_features=128, bias=True)
          (fc2): Linear(in_features=128, out_features=32, bias=True)
          (fc_delta): Sequential(
            (0): Linear(in_features=3, out_features=128, bias=True)
            (1): ReLU()
            (2): Linear(in_features=128, out_features=128, bias=True)
          )
          (fc_gamma): Sequential(
            (0): Linear(in_features=128, out_features=128, bias=True)
            (1): ReLU()
            (2): Linear(in_features=128, out_features=128, bias=True)
          )
          (w_qs): Linear(in_features=128, out_features=128, bias=False)
          (w_ks): Linear(in_features=128, out_features=128, bias=False)
          (w_vs): Linear(in_features=128, out_features=128, bias=False)
        )
        (transition_downs): ModuleList(
          (0): TransitionDown(
            (conv1): Sequential(
              (0): Conv1d(35, 64, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
            (conv2): Sequential(
              (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
          )
          (1): TransitionDown(
            (conv1): Sequential(
              (0): Conv1d(67, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
            (conv2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
          )
          (2): TransitionDown(
            (conv1): Sequential(
              (0): Conv1d(131, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
            (conv2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
          )
          (3): TransitionDown(
            (conv1): Sequential(
              (0): Conv1d(259, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
            (conv2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
          )
        )
        (transformers): ModuleList(
          (0): TransformerBlock(
            (fc1): Linear(in_features=64, out_features=128, bias=True)
            (fc2): Linear(in_features=128, out_features=64, bias=True)
            (fc_delta): Sequential(
              (0): Linear(in_features=3, out_features=128, bias=True)
              (1): ReLU()
              (2): Linear(in_features=128, out_features=128, bias=True)
            )
            (fc_gamma): Sequential(
              (0): Linear(in_features=128, out_features=128, bias=True)
              (1): ReLU()
              (2): Linear(in_features=128, out_features=128, bias=True)
            )
            (w_qs): Linear(in_features=128, out_features=128, bias=False)
            (w_ks): Linear(in_features=128, out_features=128, bias=False)
            (w_vs): Linear(in_features=128, out_features=128, bias=False)
          )
          (1): TransformerBlock(
            (fc1): Linear(in_features=128, out_features=128, bias=True)
            (fc2): Linear(in_features=128, out_features=128, bias=True)
            (fc_delta): Sequential(
              (0): Linear(in_features=3, out_features=128, bias=True)
              (1): ReLU()
              (2): Linear(in_features=128, out_features=128, bias=True)
            )
            (fc_gamma): Sequential(
              (0): Linear(in_features=128, out_features=128, bias=True)
              (1): ReLU()
              (2): Linear(in_features=128, out_features=128, bias=True)
            )
            (w_qs): Linear(in_features=128, out_features=128, bias=False)
            (w_ks): Linear(in_features=128, out_features=128, bias=False)
            (w_vs): Linear(in_features=128, out_features=128, bias=False)
          )
          (2): TransformerBlock(
            (fc1): Linear(in_features=256, out_features=128, bias=True)
            (fc2): Linear(in_features=128, out_features=256, bias=True)
            (fc_delta): Sequential(
              (0): Linear(in_features=3, out_features=128, bias=True)
              (1): ReLU()
              (2): Linear(in_features=128, out_features=128, bias=True)
            )
            (fc_gamma): Sequential(
              (0): Linear(in_features=128, out_features=128, bias=True)
              (1): ReLU()
              (2): Linear(in_features=128, out_features=128, bias=True)
            )
            (w_qs): Linear(in_features=128, out_features=128, bias=False)
            (w_ks): Linear(in_features=128, out_features=128, bias=False)
            (w_vs): Linear(in_features=128, out_features=128, bias=False)
          )
          (3): TransformerBlock(
            (fc1): Linear(in_features=512, out_features=128, bias=True)
            (fc2): Linear(in_features=128, out_features=512, bias=True)
            (fc_delta): Sequential(
              (0): Linear(in_features=3, out_features=128, bias=True)
              (1): ReLU()
              (2): Linear(in_features=128, out_features=128, bias=True)
            )
            (fc_gamma): Sequential(
              (0): Linear(in_features=128, out_features=128, bias=True)
              (1): ReLU()
              (2): Linear(in_features=128, out_features=128, bias=True)
            )
            (w_qs): Linear(in_features=128, out_features=128, bias=False)
            (w_ks): Linear(in_features=128, out_features=128, bias=False)
            (w_vs): Linear(in_features=128, out_features=128, bias=False)
          )
        )
      )
      (transformer): Transformer(
        (layers): ModuleList(
          (0-4): 5 x ModuleList(
            (0): Residual(
              (fn): PreNorm(
                (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                (fn): Attention(
                  (to_k): Linear(in_features=512, out_features=512, bias=False)
                  (to_v): Linear(in_features=512, out_features=512, bias=False)
                  (to_q): Linear(in_features=512, out_features=512, bias=False)
                  (to_out): Sequential(
                    (0): Linear(in_features=512, out_features=512, bias=True)
                    (1): GELU(approximate='none')
                    (2): Dropout(p=0.0, inplace=False)
                  )
                )
              )
            )
            (1): Residual(
              (fn): PreNorm(
                (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                (fn): FeedForward(
                  (net): Sequential(
                    (0): Linear(in_features=512, out_features=256, bias=True)
                    (1): GELU(approximate='none')
                    (2): Dropout(p=0.0, inplace=False)
                    (3): Linear(in_features=256, out_features=512, bias=True)
                    (4): Dropout(p=0.0, inplace=False)
                  )
                )
              )
            )
          )
        )
      )
      (fc2): Sequential(
        (0): Linear(in_features=512, out_features=256, bias=True)
        (1): Dropout(p=0.0, inplace=False)
        (2): ReLU()
        (3): Linear(in_features=256, out_features=32, bias=True)
      )
      (fc3): Sequential(
        (0): ReLU()
        (1): Linear(in_features=32, out_features=64, bias=True)
        (2): Dropout(p=0.0, inplace=False)
        (3): ReLU()
        (4): Linear(in_features=64, out_features=3, bias=True)
      )
    )




.. GENERATED FROM PYTHON SOURCE LINES 89-91

Model Train
------------------------

.. GENERATED FROM PYTHON SOURCE LINES 93-96

pysensing library support quick training of model with the following steps. The training interface 
incorporates pytorch loss functions, optimizers and dataloaders to facilate training. 
An example is provided for how to define the aforemetioned terms.

.. GENERATED FROM PYTHON SOURCE LINES 99-100

In[11]:

.. GENERATED FROM PYTHON SOURCE LINES 100-116

.. code-block:: Python



    # Create pytorch dataloaders
    train_loader = torch.utils.data.DataLoader(train_dataset, shuffle=True, batch_size=16, num_workers=16)
    test_loader = torch.utils.data.DataLoader(test_dataset, batch_size=16, shuffle=False, num_workers=16)

    # Define pytorch loss function as criterion 
    criterion = nn.CrossEntropyLoss()

    # Define pytorch optimizer for training
    optimizer = torch.optim.Adam(model.parameters(), lr=1e-3)

    # GPU acceleration with cuda
    device = torch.device("cuda" if torch.cuda.is_available() else "cpu")









.. GENERATED FROM PYTHON SOURCE LINES 117-118

A quick training using hpe_train. The resulted model parameters will be saved into "train_{num_epochs}.pth".

.. GENERATED FROM PYTHON SOURCE LINES 120-121

In[12]:

.. GENERATED FROM PYTHON SOURCE LINES 121-128

.. code-block:: Python



    # Pysensing training interface
    from pysensing.mmwave.PC.inference.hpe import hpe_train
    # hpe_train(model, train_loader, num_epochs=1, optimizer=optimizer, criterion=criterion, device=device)









.. GENERATED FROM PYTHON SOURCE LINES 129-131

Model inference
------------------------

.. GENERATED FROM PYTHON SOURCE LINES 133-135

Load the pretrained model, e.g. from  https://pysensing.oss-ap-southeast-1.aliyuncs.com/pretrain/mmwave_pc/hpe/MetaFi_PointTransformer.pth 
, and perform human pose estimation!

.. GENERATED FROM PYTHON SOURCE LINES 137-138

In[13]:

.. GENERATED FROM PYTHON SOURCE LINES 138-145

.. code-block:: Python


    # load pretrained model
    from pysensing.mmwave.PC.inference import load_pretrain
    model = load_pretrain(model, "MetaFi", "PointTransformer").to(device)
    model.eval()






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Use pretrained model!

    PointTransformerReg(
      (backbone): Backbone(
        (fc1): Sequential(
          (0): Linear(in_features=5, out_features=32, bias=True)
          (1): ReLU()
          (2): Linear(in_features=32, out_features=32, bias=True)
        )
        (transformer1): TransformerBlock(
          (fc1): Linear(in_features=32, out_features=128, bias=True)
          (fc2): Linear(in_features=128, out_features=32, bias=True)
          (fc_delta): Sequential(
            (0): Linear(in_features=3, out_features=128, bias=True)
            (1): ReLU()
            (2): Linear(in_features=128, out_features=128, bias=True)
          )
          (fc_gamma): Sequential(
            (0): Linear(in_features=128, out_features=128, bias=True)
            (1): ReLU()
            (2): Linear(in_features=128, out_features=128, bias=True)
          )
          (w_qs): Linear(in_features=128, out_features=128, bias=False)
          (w_ks): Linear(in_features=128, out_features=128, bias=False)
          (w_vs): Linear(in_features=128, out_features=128, bias=False)
        )
        (transition_downs): ModuleList(
          (0): TransitionDown(
            (conv1): Sequential(
              (0): Conv1d(35, 64, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
            (conv2): Sequential(
              (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
          )
          (1): TransitionDown(
            (conv1): Sequential(
              (0): Conv1d(67, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
            (conv2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
          )
          (2): TransitionDown(
            (conv1): Sequential(
              (0): Conv1d(131, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
            (conv2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
          )
          (3): TransitionDown(
            (conv1): Sequential(
              (0): Conv1d(259, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
            (conv2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
          )
        )
        (transformers): ModuleList(
          (0): TransformerBlock(
            (fc1): Linear(in_features=64, out_features=128, bias=True)
            (fc2): Linear(in_features=128, out_features=64, bias=True)
            (fc_delta): Sequential(
              (0): Linear(in_features=3, out_features=128, bias=True)
              (1): ReLU()
              (2): Linear(in_features=128, out_features=128, bias=True)
            )
            (fc_gamma): Sequential(
              (0): Linear(in_features=128, out_features=128, bias=True)
              (1): ReLU()
              (2): Linear(in_features=128, out_features=128, bias=True)
            )
            (w_qs): Linear(in_features=128, out_features=128, bias=False)
            (w_ks): Linear(in_features=128, out_features=128, bias=False)
            (w_vs): Linear(in_features=128, out_features=128, bias=False)
          )
          (1): TransformerBlock(
            (fc1): Linear(in_features=128, out_features=128, bias=True)
            (fc2): Linear(in_features=128, out_features=128, bias=True)
            (fc_delta): Sequential(
              (0): Linear(in_features=3, out_features=128, bias=True)
              (1): ReLU()
              (2): Linear(in_features=128, out_features=128, bias=True)
            )
            (fc_gamma): Sequential(
              (0): Linear(in_features=128, out_features=128, bias=True)
              (1): ReLU()
              (2): Linear(in_features=128, out_features=128, bias=True)
            )
            (w_qs): Linear(in_features=128, out_features=128, bias=False)
            (w_ks): Linear(in_features=128, out_features=128, bias=False)
            (w_vs): Linear(in_features=128, out_features=128, bias=False)
          )
          (2): TransformerBlock(
            (fc1): Linear(in_features=256, out_features=128, bias=True)
            (fc2): Linear(in_features=128, out_features=256, bias=True)
            (fc_delta): Sequential(
              (0): Linear(in_features=3, out_features=128, bias=True)
              (1): ReLU()
              (2): Linear(in_features=128, out_features=128, bias=True)
            )
            (fc_gamma): Sequential(
              (0): Linear(in_features=128, out_features=128, bias=True)
              (1): ReLU()
              (2): Linear(in_features=128, out_features=128, bias=True)
            )
            (w_qs): Linear(in_features=128, out_features=128, bias=False)
            (w_ks): Linear(in_features=128, out_features=128, bias=False)
            (w_vs): Linear(in_features=128, out_features=128, bias=False)
          )
          (3): TransformerBlock(
            (fc1): Linear(in_features=512, out_features=128, bias=True)
            (fc2): Linear(in_features=128, out_features=512, bias=True)
            (fc_delta): Sequential(
              (0): Linear(in_features=3, out_features=128, bias=True)
              (1): ReLU()
              (2): Linear(in_features=128, out_features=128, bias=True)
            )
            (fc_gamma): Sequential(
              (0): Linear(in_features=128, out_features=128, bias=True)
              (1): ReLU()
              (2): Linear(in_features=128, out_features=128, bias=True)
            )
            (w_qs): Linear(in_features=128, out_features=128, bias=False)
            (w_ks): Linear(in_features=128, out_features=128, bias=False)
            (w_vs): Linear(in_features=128, out_features=128, bias=False)
          )
        )
      )
      (transformer): Transformer(
        (layers): ModuleList(
          (0-4): 5 x ModuleList(
            (0): Residual(
              (fn): PreNorm(
                (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                (fn): Attention(
                  (to_k): Linear(in_features=512, out_features=512, bias=False)
                  (to_v): Linear(in_features=512, out_features=512, bias=False)
                  (to_q): Linear(in_features=512, out_features=512, bias=False)
                  (to_out): Sequential(
                    (0): Linear(in_features=512, out_features=512, bias=True)
                    (1): GELU(approximate='none')
                    (2): Dropout(p=0.0, inplace=False)
                  )
                )
              )
            )
            (1): Residual(
              (fn): PreNorm(
                (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                (fn): FeedForward(
                  (net): Sequential(
                    (0): Linear(in_features=512, out_features=256, bias=True)
                    (1): GELU(approximate='none')
                    (2): Dropout(p=0.0, inplace=False)
                    (3): Linear(in_features=256, out_features=512, bias=True)
                    (4): Dropout(p=0.0, inplace=False)
                  )
                )
              )
            )
          )
        )
      )
      (fc2): Sequential(
        (0): Linear(in_features=512, out_features=256, bias=True)
        (1): Dropout(p=0.0, inplace=False)
        (2): ReLU()
        (3): Linear(in_features=256, out_features=32, bias=True)
      )
      (fc3): Sequential(
        (0): ReLU()
        (1): Linear(in_features=32, out_features=64, bias=True)
        (2): Dropout(p=0.0, inplace=False)
        (3): ReLU()
        (4): Linear(in_features=64, out_features=3, bias=True)
      )
    )



.. GENERATED FROM PYTHON SOURCE LINES 146-147

Test the model on testing dataset.

.. GENERATED FROM PYTHON SOURCE LINES 149-150

In[14]:

.. GENERATED FROM PYTHON SOURCE LINES 150-153

.. code-block:: Python

    from pysensing.mmwave.PC.inference.hpe import hpe_test
    # hpe_test(model, test_loader, criterion=criterion, device=device)








.. GENERATED FROM PYTHON SOURCE LINES 154-155

Model inference on sample and deep feature embedding of input modality in HPE task.

.. GENERATED FROM PYTHON SOURCE LINES 157-158

In[15]:

.. GENERATED FROM PYTHON SOURCE LINES 158-173

.. code-block:: Python


    # Model inference
    idx = 5
    points, pose= test_dataset.__getitem__(idx)
    points = torch.tensor(points).unsqueeze(0).float().to(device)
    predicted_result = model(points)
    print("The predicted pose is {}, while the ground truth is {}".format(predicted_result.cpu(),pose))

    # Deep feature embedding
    from pysensing.mmwave.PC.inference.embedding import embedding
    emb = embedding(input = points, model=model, dataset_name = "MetaFi", model_name = "PointTransformer", device=device)
    print("The shape of feature embedding is: ", emb.shape)







.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    The predicted pose is tensor([[[-0.1173,  0.0153,  3.0501],
             [-0.2115,  0.0201,  3.0561],
             [-0.2253,  0.3597,  3.0622],
             [-0.2422,  0.7359,  3.0763],
             [ 0.0275, -0.0367,  3.0689],
             [ 0.0280,  0.3391,  3.0850],
             [ 0.0785,  0.7612,  3.1082],
             [-0.1009, -0.2694,  3.0435],
             [-0.0911, -0.5694,  3.0297],
             [-0.0988, -0.6771,  3.0037],
             [-0.1014, -0.7289,  3.0262],
             [ 0.0349, -0.5211,  3.0320],
             [ 0.2234, -0.4632,  2.9763],
             [ 0.1240, -0.5344,  2.8526],
             [-0.1986, -0.5264,  3.0985],
             [-0.3517, -0.4574,  3.0666],
             [-0.2247, -0.4776,  2.9470]]], grad_fn=<ToCopyBackward0>), while the ground truth is tensor([[-0.0626, -0.0378,  3.3111],
            [-0.1724, -0.0395,  3.3111],
            [-0.1786,  0.3689,  3.3083],
            [-0.2026,  0.7605,  3.3111],
            [ 0.0473, -0.0362,  3.3111],
            [ 0.0633,  0.3689,  3.3111],
            [ 0.0673,  0.7605,  3.3111],
            [-0.0685, -0.3322,  3.3016],
            [-0.0744, -0.6267,  3.2920],
            [-0.0642, -0.7458,  3.2512],
            [-0.0653, -0.8049,  3.2850],
            [ 0.0914, -0.5671,  3.3118],
            [ 0.3367, -0.5248,  3.3104],
            [ 0.2930, -0.5677,  3.0678],
            [-0.2505, -0.5671,  3.3131],
            [-0.5012, -0.5671,  3.3116],
            [-0.4514, -0.5674,  3.0686]])
    The shape of feature embedding is:  torch.Size([1, 17, 32])




.. GENERATED FROM PYTHON SOURCE LINES 174-176

mmDiff: diffusion model for mmWave radar HPE
------------------------

.. GENERATED FROM PYTHON SOURCE LINES 178-185

Load Diffusion Runner with model initialized. This process will define the setting for model and dataset. Currently two settings are implemented: 
1. "mmBody + P4Transformer": 
    Phase 1: Input [b, 4, 5000, 6]; Output: [b, 17, 3] and [b, 17, 64]. 
    Phase 2: GRC, LRC, TMC, SLC
2. "MetaFi + PointTransformer": 
    Phase 1: Input [b, 5, 150, 5]; Output: [b, 17, 3] and [b, 17, 32]. 
    Phase 2: GRC, TMC, SLC

.. GENERATED FROM PYTHON SOURCE LINES 187-188

In[16]:

.. GENERATED FROM PYTHON SOURCE LINES 188-192

.. code-block:: Python

    from pysensing.mmwave.PC.model.hpe.mmDiff.load_mmDiff import load_mmDiff
    mmDiffRunner = load_mmDiff("MetaFi")






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Self.model_feat vadility passes.
    MMdiff using PointTransformer as feature extractor.




.. GENERATED FROM PYTHON SOURCE LINES 193-196

Phase 1 Training: Can train phase 1 from scratch (is_train = True) or load pretrained phase 1 model (is_train = False).
 Set is_save = True to facilitate phase 2 training acceleration.
If phase 1 features are saved, set is_save = False.

.. GENERATED FROM PYTHON SOURCE LINES 198-199

In[17]:

.. GENERATED FROM PYTHON SOURCE LINES 199-202

.. code-block:: Python


    mmDiffRunner.phase1_train(train_dataset, test_dataset, is_train=False, is_save=False)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Phase 1 use pretrained model!




.. GENERATED FROM PYTHON SOURCE LINES 203-204

Phase 1 can also receive self defined model and the model should follow the setting defined above. The Self-defined model should output coarse joints and coarse joint features.

.. GENERATED FROM PYTHON SOURCE LINES 206-207

In[18]:

.. GENERATED FROM PYTHON SOURCE LINES 207-218

.. code-block:: Python


    # Self defined model should output coarse joints and coarse joint features
    from pysensing.mmwave.PC.model.hpe.pointTrans import PointTransformerReg_feat
    model = PointTransformerReg_feat(
                        input_dim = 5,
                        nblocks = 5,
                        n_p = 17
                    )
    print(model)
    mmDiffRunner.phase1_train(train_dataset, test_dataset, model_self=model, is_train=False, is_save=False)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    PointTransformerReg_feat(
      (backbone): Backbone(
        (fc1): Sequential(
          (0): Linear(in_features=5, out_features=32, bias=True)
          (1): ReLU()
          (2): Linear(in_features=32, out_features=32, bias=True)
        )
        (transformer1): TransformerBlock(
          (fc1): Linear(in_features=32, out_features=128, bias=True)
          (fc2): Linear(in_features=128, out_features=32, bias=True)
          (fc_delta): Sequential(
            (0): Linear(in_features=3, out_features=128, bias=True)
            (1): ReLU()
            (2): Linear(in_features=128, out_features=128, bias=True)
          )
          (fc_gamma): Sequential(
            (0): Linear(in_features=128, out_features=128, bias=True)
            (1): ReLU()
            (2): Linear(in_features=128, out_features=128, bias=True)
          )
          (w_qs): Linear(in_features=128, out_features=128, bias=False)
          (w_ks): Linear(in_features=128, out_features=128, bias=False)
          (w_vs): Linear(in_features=128, out_features=128, bias=False)
        )
        (transition_downs): ModuleList(
          (0): TransitionDown(
            (conv1): Sequential(
              (0): Conv1d(35, 64, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
            (conv2): Sequential(
              (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
          )
          (1): TransitionDown(
            (conv1): Sequential(
              (0): Conv1d(67, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
            (conv2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
          )
          (2): TransitionDown(
            (conv1): Sequential(
              (0): Conv1d(131, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
            (conv2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
          )
          (3): TransitionDown(
            (conv1): Sequential(
              (0): Conv1d(259, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
            (conv2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
          )
        )
        (transformers): ModuleList(
          (0): TransformerBlock(
            (fc1): Linear(in_features=64, out_features=128, bias=True)
            (fc2): Linear(in_features=128, out_features=64, bias=True)
            (fc_delta): Sequential(
              (0): Linear(in_features=3, out_features=128, bias=True)
              (1): ReLU()
              (2): Linear(in_features=128, out_features=128, bias=True)
            )
            (fc_gamma): Sequential(
              (0): Linear(in_features=128, out_features=128, bias=True)
              (1): ReLU()
              (2): Linear(in_features=128, out_features=128, bias=True)
            )
            (w_qs): Linear(in_features=128, out_features=128, bias=False)
            (w_ks): Linear(in_features=128, out_features=128, bias=False)
            (w_vs): Linear(in_features=128, out_features=128, bias=False)
          )
          (1): TransformerBlock(
            (fc1): Linear(in_features=128, out_features=128, bias=True)
            (fc2): Linear(in_features=128, out_features=128, bias=True)
            (fc_delta): Sequential(
              (0): Linear(in_features=3, out_features=128, bias=True)
              (1): ReLU()
              (2): Linear(in_features=128, out_features=128, bias=True)
            )
            (fc_gamma): Sequential(
              (0): Linear(in_features=128, out_features=128, bias=True)
              (1): ReLU()
              (2): Linear(in_features=128, out_features=128, bias=True)
            )
            (w_qs): Linear(in_features=128, out_features=128, bias=False)
            (w_ks): Linear(in_features=128, out_features=128, bias=False)
            (w_vs): Linear(in_features=128, out_features=128, bias=False)
          )
          (2): TransformerBlock(
            (fc1): Linear(in_features=256, out_features=128, bias=True)
            (fc2): Linear(in_features=128, out_features=256, bias=True)
            (fc_delta): Sequential(
              (0): Linear(in_features=3, out_features=128, bias=True)
              (1): ReLU()
              (2): Linear(in_features=128, out_features=128, bias=True)
            )
            (fc_gamma): Sequential(
              (0): Linear(in_features=128, out_features=128, bias=True)
              (1): ReLU()
              (2): Linear(in_features=128, out_features=128, bias=True)
            )
            (w_qs): Linear(in_features=128, out_features=128, bias=False)
            (w_ks): Linear(in_features=128, out_features=128, bias=False)
            (w_vs): Linear(in_features=128, out_features=128, bias=False)
          )
          (3): TransformerBlock(
            (fc1): Linear(in_features=512, out_features=128, bias=True)
            (fc2): Linear(in_features=128, out_features=512, bias=True)
            (fc_delta): Sequential(
              (0): Linear(in_features=3, out_features=128, bias=True)
              (1): ReLU()
              (2): Linear(in_features=128, out_features=128, bias=True)
            )
            (fc_gamma): Sequential(
              (0): Linear(in_features=128, out_features=128, bias=True)
              (1): ReLU()
              (2): Linear(in_features=128, out_features=128, bias=True)
            )
            (w_qs): Linear(in_features=128, out_features=128, bias=False)
            (w_ks): Linear(in_features=128, out_features=128, bias=False)
            (w_vs): Linear(in_features=128, out_features=128, bias=False)
          )
        )
      )
      (transformer): Transformer(
        (layers): ModuleList(
          (0-4): 5 x ModuleList(
            (0): Residual(
              (fn): PreNorm(
                (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                (fn): Attention(
                  (to_k): Linear(in_features=512, out_features=512, bias=False)
                  (to_v): Linear(in_features=512, out_features=512, bias=False)
                  (to_q): Linear(in_features=512, out_features=512, bias=False)
                  (to_out): Sequential(
                    (0): Linear(in_features=512, out_features=512, bias=True)
                    (1): GELU(approximate='none')
                    (2): Dropout(p=0.0, inplace=False)
                  )
                )
              )
            )
            (1): Residual(
              (fn): PreNorm(
                (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
                (fn): FeedForward(
                  (net): Sequential(
                    (0): Linear(in_features=512, out_features=256, bias=True)
                    (1): GELU(approximate='none')
                    (2): Dropout(p=0.0, inplace=False)
                    (3): Linear(in_features=256, out_features=512, bias=True)
                    (4): Dropout(p=0.0, inplace=False)
                  )
                )
              )
            )
          )
        )
      )
      (fc2): Sequential(
        (0): Linear(in_features=512, out_features=256, bias=True)
        (1): Dropout(p=0.0, inplace=False)
        (2): ReLU()
        (3): Linear(in_features=256, out_features=32, bias=True)
      )
      (fc3): Sequential(
        (0): ReLU()
        (1): Linear(in_features=32, out_features=64, bias=True)
        (2): Dropout(p=0.0, inplace=False)
        (3): ReLU()
        (4): Linear(in_features=64, out_features=3, bias=True)
      )
    )
    Self.model_feat vadility passes.
    Phase 1 use self defined model!




.. GENERATED FROM PYTHON SOURCE LINES 219-220

Phase 2 Training: Can train from scratch (is_train = True) or load pretrained phase 2 model (is_train = False).

.. GENERATED FROM PYTHON SOURCE LINES 222-223

In[19]:

.. GENERATED FROM PYTHON SOURCE LINES 223-226

.. code-block:: Python


    mmDiffRunner.phase2_train(train_loader = None, is_train = False)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Phase 2 use pretrained model!




.. GENERATED FROM PYTHON SOURCE LINES 227-228

Testing mmDiff

.. GENERATED FROM PYTHON SOURCE LINES 230-231

In[20]:

.. GENERATED FROM PYTHON SOURCE LINES 231-233

.. code-block:: Python


    #mmDiffRunner.test()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (3 minutes 45.346 seconds)


.. _sphx_glr_download_mmwave_PC_mmwave_PC_hpe_tutorial.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: mmwave_PC_hpe_tutorial.ipynb <mmwave_PC_hpe_tutorial.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: mmwave_PC_hpe_tutorial.py <mmwave_PC_hpe_tutorial.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
