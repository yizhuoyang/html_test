
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "rssi/acoustic_filter_tutorial.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_rssi_acoustic_filter_tutorial.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_rssi_acoustic_filter_tutorial.py:


Acoustic Preprocessing.Filter Tutorial
==============================================================

.. GENERATED FROM PYTHON SOURCE LINES 7-10

.. code-block:: Python


    # !pip install pysensing








.. GENERATED FROM PYTHON SOURCE LINES 11-13

In this tutorial, we will be implementing a simple acoustic.preprocessing.filtering


.. GENERATED FROM PYTHON SOURCE LINES 13-20

.. code-block:: Python

    import torch
    import torchaudio
    import matplotlib.pyplot as plt
    import pysensing.acoustic.preprocessing.filtering as filtering
    import pysensing.acoustic.preprocessing.transform as transform
    import matplotlib.gridspec as gridspec








.. GENERATED FROM PYTHON SOURCE LINES 21-23

Load the audio
-----------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 23-53

.. code-block:: Python


    # First, the example audio is loaded

    # Define the plot function
    def plot_wave_and_spec(waveform,sample_rate):
        specgram = transform.spectrogram()(waveform)
        specgram = transform.amplitude2db()(specgram)
        n_fft = waveform.size(-1)
        freqs = torch.linspace(0, sample_rate / 2, int(n_fft / 2) + 1)

        plt.figure(figsize=(10, 6))
        plt.subplot(2, 1, 1)
        plt.imshow(specgram[0].squeeze().numpy(), aspect='auto', origin='lower', cmap='inferno', extent=[0, waveform.size(1) / sample_rate, 0, sample_rate / 2])
        plt.title('Spectrogram')
        plt.ylim(0,5000)
        plt.xlabel('Time (s)')
        plt.ylabel('Frequency (Hz)')

        plt.subplot(2, 1, 2)
        plt.plot(waveform.t().numpy())
        plt.title('Waveform')
        plt.xlabel('Sample')
        plt.ylabel('Amplitude')
        plt.tight_layout()
        plt.show()

    # Load the data
    waveform, sample_rate = torchaudio.load('example_data/example_audio.wav')
    #plot the original audio data and spectrogram
    plot_wave_and_spec(waveform,sample_rate)



.. image-sg:: /rssi/images/sphx_glr_acoustic_filter_tutorial_001.png
   :alt: Spectrogram, Waveform
   :srcset: /rssi/images/sphx_glr_acoustic_filter_tutorial_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 54-57

1. High pass filter
------------------------
Use high pass filter

.. GENERATED FROM PYTHON SOURCE LINES 57-62

.. code-block:: Python


    highpass_trans = filtering.highpass(sample_rate=44100,cutoff_freq=2000.0)
    highpass       = highpass_trans(waveform)
    plot_wave_and_spec(highpass,sample_rate)




.. image-sg:: /rssi/images/sphx_glr_acoustic_filter_tutorial_002.png
   :alt: Spectrogram, Waveform
   :srcset: /rssi/images/sphx_glr_acoustic_filter_tutorial_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 63-66

2. Low pass filter
------------------------
Use low pass filter

.. GENERATED FROM PYTHON SOURCE LINES 66-70

.. code-block:: Python


    lowpass_trans = filtering.lowpass(sample_rate=44100,cutoff_freq=200.0)
    lowpass       = lowpass_trans(waveform)
    plot_wave_and_spec(lowpass,sample_rate)



.. image-sg:: /rssi/images/sphx_glr_acoustic_filter_tutorial_003.png
   :alt: Spectrogram, Waveform
   :srcset: /rssi/images/sphx_glr_acoustic_filter_tutorial_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 71-74

3. Bandpass filter
------------------------
Use bandpass filter

.. GENERATED FROM PYTHON SOURCE LINES 74-79

.. code-block:: Python


    bandpass_trans = filtering.bandpass(sample_rate=44100,central_freq=1000)
    bandpass       = bandpass_trans(waveform)
    plot_wave_and_spec(bandpass,sample_rate)




.. image-sg:: /rssi/images/sphx_glr_acoustic_filter_tutorial_004.png
   :alt: Spectrogram, Waveform
   :srcset: /rssi/images/sphx_glr_acoustic_filter_tutorial_004.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 80-83

4. Bandreject filter
------------------------
Use bandreject filter

.. GENERATED FROM PYTHON SOURCE LINES 83-88

.. code-block:: Python


    bandreject_trans = filtering.bandreject(sample_rate=44100,central_freq=1000)
    bandreject       = bandreject_trans(waveform)
    plot_wave_and_spec(bandreject,sample_rate)




.. image-sg:: /rssi/images/sphx_glr_acoustic_filter_tutorial_005.png
   :alt: Spectrogram, Waveform
   :srcset: /rssi/images/sphx_glr_acoustic_filter_tutorial_005.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 89-92

5. Allpass filter
------------------------
Use allpass filter

.. GENERATED FROM PYTHON SOURCE LINES 92-95

.. code-block:: Python

    allpass_trans = filtering.allpass(sample_rate=44100,central_freq=2000)
    allpass     = allpass_trans(waveform)
    plot_wave_and_spec(allpass,sample_rate)



.. image-sg:: /rssi/images/sphx_glr_acoustic_filter_tutorial_006.png
   :alt: Spectrogram, Waveform
   :srcset: /rssi/images/sphx_glr_acoustic_filter_tutorial_006.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 96-97

And that's it. We're done with our acoustic preprocessing tutorials. Thanks for reading.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.678 seconds)


.. _sphx_glr_download_rssi_acoustic_filter_tutorial.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: acoustic_filter_tutorial.ipynb <acoustic_filter_tutorial.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: acoustic_filter_tutorial.py <acoustic_filter_tutorial.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
