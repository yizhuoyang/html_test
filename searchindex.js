Search.setIndex({"docnames": ["acoustic/Acoustic", "acoustic/augmentation", "acoustic/datasets", "acoustic/generated/augmentation/signal_aug/pysensing.acoustic.augmentation.signal_aug.add_atempo", "acoustic/generated/augmentation/signal_aug/pysensing.acoustic.augmentation.signal_aug.add_chorus", "acoustic/generated/augmentation/signal_aug/pysensing.acoustic.augmentation.signal_aug.add_echo", "acoustic/generated/augmentation/signal_aug/pysensing.acoustic.augmentation.signal_aug.add_noise", "acoustic/generated/augmentation/spectrogram_aug/pysensing.acoustic.augmentation.spectrogram_aug.frequencymasking", "acoustic/generated/augmentation/spectrogram_aug/pysensing.acoustic.augmentation.spectrogram_aug.timemasking", "acoustic/generated/augmentation/spectrogram_aug/pysensing.acoustic.augmentation.spectrogram_aug.timestretch", "acoustic/generated/datasets/get_dataloader/pysensing.acoustic.datasets.get_dataloader.load_har_dataset", "acoustic/generated/datasets/get_dataloader/pysensing.acoustic.datasets.get_dataloader.load_hgr_dataset", "acoustic/generated/datasets/get_dataloader/pysensing.acoustic.datasets.get_dataloader.load_hpe_dataset", "acoustic/generated/datasets/get_dataloader/pysensing.acoustic.datasets.get_dataloader.load_ped_det_dataset", "acoustic/generated/datasets/har/pysensing.acoustic.datasets.har.AudioIMU", "acoustic/generated/datasets/har/pysensing.acoustic.datasets.har.SAMoSA", "acoustic/generated/datasets/hgr/pysensing.acoustic.datasets.hgr.AMG", "acoustic/generated/datasets/hpe/pysensing.acoustic.datasets.hpe.SoundPose2DDataset", "acoustic/generated/datasets/hpe/pysensing.acoustic.datasets.hpe.SoundPoseLSTMDataset", "acoustic/generated/datasets/ped_det/pysensing.acoustic.datasets.ped_det.AFPILD", "acoustic/generated/datasets/ped_det/pysensing.acoustic.datasets.ped_det.AVPed", "acoustic/generated/inference/embedding/pysensing.acoustic.inference.embedding.har_embedding", "acoustic/generated/inference/embedding/pysensing.acoustic.inference.embedding.hpe_embedding", "acoustic/generated/inference/embedding/pysensing.acoustic.inference.embedding.ped_det_embedding", "acoustic/generated/inference/predict/pysensing.acoustic.inference.predict.har_predict", "acoustic/generated/inference/predict/pysensing.acoustic.inference.predict.hpe_predict", "acoustic/generated/inference/predict/pysensing.acoustic.inference.predict.ped_det_predict", "acoustic/generated/inference/training/pysensing.acoustic.inference.training.AFPILD_utils.testing.afpild_testing", "acoustic/generated/inference/training/pysensing.acoustic.inference.training.AFPILD_utils.training.afpild_train", "acoustic/generated/inference/training/pysensing.acoustic.inference.training.AcousticPose_utils.hpe_test.evaluate_model", "acoustic/generated/inference/training/pysensing.acoustic.inference.training.AcousticPose_utils.hpe_train.train_model", "acoustic/generated/inference/training/pysensing.acoustic.inference.training.har_train.har_test", "acoustic/generated/inference/training/pysensing.acoustic.inference.training.har_train.har_train_val", "acoustic/generated/inference/training/pysensing.acoustic.inference.training.ped_det_train.ped_det_test", "acoustic/generated/inference/training/pysensing.acoustic.inference.training.ped_det_train.ped_det_train", "acoustic/generated/models/get_model/pysensing.acoustic.models.get_model.load_har_model", "acoustic/generated/models/get_model/pysensing.acoustic.models.get_model.load_hpe_model", "acoustic/generated/models/get_model/pysensing.acoustic.models.get_model.load_ped_det_model", "acoustic/generated/models/har/pysensing.acoustic.models.har.HAR_AUDIOCNN", "acoustic/generated/models/har/pysensing.acoustic.models.har.HAR_SAMCNN", "acoustic/generated/models/hpe/pysensing.acoustic.models.hpe.Speech2pose", "acoustic/generated/models/hpe/pysensing.acoustic.models.hpe.Wipose_LSTM", "acoustic/generated/models/ped_det/pysensing.acoustic.models.ped_det.PED_CNN", "acoustic/generated/models/ped_det/pysensing.acoustic.models.ped_det.PED_CRNN", "acoustic/generated/preprocessing/filtering/pysensing.acoustic.preprocessing.filtering.allpass", "acoustic/generated/preprocessing/filtering/pysensing.acoustic.preprocessing.filtering.bandpass", "acoustic/generated/preprocessing/filtering/pysensing.acoustic.preprocessing.filtering.bandreject", "acoustic/generated/preprocessing/filtering/pysensing.acoustic.preprocessing.filtering.highpass", "acoustic/generated/preprocessing/filtering/pysensing.acoustic.preprocessing.filtering.lowpass", "acoustic/generated/preprocessing/transform/pysensing.acoustic.preprocessing.transform.GCC", "acoustic/generated/preprocessing/transform/pysensing.acoustic.preprocessing.transform.amplitude2db", "acoustic/generated/preprocessing/transform/pysensing.acoustic.preprocessing.transform.inversespectrogram", "acoustic/generated/preprocessing/transform/pysensing.acoustic.preprocessing.transform.ipd", "acoustic/generated/preprocessing/transform/pysensing.acoustic.preprocessing.transform.istft", "acoustic/generated/preprocessing/transform/pysensing.acoustic.preprocessing.transform.melspectrogram", "acoustic/generated/preprocessing/transform/pysensing.acoustic.preprocessing.transform.mfcc", "acoustic/generated/preprocessing/transform/pysensing.acoustic.preprocessing.transform.spectrogram", "acoustic/generated/preprocessing/transform/pysensing.acoustic.preprocessing.transform.stft", "acoustic/inference", "acoustic/models", "acoustic/preprocessing", "acoustic/training", "bluetooth/augmentation", "bluetooth/bluetooth", "bluetooth/datasets", "bluetooth/generated/augmentation/synchronization/pysensing.bluetooth.augmentation.synchronization.Synchronizer", "bluetooth/generated/dataset/wmu_ble_loc/pysensing.bluetooth.datasets.wmu_ble_loc.WMUBLELoc_Dataset", "bluetooth/generated/datasets/amazonas_indoor_env/pysensing.bluetooth.datasets.amazonas_indoor_env.AmazonasIndoorEnv_Dataset", "bluetooth/generated/models/Localization_fingerprinting/pysensing.bluetooth.models.localization.fingerprinting.CNN", "bluetooth/generated/models/Localization_fingerprinting/pysensing.bluetooth.models.localization.fingerprinting.LSTM", "bluetooth/generated/models/Localization_fingerprinting/pysensing.bluetooth.models.localization.fingerprinting.MLP", "bluetooth/generated/models/Localization_fingerprinting/pysensing.bluetooth.models.localization.fingerprinting.WKNN", "bluetooth/generated/models/Localization_triangulation/pysensing.bluetooth.models.localization.triangulation.BaseDistanceRegressor", "bluetooth/generated/models/Localization_triangulation/pysensing.bluetooth.models.localization.triangulation.Triangulator", "bluetooth/generated/preprocessing/filtering/pysensing.bluetooth.preprocessing.filtering.average_filter", "bluetooth/generated/preprocessing/filtering/pysensing.bluetooth.preprocessing.filtering.median_filter", "bluetooth/generated/preprocessing/filtering/pysensing.bluetooth.preprocessing.filtering.remove_nan", "bluetooth/generated/preprocessing/transform/pysensing.bluetooth.preprocessing.transform.normalization", "bluetooth/generated/preprocessing/transform/pysensing.bluetooth.preprocessing.transform.standardization", "bluetooth/models", "bluetooth/preprocessing", "csi/augmentation", "csi/csi", "csi/datasets", "csi/generated/augmentation/adding_noise/pysensing.csi.augmentation.adding_noise.add_noise", "csi/generated/augmentation/adding_noise/pysensing.csi.augmentation.adding_noise.dropout", "csi/generated/augmentation/deformation/pysensing.csi.augmentation.deformation.spectrum_scaling", "csi/generated/augmentation/deformation/pysensing.csi.augmentation.deformation.spectrum_shifting", "csi/generated/augmentation/deformation/pysensing.csi.augmentation.deformation.time_stretching", "csi/generated/dataset/get_dataloader/pysensing.csi.dataset.get_dataloader.load_classification_dataset", "csi/generated/dataset/get_dataloader/pysensing.csi.dataset.get_dataloader.load_hpe_dataset", "csi/generated/dataset/har/pysensing.csi.dataset.har.NTUFi_HAR", "csi/generated/dataset/har/pysensing.csi.dataset.har.UT_HAR", "csi/generated/dataset/har/pysensing.csi.dataset.har.Widar3", "csi/generated/dataset/hid/pysensing.csi.dataset.hid.NTUFi_HumanID", "csi/generated/dataset/hpe/pysensing.csi.dataset.hpe.MetaFi_Dataset", "csi/generated/dataset/hpe/pysensing.csi.dataset.hpe.WiPose", "csi/generated/dataset/reconstruction/pysensing.csi.dataset.reconstruction.HandFi", "csi/generated/inference/embedding/pysensing.csi.inference.embedding.har_csi_embedding", "csi/generated/inference/embedding/pysensing.csi.inference.embedding.hid_csi_embedding", "csi/generated/inference/embedding/pysensing.csi.inference.embedding.hpe_csi_embedding", "csi/generated/inference/embedding/pysensing.csi.inference.embedding.recon_csi_embedding", "csi/generated/inference/predict/pysensing.csi.inference.predict.har_predict", "csi/generated/inference/predict/pysensing.csi.inference.predict.hid_predict", "csi/generated/inference/predict/pysensing.csi.inference.predict.hpe_predict", "csi/generated/inference/predict/pysensing.csi.inference.predict.recon_predict", "csi/generated/inference/train/pysensing.csi.inference.train.har_train", "csi/generated/inference/train/pysensing.csi.inference.train.hid_train", "csi/generated/inference/train/pysensing.csi.inference.train.hpe_train", "csi/generated/inference/train/pysensing.csi.inference.train.recon_train", "csi/generated/load_raw/load_raw_from_atheros/pysensing.csi.load_raw.load_raw_from_atheros.load_raw_bin", "csi/generated/load_raw/load_raw_from_atheros/pysensing.csi.load_raw.load_raw_from_atheros.load_raw_msg", "csi/generated/model/get_model/pysensing.csi.model.get_model.load_har_model", "csi/generated/model/get_model/pysensing.csi.model.get_model.load_hid_model", "csi/generated/model/get_model/pysensing.csi.model.get_model.load_pretrain", "csi/generated/model/get_model/pysensing.csi.model.get_model.load_recon_model", "csi/generated/model/har/pysensing.csi.model.har.ResNet", "csi/generated/model/har/pysensing.csi.model.har.har_BiLSTM", "csi/generated/model/har/pysensing.csi.model.har.har_CNN_GRU", "csi/generated/model/har/pysensing.csi.model.har.har_GRU", "csi/generated/model/har/pysensing.csi.model.har.har_LSTM", "csi/generated/model/har/pysensing.csi.model.har.har_LeNet", "csi/generated/model/har/pysensing.csi.model.har.har_MLP", "csi/generated/model/har/pysensing.csi.model.har.har_RNN", "csi/generated/model/har/pysensing.csi.model.har.har_ViT", "csi/generated/model/hid/pysensing.csi.model.hid.ResNet", "csi/generated/model/hid/pysensing.csi.model.hid.hid_BiLSTM", "csi/generated/model/hid/pysensing.csi.model.hid.hid_CNN_GRU", "csi/generated/model/hid/pysensing.csi.model.hid.hid_GRU", "csi/generated/model/hid/pysensing.csi.model.hid.hid_LSTM", "csi/generated/model/hid/pysensing.csi.model.hid.hid_LeNet", "csi/generated/model/hid/pysensing.csi.model.hid.hid_MLP", "csi/generated/model/hid/pysensing.csi.model.hid.hid_RNN", "csi/generated/model/hid/pysensing.csi.model.hid.hid_ViT", "csi/generated/model/hpe/pysensing.csi.model.hpe.WPFormer", "csi/generated/model/hpe/pysensing.csi.model.hpe.WPNet", "csi/generated/model/reconstruction/pysensing.csi.model.reconstruction.CSI_AutoEncoder", "csi/generated/preprocessing/denoising/pysensing.csi.preprocessing.denoising.bandpass_filter", "csi/generated/preprocessing/denoising/pysensing.csi.preprocessing.denoising.dwt", "csi/generated/preprocessing/denoising/pysensing.csi.preprocessing.denoising.elliptic_filter", "csi/generated/preprocessing/denoising/pysensing.csi.preprocessing.denoising.lowpass_filter", "csi/generated/preprocessing/denoising/pysensing.csi.preprocessing.denoising.pca", "csi/generated/preprocessing/denoising/pysensing.csi.preprocessing.denoising.stft", "csi/generated/preprocessing/transform/pysensing.csi.preprocessing.transform.normalization", "csi/generated/preprocessing/transform/pysensing.csi.preprocessing.transform.remove_nan", "csi/inference", "csi/load_raw", "csi/models", "csi/preprocessing", "index", "intraoral_scan/augmentation", "intraoral_scan/generated/augmentation/ta_aug/pysensing.intraoral_scan.augmentation.ta_aug.random_augmentation", "intraoral_scan/generated/inference/ta_predict/pysensing.intraoral_scan.inference.ta_predict.predict", "intraoral_scan/generated/inference/ts_predict/pysensing.intraoral_scan.inference.ts_predict.predict", "intraoral_scan/generated/inference/ts_predict/pysensing.intraoral_scan.inference.ts_predict.visualization", "intraoral_scan/generated/inference/utils/segmenter/pysensing.intraoral_scan.inference.utils.segmenter.Segmenter", "intraoral_scan/generated/inference/utils/ta_dataloader/pysensing.intraoral_scan.inference.utils.ta_dataloader.DataLoader", "intraoral_scan/generated/inference/utils/ta_dataloader/pysensing.intraoral_scan.inference.utils.ta_dataloader.load_process", "intraoral_scan/generated/inference/utils/ts_dataloader/pysensing.intraoral_scan.inference.utils.ts_dataloader.extract_data_from_root", "intraoral_scan/generated/inference/utils/ts_dataloader/pysensing.intraoral_scan.inference.utils.ts_dataloader.load", "intraoral_scan/generated/inference/utils/ts_utils/pysensing.intraoral_scan.inference.utils.ts_utils.create_colors", "intraoral_scan/generated/inference/utils/ts_utils/pysensing.intraoral_scan.inference.utils.ts_utils.generate_findices", "intraoral_scan/generated/inference/utils/ts_utils/pysensing.intraoral_scan.inference.utils.ts_utils.to_dec", "intraoral_scan/generated/models/tooth_alignment/curvenet/pysensing.intraoral_scan.models.tooth_alignment.curvenet.CurveNet", "intraoral_scan/generated/models/tooth_alignment/dgcnn/pysensing.intraoral_scan.models.tooth_alignment.dgcnn.DGCNN", "intraoral_scan/generated/models/tooth_alignment/dgcnn/pysensing.intraoral_scan.models.tooth_alignment.dgcnn.Encoder", "intraoral_scan/generated/models/tooth_alignment/dgcnn/pysensing.intraoral_scan.models.tooth_alignment.dgcnn.get_graph_feature", "intraoral_scan/generated/models/tooth_alignment/dgcnn/pysensing.intraoral_scan.models.tooth_alignment.dgcnn.knn", "intraoral_scan/generated/models/tooth_alignment/tanet/pysensing.intraoral_scan.models.tooth_alignment.tanet.GRUCell", "intraoral_scan/generated/models/tooth_alignment/tanet/pysensing.intraoral_scan.models.tooth_alignment.tanet.PointNet", "intraoral_scan/generated/models/tooth_alignment/tanet/pysensing.intraoral_scan.models.tooth_alignment.tanet.TANet", "intraoral_scan/generated/models/tooth_alignment/tanet/pysensing.intraoral_scan.models.tooth_alignment.tanet.custom_max", "intraoral_scan/generated/models/tooth_segmentation/dbganet/pysensing.intraoral_scan.models.tooth_segmentation.dbganet.DBGANet", "intraoral_scan/generated/models/tooth_segmentation/dbganet/pysensing.intraoral_scan.models.tooth_segmentation.dbganet.GaussProjection", "intraoral_scan/generated/models/tooth_segmentation/dbganet/pysensing.intraoral_scan.models.tooth_segmentation.dbganet.get_graph_feature", "intraoral_scan/generated/models/tooth_segmentation/dbganet/pysensing.intraoral_scan.models.tooth_segmentation.dbganet.knn", "intraoral_scan/generated/models/tooth_segmentation/dbganet_utils/pysensing.intraoral_scan.models.tooth_segmentation.dbganet_utils.PointNetSetAbstractionMsg", "intraoral_scan/generated/models/tooth_segmentation/dbganet_utils/pysensing.intraoral_scan.models.tooth_segmentation.dbganet_utils.centroid", "intraoral_scan/generated/models/tooth_segmentation/dbganet_utils/pysensing.intraoral_scan.models.tooth_segmentation.dbganet_utils.farthest_point_sample", "intraoral_scan/generated/models/tooth_segmentation/dbganet_utils/pysensing.intraoral_scan.models.tooth_segmentation.dbganet_utils.index_points", "intraoral_scan/generated/models/tooth_segmentation/dbganet_utils/pysensing.intraoral_scan.models.tooth_segmentation.dbganet_utils.pc_normalize", "intraoral_scan/generated/models/tooth_segmentation/dbganet_utils/pysensing.intraoral_scan.models.tooth_segmentation.dbganet_utils.query_ball_point", "intraoral_scan/generated/models/tooth_segmentation/dbganet_utils/pysensing.intraoral_scan.models.tooth_segmentation.dbganet_utils.square_distance", "intraoral_scan/generated/models/tooth_segmentation/dgcnn/pysensing.intraoral_scan.models.tooth_segmentation.dgcnn.DGCNN_partseg", "intraoral_scan/generated/models/tooth_segmentation/dgcnn/pysensing.intraoral_scan.models.tooth_segmentation.dgcnn.Transform_Net", "intraoral_scan/generated/models/tooth_segmentation/dgcnn/pysensing.intraoral_scan.models.tooth_segmentation.dgcnn.get_graph_feature", "intraoral_scan/generated/models/tooth_segmentation/dgcnn/pysensing.intraoral_scan.models.tooth_segmentation.dgcnn.knn", "intraoral_scan/generated/models/tooth_segmentation/pct/pysensing.intraoral_scan.models.tooth_segmentation.pct.Local_op", "intraoral_scan/generated/models/tooth_segmentation/pct/pysensing.intraoral_scan.models.tooth_segmentation.pct.PCT", "intraoral_scan/generated/models/tooth_segmentation/pct/pysensing.intraoral_scan.models.tooth_segmentation.pct.Point_Transformer_Last", "intraoral_scan/generated/models/tooth_segmentation/pct/pysensing.intraoral_scan.models.tooth_segmentation.pct.SA_Layer", "intraoral_scan/generated/models/tooth_segmentation/pct_utils/pysensing.intraoral_scan.models.tooth_segmentation.pct_utils.index_points", "intraoral_scan/generated/models/tooth_segmentation/pct_utils/pysensing.intraoral_scan.models.tooth_segmentation.pct_utils.knn_point", "intraoral_scan/generated/models/tooth_segmentation/pct_utils/pysensing.intraoral_scan.models.tooth_segmentation.pct_utils.sample_and_group", "intraoral_scan/generated/models/tooth_segmentation/pct_utils/pysensing.intraoral_scan.models.tooth_segmentation.pct_utils.square_distance", "intraoral_scan/generated/preprocessing/ta_pre/pysensing.intraoral_scan.preprocessing.ta_pre.load", "intraoral_scan/generated/preprocessing/ta_pre/pysensing.intraoral_scan.preprocessing.ta_pre.main", "intraoral_scan/generated/preprocessing/ta_utils/pysensing.intraoral_scan.preprocessing.ta_utils.QuatMul", "intraoral_scan/generated/preprocessing/ta_utils/pysensing.intraoral_scan.preprocessing.ta_utils.QuatRotate", "intraoral_scan/generated/preprocessing/ta_utils/pysensing.intraoral_scan.preprocessing.ta_utils.getAxis", "intraoral_scan/generated/preprocessing/ta_utils/pysensing.intraoral_scan.preprocessing.ta_utils.getTooth", "intraoral_scan/generated/preprocessing/ta_utils/pysensing.intraoral_scan.preprocessing.ta_utils.get_idx_dirs", "intraoral_scan/generated/preprocessing/ta_utils/pysensing.intraoral_scan.preprocessing.ta_utils.quaternion_to_matrix", "intraoral_scan/generated/preprocessing/ta_utils/pysensing.intraoral_scan.preprocessing.ta_utils.showTooth", "intraoral_scan/generated/preprocessing/ta_utils/pysensing.intraoral_scan.preprocessing.ta_utils.trans_pred", "intraoral_scan/generated/preprocessing/ts_pre/pysensing.intraoral_scan.preprocessing.ts_pre.extract_feature_labels", "intraoral_scan/generated/preprocessing/ts_pre/pysensing.intraoral_scan.preprocessing.ts_pre.get_neighbors", "intraoral_scan/generated/preprocessing/ts_pre/pysensing.intraoral_scan.preprocessing.ts_pre.get_vertices_defined_curvature", "intraoral_scan/generated/preprocessing/ts_pre/pysensing.intraoral_scan.preprocessing.ts_pre.multithreading_pre", "intraoral_scan/generated/preprocessing/ts_pre/pysensing.intraoral_scan.preprocessing.ts_pre.process_part_folders", "intraoral_scan/inference", "intraoral_scan/intraoral_scan", "intraoral_scan/models", "intraoral_scan/preprocessing", "mmwave_PC/datasets", "mmwave_PC/generated/datasets/har/pysensing.mmwave.PC.dataset.har.load_har_dataset", "mmwave_PC/generated/datasets/har/pysensing.mmwave.PC.dataset.har.radHAR", "mmwave_PC/generated/datasets/hgr/pysensing.mmwave.PC.dataset.hgr.MGesture", "mmwave_PC/generated/datasets/hgr/pysensing.mmwave.PC.dataset.hgr.load_hgr_dataset", "mmwave_PC/generated/datasets/hpe/pysensing.mmwave.PC.dataset.hpe.MMBody", "mmwave_PC/generated/datasets/hpe/pysensing.mmwave.PC.dataset.hpe.MetaFi_Dataset", "mmwave_PC/generated/datasets/hpe/pysensing.mmwave.PC.dataset.hpe.load_hpe_dataset", "mmwave_PC/generated/inference/har/pysensing.mmwave.PC.inference.har.har_test", "mmwave_PC/generated/inference/har/pysensing.mmwave.PC.inference.har.har_train", "mmwave_PC/generated/inference/hgr/pysensing.mmwave.PC.inference.hgr.hgr_test", "mmwave_PC/generated/inference/hgr/pysensing.mmwave.PC.inference.hgr.hgr_train", "mmwave_PC/generated/inference/hpe/pysensing.mmwave.PC.inference.hpe.hpe_test", "mmwave_PC/generated/inference/hpe/pysensing.mmwave.PC.inference.hpe.hpe_train", "mmwave_PC/generated/models/har/pysensing.mmwave.PC.model.har.har_LSTM", "mmwave_PC/generated/models/har/pysensing.mmwave.PC.model.har.har_MLP", "mmwave_PC/generated/models/hgr/pysensing.mmwave.PC.model.hgr.EVL_NN", "mmwave_PC/generated/models/hpe/pysensing.mmwave.PC.model.hpe.P4Transformer", "mmwave_PC/generated/models/hpe/pysensing.mmwave.PC.model.hpe.PointTransformerReg", "mmwave_PC/generated/preprocessing/sliding_window/pysensing.mmwave.PC.preprocessing.sliding_window.sliding_window", "mmwave_PC/generated/preprocessing/uniform/pysensing.mmwave.PC.preprocessing.uniform.cropping", "mmwave_PC/generated/preprocessing/uniform/pysensing.mmwave.PC.preprocessing.uniform.load_from_raw", "mmwave_PC/generated/preprocessing/uniform/pysensing.mmwave.PC.preprocessing.uniform.padding", "mmwave_PC/generated/preprocessing/uniform/pysensing.mmwave.PC.preprocessing.uniform.voxelizing", "mmwave_PC/inference", "mmwave_PC/mmwave_PC", "mmwave_PC/models", "mmwave_PC/preprocessing", "mmwave_raw/datasets", "mmwave_raw/generated/datasets/CubeLearn/pysensing.mmwave_raw.dataset.CubeLearn.Gesture_Dataset", "mmwave_raw/generated/inference/embedding/pysensing.mmwave_raw.inference.embedding.embedding", "mmwave_raw/generated/inference/embedding/pysensing.mmwave_raw.inference.embedding.get_intermediate_output", "mmwave_raw/generated/inference/har/pysensing.mmwave_raw.inference.har.har_test", "mmwave_raw/generated/inference/har/pysensing.mmwave_raw.inference.har.har_train", "mmwave_raw/generated/inference/har/pysensing.mmwave_raw.inference.har.har_train_val", "mmwave_raw/generated/inference/hgr/pysensing.mmwave_raw.inference.hgr.hgr_test", "mmwave_raw/generated/inference/hgr/pysensing.mmwave_raw.inference.hgr.hgr_train", "mmwave_raw/generated/inference/hgr/pysensing.mmwave_raw.inference.hgr.hgr_train_val", "mmwave_raw/generated/models/network/pysensing.mmwave_raw.models.network.AOA_Fourier_Net", "mmwave_raw/generated/models/network/pysensing.mmwave_raw.models.network.AT_2DCNN", "mmwave_raw/generated/models/network/pysensing.mmwave_raw.models.network.DAT_2DCNNLSTM", "mmwave_raw/generated/models/network/pysensing.mmwave_raw.models.network.DAT_3DCNN", "mmwave_raw/generated/models/network/pysensing.mmwave_raw.models.network.DT_2DCNN", "mmwave_raw/generated/models/network/pysensing.mmwave_raw.models.network.Doppler_Fourier_Net", "mmwave_raw/generated/models/network/pysensing.mmwave_raw.models.network.Doppler_Fourier_Net_Small", "mmwave_raw/generated/models/network/pysensing.mmwave_raw.models.network.RAT_2DCNNLSTM", "mmwave_raw/generated/models/network/pysensing.mmwave_raw.models.network.RAT_3DCNN", "mmwave_raw/generated/models/network/pysensing.mmwave_raw.models.network.RDAT_3DCNNLSTM", "mmwave_raw/generated/models/network/pysensing.mmwave_raw.models.network.RDT_2DCNNLSTM", "mmwave_raw/generated/models/network/pysensing.mmwave_raw.models.network.RDT_3DCNN", "mmwave_raw/generated/models/network/pysensing.mmwave_raw.models.network.RT_2DCNN", "mmwave_raw/generated/models/network/pysensing.mmwave_raw.models.network.Range_Fourier_Net", "mmwave_raw/generated/models/network/pysensing.mmwave_raw.models.network.Range_Fourier_Net_Small", "mmwave_raw/inference", "mmwave_raw/mmwave_raw", "mmwave_raw/models", "rssi/augmentation", "rssi/datasets", "rssi/generated/augmentation/synchronization/pysensing.rssi.augmentation.synchronization.Synchronizer", "rssi/generated/datasets/uji_indoor_loc/pysensing.rssi.datasets.uji_indoor_loc.UJIIndoorLoc_Dataset", "rssi/generated/models/Localization_fingerprinting/pysensing.rssi.models.localization.fingerprinting.CNN", "rssi/generated/models/Localization_fingerprinting/pysensing.rssi.models.localization.fingerprinting.CNNLoc1D", "rssi/generated/models/Localization_fingerprinting/pysensing.rssi.models.localization.fingerprinting.LSTM", "rssi/generated/models/Localization_fingerprinting/pysensing.rssi.models.localization.fingerprinting.MLP", "rssi/generated/models/Localization_fingerprinting/pysensing.rssi.models.localization.fingerprinting.WKNN", "rssi/generated/models/Localization_triangulation/pysensing.rssi.models.localization.triangulation.BaseDistanceRegressor", "rssi/generated/models/Localization_triangulation/pysensing.rssi.models.localization.triangulation.Triangulator", "rssi/generated/preprocessing/filtering/pysensing.rssi.preprocessing.filtering.average_filter", "rssi/generated/preprocessing/filtering/pysensing.rssi.preprocessing.filtering.median_filter", "rssi/generated/preprocessing/filtering/pysensing.rssi.preprocessing.filtering.remove_nan", "rssi/generated/preprocessing/transform/pysensing.rssi.preprocessing.transform.normalization", "rssi/generated/preprocessing/transform/pysensing.rssi.preprocessing.transform.standardization", "rssi/generated/pysensing.rssi.datasets.ntu_iot_rssi.NTUIoTRSSI_Dataset", "rssi/models", "rssi/preprocessing", "rssi/rssi"], "filenames": ["acoustic/Acoustic.rst", "acoustic/augmentation.rst", "acoustic/datasets.rst", "acoustic/generated/augmentation/signal_aug/pysensing.acoustic.augmentation.signal_aug.add_atempo.rst", "acoustic/generated/augmentation/signal_aug/pysensing.acoustic.augmentation.signal_aug.add_chorus.rst", "acoustic/generated/augmentation/signal_aug/pysensing.acoustic.augmentation.signal_aug.add_echo.rst", "acoustic/generated/augmentation/signal_aug/pysensing.acoustic.augmentation.signal_aug.add_noise.rst", "acoustic/generated/augmentation/spectrogram_aug/pysensing.acoustic.augmentation.spectrogram_aug.frequencymasking.rst", "acoustic/generated/augmentation/spectrogram_aug/pysensing.acoustic.augmentation.spectrogram_aug.timemasking.rst", "acoustic/generated/augmentation/spectrogram_aug/pysensing.acoustic.augmentation.spectrogram_aug.timestretch.rst", "acoustic/generated/datasets/get_dataloader/pysensing.acoustic.datasets.get_dataloader.load_har_dataset.rst", "acoustic/generated/datasets/get_dataloader/pysensing.acoustic.datasets.get_dataloader.load_hgr_dataset.rst", "acoustic/generated/datasets/get_dataloader/pysensing.acoustic.datasets.get_dataloader.load_hpe_dataset.rst", "acoustic/generated/datasets/get_dataloader/pysensing.acoustic.datasets.get_dataloader.load_ped_det_dataset.rst", "acoustic/generated/datasets/har/pysensing.acoustic.datasets.har.AudioIMU.rst", "acoustic/generated/datasets/har/pysensing.acoustic.datasets.har.SAMoSA.rst", "acoustic/generated/datasets/hgr/pysensing.acoustic.datasets.hgr.AMG.rst", "acoustic/generated/datasets/hpe/pysensing.acoustic.datasets.hpe.SoundPose2DDataset.rst", "acoustic/generated/datasets/hpe/pysensing.acoustic.datasets.hpe.SoundPoseLSTMDataset.rst", "acoustic/generated/datasets/ped_det/pysensing.acoustic.datasets.ped_det.AFPILD.rst", "acoustic/generated/datasets/ped_det/pysensing.acoustic.datasets.ped_det.AVPed.rst", "acoustic/generated/inference/embedding/pysensing.acoustic.inference.embedding.har_embedding.rst", "acoustic/generated/inference/embedding/pysensing.acoustic.inference.embedding.hpe_embedding.rst", "acoustic/generated/inference/embedding/pysensing.acoustic.inference.embedding.ped_det_embedding.rst", "acoustic/generated/inference/predict/pysensing.acoustic.inference.predict.har_predict.rst", "acoustic/generated/inference/predict/pysensing.acoustic.inference.predict.hpe_predict.rst", "acoustic/generated/inference/predict/pysensing.acoustic.inference.predict.ped_det_predict.rst", "acoustic/generated/inference/training/pysensing.acoustic.inference.training.AFPILD_utils.testing.afpild_testing.rst", "acoustic/generated/inference/training/pysensing.acoustic.inference.training.AFPILD_utils.training.afpild_train.rst", "acoustic/generated/inference/training/pysensing.acoustic.inference.training.AcousticPose_utils.hpe_test.evaluate_model.rst", "acoustic/generated/inference/training/pysensing.acoustic.inference.training.AcousticPose_utils.hpe_train.train_model.rst", "acoustic/generated/inference/training/pysensing.acoustic.inference.training.har_train.har_test.rst", "acoustic/generated/inference/training/pysensing.acoustic.inference.training.har_train.har_train_val.rst", "acoustic/generated/inference/training/pysensing.acoustic.inference.training.ped_det_train.ped_det_test.rst", "acoustic/generated/inference/training/pysensing.acoustic.inference.training.ped_det_train.ped_det_train.rst", "acoustic/generated/models/get_model/pysensing.acoustic.models.get_model.load_har_model.rst", "acoustic/generated/models/get_model/pysensing.acoustic.models.get_model.load_hpe_model.rst", "acoustic/generated/models/get_model/pysensing.acoustic.models.get_model.load_ped_det_model.rst", "acoustic/generated/models/har/pysensing.acoustic.models.har.HAR_AUDIOCNN.rst", "acoustic/generated/models/har/pysensing.acoustic.models.har.HAR_SAMCNN.rst", "acoustic/generated/models/hpe/pysensing.acoustic.models.hpe.Speech2pose.rst", "acoustic/generated/models/hpe/pysensing.acoustic.models.hpe.Wipose_LSTM.rst", "acoustic/generated/models/ped_det/pysensing.acoustic.models.ped_det.PED_CNN.rst", "acoustic/generated/models/ped_det/pysensing.acoustic.models.ped_det.PED_CRNN.rst", "acoustic/generated/preprocessing/filtering/pysensing.acoustic.preprocessing.filtering.allpass.rst", "acoustic/generated/preprocessing/filtering/pysensing.acoustic.preprocessing.filtering.bandpass.rst", "acoustic/generated/preprocessing/filtering/pysensing.acoustic.preprocessing.filtering.bandreject.rst", "acoustic/generated/preprocessing/filtering/pysensing.acoustic.preprocessing.filtering.highpass.rst", "acoustic/generated/preprocessing/filtering/pysensing.acoustic.preprocessing.filtering.lowpass.rst", "acoustic/generated/preprocessing/transform/pysensing.acoustic.preprocessing.transform.GCC.rst", "acoustic/generated/preprocessing/transform/pysensing.acoustic.preprocessing.transform.amplitude2db.rst", "acoustic/generated/preprocessing/transform/pysensing.acoustic.preprocessing.transform.inversespectrogram.rst", "acoustic/generated/preprocessing/transform/pysensing.acoustic.preprocessing.transform.ipd.rst", "acoustic/generated/preprocessing/transform/pysensing.acoustic.preprocessing.transform.istft.rst", "acoustic/generated/preprocessing/transform/pysensing.acoustic.preprocessing.transform.melspectrogram.rst", "acoustic/generated/preprocessing/transform/pysensing.acoustic.preprocessing.transform.mfcc.rst", "acoustic/generated/preprocessing/transform/pysensing.acoustic.preprocessing.transform.spectrogram.rst", "acoustic/generated/preprocessing/transform/pysensing.acoustic.preprocessing.transform.stft.rst", "acoustic/inference.rst", "acoustic/models.rst", "acoustic/preprocessing.rst", "acoustic/training.rst", "bluetooth/augmentation.rst", "bluetooth/bluetooth.rst", "bluetooth/datasets.rst", "bluetooth/generated/augmentation/synchronization/pysensing.bluetooth.augmentation.synchronization.Synchronizer.rst", "bluetooth/generated/dataset/wmu_ble_loc/pysensing.bluetooth.datasets.wmu_ble_loc.WMUBLELoc_Dataset.rst", "bluetooth/generated/datasets/amazonas_indoor_env/pysensing.bluetooth.datasets.amazonas_indoor_env.AmazonasIndoorEnv_Dataset.rst", "bluetooth/generated/models/Localization_fingerprinting/pysensing.bluetooth.models.localization.fingerprinting.CNN.rst", "bluetooth/generated/models/Localization_fingerprinting/pysensing.bluetooth.models.localization.fingerprinting.LSTM.rst", "bluetooth/generated/models/Localization_fingerprinting/pysensing.bluetooth.models.localization.fingerprinting.MLP.rst", "bluetooth/generated/models/Localization_fingerprinting/pysensing.bluetooth.models.localization.fingerprinting.WKNN.rst", "bluetooth/generated/models/Localization_triangulation/pysensing.bluetooth.models.localization.triangulation.BaseDistanceRegressor.rst", "bluetooth/generated/models/Localization_triangulation/pysensing.bluetooth.models.localization.triangulation.Triangulator.rst", "bluetooth/generated/preprocessing/filtering/pysensing.bluetooth.preprocessing.filtering.average_filter.rst", "bluetooth/generated/preprocessing/filtering/pysensing.bluetooth.preprocessing.filtering.median_filter.rst", "bluetooth/generated/preprocessing/filtering/pysensing.bluetooth.preprocessing.filtering.remove_nan.rst", "bluetooth/generated/preprocessing/transform/pysensing.bluetooth.preprocessing.transform.normalization.rst", "bluetooth/generated/preprocessing/transform/pysensing.bluetooth.preprocessing.transform.standardization.rst", "bluetooth/models.rst", "bluetooth/preprocessing.rst", "csi/augmentation.rst", "csi/csi.rst", "csi/datasets.rst", "csi/generated/augmentation/adding_noise/pysensing.csi.augmentation.adding_noise.add_noise.rst", "csi/generated/augmentation/adding_noise/pysensing.csi.augmentation.adding_noise.dropout.rst", "csi/generated/augmentation/deformation/pysensing.csi.augmentation.deformation.spectrum_scaling.rst", "csi/generated/augmentation/deformation/pysensing.csi.augmentation.deformation.spectrum_shifting.rst", "csi/generated/augmentation/deformation/pysensing.csi.augmentation.deformation.time_stretching.rst", "csi/generated/dataset/get_dataloader/pysensing.csi.dataset.get_dataloader.load_classification_dataset.rst", "csi/generated/dataset/get_dataloader/pysensing.csi.dataset.get_dataloader.load_hpe_dataset.rst", "csi/generated/dataset/har/pysensing.csi.dataset.har.NTUFi_HAR.rst", "csi/generated/dataset/har/pysensing.csi.dataset.har.UT_HAR.rst", "csi/generated/dataset/har/pysensing.csi.dataset.har.Widar3.rst", "csi/generated/dataset/hid/pysensing.csi.dataset.hid.NTUFi_HumanID.rst", "csi/generated/dataset/hpe/pysensing.csi.dataset.hpe.MetaFi_Dataset.rst", "csi/generated/dataset/hpe/pysensing.csi.dataset.hpe.WiPose.rst", "csi/generated/dataset/reconstruction/pysensing.csi.dataset.reconstruction.HandFi.rst", "csi/generated/inference/embedding/pysensing.csi.inference.embedding.har_csi_embedding.rst", "csi/generated/inference/embedding/pysensing.csi.inference.embedding.hid_csi_embedding.rst", "csi/generated/inference/embedding/pysensing.csi.inference.embedding.hpe_csi_embedding.rst", "csi/generated/inference/embedding/pysensing.csi.inference.embedding.recon_csi_embedding.rst", "csi/generated/inference/predict/pysensing.csi.inference.predict.har_predict.rst", "csi/generated/inference/predict/pysensing.csi.inference.predict.hid_predict.rst", "csi/generated/inference/predict/pysensing.csi.inference.predict.hpe_predict.rst", "csi/generated/inference/predict/pysensing.csi.inference.predict.recon_predict.rst", "csi/generated/inference/train/pysensing.csi.inference.train.har_train.rst", "csi/generated/inference/train/pysensing.csi.inference.train.hid_train.rst", "csi/generated/inference/train/pysensing.csi.inference.train.hpe_train.rst", "csi/generated/inference/train/pysensing.csi.inference.train.recon_train.rst", "csi/generated/load_raw/load_raw_from_atheros/pysensing.csi.load_raw.load_raw_from_atheros.load_raw_bin.rst", "csi/generated/load_raw/load_raw_from_atheros/pysensing.csi.load_raw.load_raw_from_atheros.load_raw_msg.rst", "csi/generated/model/get_model/pysensing.csi.model.get_model.load_har_model.rst", "csi/generated/model/get_model/pysensing.csi.model.get_model.load_hid_model.rst", "csi/generated/model/get_model/pysensing.csi.model.get_model.load_pretrain.rst", "csi/generated/model/get_model/pysensing.csi.model.get_model.load_recon_model.rst", "csi/generated/model/har/pysensing.csi.model.har.ResNet.rst", "csi/generated/model/har/pysensing.csi.model.har.har_BiLSTM.rst", "csi/generated/model/har/pysensing.csi.model.har.har_CNN_GRU.rst", "csi/generated/model/har/pysensing.csi.model.har.har_GRU.rst", "csi/generated/model/har/pysensing.csi.model.har.har_LSTM.rst", "csi/generated/model/har/pysensing.csi.model.har.har_LeNet.rst", "csi/generated/model/har/pysensing.csi.model.har.har_MLP.rst", "csi/generated/model/har/pysensing.csi.model.har.har_RNN.rst", "csi/generated/model/har/pysensing.csi.model.har.har_ViT.rst", "csi/generated/model/hid/pysensing.csi.model.hid.ResNet.rst", "csi/generated/model/hid/pysensing.csi.model.hid.hid_BiLSTM.rst", "csi/generated/model/hid/pysensing.csi.model.hid.hid_CNN_GRU.rst", "csi/generated/model/hid/pysensing.csi.model.hid.hid_GRU.rst", "csi/generated/model/hid/pysensing.csi.model.hid.hid_LSTM.rst", "csi/generated/model/hid/pysensing.csi.model.hid.hid_LeNet.rst", "csi/generated/model/hid/pysensing.csi.model.hid.hid_MLP.rst", "csi/generated/model/hid/pysensing.csi.model.hid.hid_RNN.rst", "csi/generated/model/hid/pysensing.csi.model.hid.hid_ViT.rst", "csi/generated/model/hpe/pysensing.csi.model.hpe.WPFormer.rst", "csi/generated/model/hpe/pysensing.csi.model.hpe.WPNet.rst", "csi/generated/model/reconstruction/pysensing.csi.model.reconstruction.CSI_AutoEncoder.rst", "csi/generated/preprocessing/denoising/pysensing.csi.preprocessing.denoising.bandpass_filter.rst", "csi/generated/preprocessing/denoising/pysensing.csi.preprocessing.denoising.dwt.rst", "csi/generated/preprocessing/denoising/pysensing.csi.preprocessing.denoising.elliptic_filter.rst", "csi/generated/preprocessing/denoising/pysensing.csi.preprocessing.denoising.lowpass_filter.rst", "csi/generated/preprocessing/denoising/pysensing.csi.preprocessing.denoising.pca.rst", "csi/generated/preprocessing/denoising/pysensing.csi.preprocessing.denoising.stft.rst", "csi/generated/preprocessing/transform/pysensing.csi.preprocessing.transform.normalization.rst", "csi/generated/preprocessing/transform/pysensing.csi.preprocessing.transform.remove_nan.rst", "csi/inference.rst", "csi/load_raw.rst", "csi/models.rst", "csi/preprocessing.rst", "index.rst", "intraoral_scan/augmentation.rst", "intraoral_scan/generated/augmentation/ta_aug/pysensing.intraoral_scan.augmentation.ta_aug.random_augmentation.rst", "intraoral_scan/generated/inference/ta_predict/pysensing.intraoral_scan.inference.ta_predict.predict.rst", "intraoral_scan/generated/inference/ts_predict/pysensing.intraoral_scan.inference.ts_predict.predict.rst", "intraoral_scan/generated/inference/ts_predict/pysensing.intraoral_scan.inference.ts_predict.visualization.rst", "intraoral_scan/generated/inference/utils/segmenter/pysensing.intraoral_scan.inference.utils.segmenter.Segmenter.rst", "intraoral_scan/generated/inference/utils/ta_dataloader/pysensing.intraoral_scan.inference.utils.ta_dataloader.DataLoader.rst", "intraoral_scan/generated/inference/utils/ta_dataloader/pysensing.intraoral_scan.inference.utils.ta_dataloader.load_process.rst", "intraoral_scan/generated/inference/utils/ts_dataloader/pysensing.intraoral_scan.inference.utils.ts_dataloader.extract_data_from_root.rst", "intraoral_scan/generated/inference/utils/ts_dataloader/pysensing.intraoral_scan.inference.utils.ts_dataloader.load.rst", "intraoral_scan/generated/inference/utils/ts_utils/pysensing.intraoral_scan.inference.utils.ts_utils.create_colors.rst", "intraoral_scan/generated/inference/utils/ts_utils/pysensing.intraoral_scan.inference.utils.ts_utils.generate_findices.rst", "intraoral_scan/generated/inference/utils/ts_utils/pysensing.intraoral_scan.inference.utils.ts_utils.to_dec.rst", "intraoral_scan/generated/models/tooth_alignment/curvenet/pysensing.intraoral_scan.models.tooth_alignment.curvenet.CurveNet.rst", "intraoral_scan/generated/models/tooth_alignment/dgcnn/pysensing.intraoral_scan.models.tooth_alignment.dgcnn.DGCNN.rst", "intraoral_scan/generated/models/tooth_alignment/dgcnn/pysensing.intraoral_scan.models.tooth_alignment.dgcnn.Encoder.rst", "intraoral_scan/generated/models/tooth_alignment/dgcnn/pysensing.intraoral_scan.models.tooth_alignment.dgcnn.get_graph_feature.rst", "intraoral_scan/generated/models/tooth_alignment/dgcnn/pysensing.intraoral_scan.models.tooth_alignment.dgcnn.knn.rst", "intraoral_scan/generated/models/tooth_alignment/tanet/pysensing.intraoral_scan.models.tooth_alignment.tanet.GRUCell.rst", "intraoral_scan/generated/models/tooth_alignment/tanet/pysensing.intraoral_scan.models.tooth_alignment.tanet.PointNet.rst", "intraoral_scan/generated/models/tooth_alignment/tanet/pysensing.intraoral_scan.models.tooth_alignment.tanet.TANet.rst", "intraoral_scan/generated/models/tooth_alignment/tanet/pysensing.intraoral_scan.models.tooth_alignment.tanet.custom_max.rst", "intraoral_scan/generated/models/tooth_segmentation/dbganet/pysensing.intraoral_scan.models.tooth_segmentation.dbganet.DBGANet.rst", "intraoral_scan/generated/models/tooth_segmentation/dbganet/pysensing.intraoral_scan.models.tooth_segmentation.dbganet.GaussProjection.rst", "intraoral_scan/generated/models/tooth_segmentation/dbganet/pysensing.intraoral_scan.models.tooth_segmentation.dbganet.get_graph_feature.rst", "intraoral_scan/generated/models/tooth_segmentation/dbganet/pysensing.intraoral_scan.models.tooth_segmentation.dbganet.knn.rst", "intraoral_scan/generated/models/tooth_segmentation/dbganet_utils/pysensing.intraoral_scan.models.tooth_segmentation.dbganet_utils.PointNetSetAbstractionMsg.rst", "intraoral_scan/generated/models/tooth_segmentation/dbganet_utils/pysensing.intraoral_scan.models.tooth_segmentation.dbganet_utils.centroid.rst", "intraoral_scan/generated/models/tooth_segmentation/dbganet_utils/pysensing.intraoral_scan.models.tooth_segmentation.dbganet_utils.farthest_point_sample.rst", "intraoral_scan/generated/models/tooth_segmentation/dbganet_utils/pysensing.intraoral_scan.models.tooth_segmentation.dbganet_utils.index_points.rst", "intraoral_scan/generated/models/tooth_segmentation/dbganet_utils/pysensing.intraoral_scan.models.tooth_segmentation.dbganet_utils.pc_normalize.rst", "intraoral_scan/generated/models/tooth_segmentation/dbganet_utils/pysensing.intraoral_scan.models.tooth_segmentation.dbganet_utils.query_ball_point.rst", "intraoral_scan/generated/models/tooth_segmentation/dbganet_utils/pysensing.intraoral_scan.models.tooth_segmentation.dbganet_utils.square_distance.rst", "intraoral_scan/generated/models/tooth_segmentation/dgcnn/pysensing.intraoral_scan.models.tooth_segmentation.dgcnn.DGCNN_partseg.rst", "intraoral_scan/generated/models/tooth_segmentation/dgcnn/pysensing.intraoral_scan.models.tooth_segmentation.dgcnn.Transform_Net.rst", "intraoral_scan/generated/models/tooth_segmentation/dgcnn/pysensing.intraoral_scan.models.tooth_segmentation.dgcnn.get_graph_feature.rst", "intraoral_scan/generated/models/tooth_segmentation/dgcnn/pysensing.intraoral_scan.models.tooth_segmentation.dgcnn.knn.rst", "intraoral_scan/generated/models/tooth_segmentation/pct/pysensing.intraoral_scan.models.tooth_segmentation.pct.Local_op.rst", "intraoral_scan/generated/models/tooth_segmentation/pct/pysensing.intraoral_scan.models.tooth_segmentation.pct.PCT.rst", "intraoral_scan/generated/models/tooth_segmentation/pct/pysensing.intraoral_scan.models.tooth_segmentation.pct.Point_Transformer_Last.rst", "intraoral_scan/generated/models/tooth_segmentation/pct/pysensing.intraoral_scan.models.tooth_segmentation.pct.SA_Layer.rst", "intraoral_scan/generated/models/tooth_segmentation/pct_utils/pysensing.intraoral_scan.models.tooth_segmentation.pct_utils.index_points.rst", "intraoral_scan/generated/models/tooth_segmentation/pct_utils/pysensing.intraoral_scan.models.tooth_segmentation.pct_utils.knn_point.rst", "intraoral_scan/generated/models/tooth_segmentation/pct_utils/pysensing.intraoral_scan.models.tooth_segmentation.pct_utils.sample_and_group.rst", "intraoral_scan/generated/models/tooth_segmentation/pct_utils/pysensing.intraoral_scan.models.tooth_segmentation.pct_utils.square_distance.rst", "intraoral_scan/generated/preprocessing/ta_pre/pysensing.intraoral_scan.preprocessing.ta_pre.load.rst", "intraoral_scan/generated/preprocessing/ta_pre/pysensing.intraoral_scan.preprocessing.ta_pre.main.rst", "intraoral_scan/generated/preprocessing/ta_utils/pysensing.intraoral_scan.preprocessing.ta_utils.QuatMul.rst", "intraoral_scan/generated/preprocessing/ta_utils/pysensing.intraoral_scan.preprocessing.ta_utils.QuatRotate.rst", "intraoral_scan/generated/preprocessing/ta_utils/pysensing.intraoral_scan.preprocessing.ta_utils.getAxis.rst", "intraoral_scan/generated/preprocessing/ta_utils/pysensing.intraoral_scan.preprocessing.ta_utils.getTooth.rst", "intraoral_scan/generated/preprocessing/ta_utils/pysensing.intraoral_scan.preprocessing.ta_utils.get_idx_dirs.rst", "intraoral_scan/generated/preprocessing/ta_utils/pysensing.intraoral_scan.preprocessing.ta_utils.quaternion_to_matrix.rst", "intraoral_scan/generated/preprocessing/ta_utils/pysensing.intraoral_scan.preprocessing.ta_utils.showTooth.rst", "intraoral_scan/generated/preprocessing/ta_utils/pysensing.intraoral_scan.preprocessing.ta_utils.trans_pred.rst", "intraoral_scan/generated/preprocessing/ts_pre/pysensing.intraoral_scan.preprocessing.ts_pre.extract_feature_labels.rst", "intraoral_scan/generated/preprocessing/ts_pre/pysensing.intraoral_scan.preprocessing.ts_pre.get_neighbors.rst", "intraoral_scan/generated/preprocessing/ts_pre/pysensing.intraoral_scan.preprocessing.ts_pre.get_vertices_defined_curvature.rst", "intraoral_scan/generated/preprocessing/ts_pre/pysensing.intraoral_scan.preprocessing.ts_pre.multithreading_pre.rst", "intraoral_scan/generated/preprocessing/ts_pre/pysensing.intraoral_scan.preprocessing.ts_pre.process_part_folders.rst", "intraoral_scan/inference.rst", "intraoral_scan/intraoral_scan.rst", "intraoral_scan/models.rst", "intraoral_scan/preprocessing.rst", "mmwave_PC/datasets.rst", "mmwave_PC/generated/datasets/har/pysensing.mmwave.PC.dataset.har.load_har_dataset.rst", "mmwave_PC/generated/datasets/har/pysensing.mmwave.PC.dataset.har.radHAR.rst", "mmwave_PC/generated/datasets/hgr/pysensing.mmwave.PC.dataset.hgr.MGesture.rst", "mmwave_PC/generated/datasets/hgr/pysensing.mmwave.PC.dataset.hgr.load_hgr_dataset.rst", "mmwave_PC/generated/datasets/hpe/pysensing.mmwave.PC.dataset.hpe.MMBody.rst", "mmwave_PC/generated/datasets/hpe/pysensing.mmwave.PC.dataset.hpe.MetaFi_Dataset.rst", "mmwave_PC/generated/datasets/hpe/pysensing.mmwave.PC.dataset.hpe.load_hpe_dataset.rst", "mmwave_PC/generated/inference/har/pysensing.mmwave.PC.inference.har.har_test.rst", "mmwave_PC/generated/inference/har/pysensing.mmwave.PC.inference.har.har_train.rst", "mmwave_PC/generated/inference/hgr/pysensing.mmwave.PC.inference.hgr.hgr_test.rst", "mmwave_PC/generated/inference/hgr/pysensing.mmwave.PC.inference.hgr.hgr_train.rst", "mmwave_PC/generated/inference/hpe/pysensing.mmwave.PC.inference.hpe.hpe_test.rst", "mmwave_PC/generated/inference/hpe/pysensing.mmwave.PC.inference.hpe.hpe_train.rst", "mmwave_PC/generated/models/har/pysensing.mmwave.PC.model.har.har_LSTM.rst", "mmwave_PC/generated/models/har/pysensing.mmwave.PC.model.har.har_MLP.rst", "mmwave_PC/generated/models/hgr/pysensing.mmwave.PC.model.hgr.EVL_NN.rst", "mmwave_PC/generated/models/hpe/pysensing.mmwave.PC.model.hpe.P4Transformer.rst", "mmwave_PC/generated/models/hpe/pysensing.mmwave.PC.model.hpe.PointTransformerReg.rst", "mmwave_PC/generated/preprocessing/sliding_window/pysensing.mmwave.PC.preprocessing.sliding_window.sliding_window.rst", "mmwave_PC/generated/preprocessing/uniform/pysensing.mmwave.PC.preprocessing.uniform.cropping.rst", "mmwave_PC/generated/preprocessing/uniform/pysensing.mmwave.PC.preprocessing.uniform.load_from_raw.rst", "mmwave_PC/generated/preprocessing/uniform/pysensing.mmwave.PC.preprocessing.uniform.padding.rst", "mmwave_PC/generated/preprocessing/uniform/pysensing.mmwave.PC.preprocessing.uniform.voxelizing.rst", "mmwave_PC/inference.rst", "mmwave_PC/mmwave_PC.rst", "mmwave_PC/models.rst", "mmwave_PC/preprocessing.rst", "mmwave_raw/datasets.rst", "mmwave_raw/generated/datasets/CubeLearn/pysensing.mmwave_raw.dataset.CubeLearn.Gesture_Dataset.rst", "mmwave_raw/generated/inference/embedding/pysensing.mmwave_raw.inference.embedding.embedding.rst", "mmwave_raw/generated/inference/embedding/pysensing.mmwave_raw.inference.embedding.get_intermediate_output.rst", "mmwave_raw/generated/inference/har/pysensing.mmwave_raw.inference.har.har_test.rst", "mmwave_raw/generated/inference/har/pysensing.mmwave_raw.inference.har.har_train.rst", "mmwave_raw/generated/inference/har/pysensing.mmwave_raw.inference.har.har_train_val.rst", "mmwave_raw/generated/inference/hgr/pysensing.mmwave_raw.inference.hgr.hgr_test.rst", "mmwave_raw/generated/inference/hgr/pysensing.mmwave_raw.inference.hgr.hgr_train.rst", "mmwave_raw/generated/inference/hgr/pysensing.mmwave_raw.inference.hgr.hgr_train_val.rst", "mmwave_raw/generated/models/network/pysensing.mmwave_raw.models.network.AOA_Fourier_Net.rst", "mmwave_raw/generated/models/network/pysensing.mmwave_raw.models.network.AT_2DCNN.rst", "mmwave_raw/generated/models/network/pysensing.mmwave_raw.models.network.DAT_2DCNNLSTM.rst", "mmwave_raw/generated/models/network/pysensing.mmwave_raw.models.network.DAT_3DCNN.rst", "mmwave_raw/generated/models/network/pysensing.mmwave_raw.models.network.DT_2DCNN.rst", "mmwave_raw/generated/models/network/pysensing.mmwave_raw.models.network.Doppler_Fourier_Net.rst", "mmwave_raw/generated/models/network/pysensing.mmwave_raw.models.network.Doppler_Fourier_Net_Small.rst", "mmwave_raw/generated/models/network/pysensing.mmwave_raw.models.network.RAT_2DCNNLSTM.rst", "mmwave_raw/generated/models/network/pysensing.mmwave_raw.models.network.RAT_3DCNN.rst", "mmwave_raw/generated/models/network/pysensing.mmwave_raw.models.network.RDAT_3DCNNLSTM.rst", "mmwave_raw/generated/models/network/pysensing.mmwave_raw.models.network.RDT_2DCNNLSTM.rst", "mmwave_raw/generated/models/network/pysensing.mmwave_raw.models.network.RDT_3DCNN.rst", "mmwave_raw/generated/models/network/pysensing.mmwave_raw.models.network.RT_2DCNN.rst", "mmwave_raw/generated/models/network/pysensing.mmwave_raw.models.network.Range_Fourier_Net.rst", "mmwave_raw/generated/models/network/pysensing.mmwave_raw.models.network.Range_Fourier_Net_Small.rst", "mmwave_raw/inference.rst", "mmwave_raw/mmwave_raw.rst", "mmwave_raw/models.rst", "rssi/augmentation.rst", "rssi/datasets.rst", "rssi/generated/augmentation/synchronization/pysensing.rssi.augmentation.synchronization.Synchronizer.rst", "rssi/generated/datasets/uji_indoor_loc/pysensing.rssi.datasets.uji_indoor_loc.UJIIndoorLoc_Dataset.rst", "rssi/generated/models/Localization_fingerprinting/pysensing.rssi.models.localization.fingerprinting.CNN.rst", "rssi/generated/models/Localization_fingerprinting/pysensing.rssi.models.localization.fingerprinting.CNNLoc1D.rst", "rssi/generated/models/Localization_fingerprinting/pysensing.rssi.models.localization.fingerprinting.LSTM.rst", "rssi/generated/models/Localization_fingerprinting/pysensing.rssi.models.localization.fingerprinting.MLP.rst", "rssi/generated/models/Localization_fingerprinting/pysensing.rssi.models.localization.fingerprinting.WKNN.rst", "rssi/generated/models/Localization_triangulation/pysensing.rssi.models.localization.triangulation.BaseDistanceRegressor.rst", "rssi/generated/models/Localization_triangulation/pysensing.rssi.models.localization.triangulation.Triangulator.rst", "rssi/generated/preprocessing/filtering/pysensing.rssi.preprocessing.filtering.average_filter.rst", "rssi/generated/preprocessing/filtering/pysensing.rssi.preprocessing.filtering.median_filter.rst", "rssi/generated/preprocessing/filtering/pysensing.rssi.preprocessing.filtering.remove_nan.rst", "rssi/generated/preprocessing/transform/pysensing.rssi.preprocessing.transform.normalization.rst", "rssi/generated/preprocessing/transform/pysensing.rssi.preprocessing.transform.standardization.rst", "rssi/generated/pysensing.rssi.datasets.ntu_iot_rssi.NTUIoTRSSI_Dataset.rst", "rssi/models.rst", "rssi/preprocessing.rst", "rssi/rssi.rst"], "titles": ["Acoustic", "Acoustic.Augmentation", "Acoustic.Datasets", "add_atempo", "add_chorus", "add_echo", "add_noise", "frequencymasking", "timemasking", "timestretch", "load_har_dataset", "load_hgr_dataset", "load_hpe_dataset", "load_ped_det_dataset", "AudioIMU", "SAMoSA", "AMG", "SoundPose2DDataset", "SoundPoseLSTMDataset", "AFPILD", "AVPed", "har_embedding", "hpe_embedding", "ped_det_embedding", "har_predict", "hpe_predict", "ped_det_predict", "afpild_testing", "afpild_train", "evaluate_model", "train_model", "har_test", "har_train_val", "ped_det_test", "ped_det_train", "load_har_model", "load_hpe_model", "load_ped_det_model", "HAR_AUDIOCNN", "HAR_SAMCNN", "Speech2pose", "Wipose_LSTM", "PED_CNN", "PED_CRNN", "allpass", "bandpass", "bandreject", "highpass", "lowpass", "GCC", "amplitude2db", "inversespectrogram", "ipd", "istft", "melspectrogram", "mfcc", "spectrogram", "stft", "Acoustic.Inference", "Acoustic.Models", "Acoustic.Preprocessing", "Acoustic.Training", "BLUETOOTH.Augmentation", "BLUETOOTH", "BLUETOOTH.Datasets", "Synchronizer", "WMUBLELoc_Dataset", "AmazonasIndoorEnv_Dataset", "CNN", "LSTM", "MLP", "WKNN", "BaseDistanceRegressor", "Triangulator", "average_filter", "median_filter", "remove_nan", "normalization", "standardization", "BLUETOOTH.Models", "BLUETOOTH.Preprocessing", "CSI.Augmentation", "CSI", "CSI.Datasets", "add_noise", "dropout", "spectrum_scaling", "spectrum_shifting", "time_stretching", "load_classification_dataset", "load_hpe_dataset", "NTUFi_HAR", "UT_HAR", "Widar3", "NTUFi_HumanID", "MetaFi_Dataset", "WiPose", "HandFi", "har_csi_embedding", "hid_csi_embedding", "hpe_csi_embedding", "recon_csi_embedding", "har_predict", "hid_predict", "hpe_predict", "recon_predict", "har_train", "hid_train", "hpe_train", "recon_train", "load_raw_bin", "load_raw_msg", "load_har_model", "load_hid_model", "load_pretrain", "load_recon_model", "ResNet", "har_BiLSTM", "har_CNN_GRU", "har_GRU", "har_LSTM", "har_LeNet", "har_MLP", "har_RNN", "har_ViT", "ResNet", "hid_BiLSTM", "hid_CNN_GRU", "hid_GRU", "hid_LSTM", "hid_LeNet", "hid_MLP", "hid_RNN", "hid_ViT", "WPFormer", "WPNet", "CSI_AutoEncoder", "bandpass_filter", "dwt", "elliptic_filter", "lowpass_filter", "pca", "stft", "normalization", "remove_nan", "CSI.Inference", "CSI.Load_Raw_Data", "CSI.Models", "CSI.Preprocessing", "Pysensing Documentation", "intraoral_scan.Augmentation", "random_augmentation", "predict", "predict", "visualization", "Segmenter", "DataLoader", "load_process", "extract_data_from_root", "load", "create_colors", "generate_findices", "to_dec", "CurveNet", "DGCNN", "Encoder", "get_graph_feature", "knn", "GRUCell", "PointNet", "TANet", "custom_max", "DBGANet", "GaussProjection", "get_graph_feature", "knn", "PointNetSetAbstractionMsg", "centroid", "farthest_point_sample", "index_points", "pc_normalize", "query_ball_point", "square_distance", "DGCNN_partseg", "Transform_Net", "get_graph_feature", "knn", "Local_op", "PCT", "Point_Transformer_Last", "SA_Layer", "index_points", "knn_point", "sample_and_group", "square_distance", "load", "main", "QuatMul", "QuatRotate", "getAxis", "getTooth", "get_idx_dirs", "quaternion_to_matrix", "showTooth", "trans_pred", "extract_feature_labels", "get_neighbors", "get_vertices_defined_curvature", "multithreading_pre", "process_part_folders", "intraoral_scan.Inference", "intraoral_scan", "intraoral_scan.Models", "intraoral_scan.Preprocessing", "mmwave_PC.Datasets", "load_har_dataset", "radHAR", "MGesture", "load_hgr_dataset", "MMBody", "MetaFi_Dataset", "load_hpe_dataset", "har_test", "har_train", "hgr_test", "hgr_train", "hpe_test", "hpe_train", "har_LSTM", "har_MLP", "EVL_NN", "P4Transformer", "PointTransformerReg", "sliding_window", "cropping", "load_from_raw", "padding", "voxelizing", "mmwave_PC.Inference", "mmwave_PC", "mmwave_PC.Models", "mmwave_PC.Preprocessing", "mmwave_raw.dataset", "Gesture_Dataset", "embedding", "get_intermediate_output", "har_test", "har_train", "har_train_val", "hgr_test", "hgr_train", "hgr_train_val", "AOA_Fourier_Net", "AT_2DCNN", "DAT_2DCNNLSTM", "DAT_3DCNN", "DT_2DCNN", "Doppler_Fourier_Net", "Doppler_Fourier_Net_Small", "RAT_2DCNNLSTM", "RAT_3DCNN", "RDAT_3DCNNLSTM", "RDT_2DCNNLSTM", "RDT_3DCNN", "RT_2DCNN", "Range_Fourier_Net", "Range_Fourier_Net_Small", "mmwave_raw.Inference", "mmwave_raw", "mmwave_raw.Models", "RSSI.Augmentation", "RSSI.Datasets", "Synchronizer", "UJIIndoorLoc_Dataset", "CNN", "CNNLoc1D", "LSTM", "MLP", "WKNN", "BaseDistanceRegressor", "Triangulator", "average_filter", "median_filter", "remove_nan", "normalization", "standardization", "NTUIoTRSSI_Dataset", "RSSI.Models", "RSSI.Preprocessing", "RSSI"], "terms": {"preprocess": [0, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 63, 74, 75, 76, 77, 78, 82, 137, 138, 139, 140, 141, 142, 143, 144, 149, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 228, 229, 230, 233, 234, 235, 236, 237, 239, 281, 282, 283, 284, 285, 289], "filter": [0, 3, 4, 5, 9, 44, 45, 46, 47, 48, 49, 53, 57, 63, 74, 75, 76, 137, 139, 140, 141, 281, 282, 283, 289], "transform": [0, 6, 7, 8, 9, 12, 16, 17, 18, 49, 50, 51, 52, 53, 54, 55, 56, 57, 63, 77, 78, 82, 91, 94, 138, 142, 143, 144, 151, 152, 170, 184, 188, 195, 196, 202, 203, 204, 211, 231, 232, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 284, 285, 289], "augment": [0, 3, 4, 5, 6, 7, 8, 9, 17, 18, 19, 63, 65, 82, 84, 85, 86, 87, 88, 149, 151, 211, 272, 289], "spectrogram": [0, 7, 8, 9, 14, 15, 16, 19, 20, 38, 39, 42, 43, 50, 51, 54, 55, 57, 84, 85], "signal": [0, 4, 5, 6, 12, 17, 18, 40, 41, 49, 51, 52, 53, 54, 55, 56, 57, 72, 84, 85, 134, 252, 265, 279], "dataset": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 43, 63, 66, 67, 82, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 149, 156, 208, 215, 216, 217, 218, 219, 220, 221, 228, 229, 230, 231, 232, 233, 235, 239, 243, 244, 268, 273, 286, 289], "human": [0, 10, 12, 14, 17, 18, 31, 32, 33, 34, 38, 39, 40, 41, 82, 96, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 239, 246, 247, 248, 249, 250, 251, 257, 268], "pose": [0, 12, 17, 18, 40, 41, 82, 90, 96, 134, 135, 152, 156, 163, 164, 170, 203, 204, 219, 220, 226, 227, 231, 232, 239], "estim": [0, 12, 17, 18, 40, 41, 51, 53, 72, 73, 82, 96, 134, 135, 226, 227, 231, 232, 239, 252, 279, 280], "activ": [0, 14, 15, 16, 38, 39, 68, 69, 92, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 130, 131, 187, 216, 228, 229, 239, 268, 274, 276], "recognit": [0, 14, 16, 31, 32, 33, 34, 38, 39, 82, 116, 117, 118, 119, 120, 121, 122, 123, 124, 216, 217, 222, 223, 224, 225, 228, 229, 230, 239, 246, 247, 248, 249, 250, 251, 257, 261, 263, 268], "hand": [0, 11, 16], "gestur": [0, 11, 16, 217, 224, 225, 230, 239, 246, 247, 248, 249, 250, 251, 268], "pedestrian": [0, 13, 19, 20, 42, 43], "detect": [0, 13, 37, 257], "load": [0, 10, 11, 12, 13, 28, 35, 36, 37, 67, 82, 89, 90, 110, 111, 112, 113, 114, 115, 152, 153, 154, 156, 157, 199, 200, 216, 235, 286], "model": [0, 12, 14, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 49, 52, 63, 68, 69, 70, 71, 72, 73, 82, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 149, 152, 153, 155, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 200, 203, 211, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 239, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 274, 276, 277, 278, 279, 280, 289], "train": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 31, 32, 33, 34, 36, 42, 43, 66, 67, 71, 82, 89, 90, 91, 92, 93, 94, 95, 96, 97, 106, 107, 108, 109, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 149, 155, 215, 216, 217, 218, 219, 220, 221, 223, 225, 227, 235, 243, 247, 248, 250, 251, 278], "infer": [0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 71, 82, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 211, 222, 223, 224, 225, 226, 227, 239, 244, 245, 246, 247, 248, 249, 250, 251, 268, 278], "predict": [0, 14, 15, 24, 25, 26, 39, 42, 43, 73, 82, 102, 103, 104, 105, 134, 135, 163, 164, 170, 177, 183, 184, 188, 204, 211, 280], "embed": [0, 21, 22, 23, 69, 82, 98, 99, 100, 101, 164, 165, 183, 231, 245, 268, 276], "class": [3, 4, 5, 6, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 155, 156, 163, 164, 165, 168, 169, 170, 172, 176, 177, 183, 184, 187, 188, 189, 190, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "pysens": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "acoust": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 149], "signal_aug": [3, 4, 5, 6, 7], "sample_r": [3, 4, 5, 44, 45, 46, 47, 48, 54, 55, 137, 139, 140], "atempo": 3, "1": [3, 4, 5, 8, 21, 23, 24, 26, 28, 32, 49, 51, 53, 54, 56, 57, 69, 72, 73, 74, 75, 76, 78, 85, 86, 88, 93, 138, 141, 142, 143, 144, 158, 159, 194, 197, 198, 202, 206, 207, 216, 228, 229, 230, 231, 234, 243, 244, 276, 279, 280, 281, 282, 283, 285], "0": [3, 4, 5, 6, 7, 8, 14, 15, 16, 20, 30, 32, 39, 42, 44, 45, 46, 47, 48, 49, 51, 53, 54, 56, 57, 66, 67, 70, 72, 73, 74, 77, 78, 84, 85, 87, 90, 106, 107, 108, 109, 138, 139, 142, 143, 154, 155, 156, 158, 159, 160, 164, 183, 197, 198, 202, 203, 205, 216, 217, 229, 231, 234, 236, 243, 277, 279, 280, 281, 284, 285], "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "base": [3, 4, 5, 6, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 151, 154, 155, 156, 163, 164, 165, 168, 169, 170, 172, 176, 177, 183, 184, 187, 188, 189, 190, 196, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "modul": [3, 4, 5, 6, 7, 8, 9, 21, 22, 23, 24, 25, 26, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 68, 69, 70, 84, 85, 86, 87, 88, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 149, 152, 163, 164, 165, 168, 169, 170, 172, 176, 177, 183, 184, 187, 188, 189, 190, 217, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 274, 276, 277], "speed": [3, 4, 9], "up": [3, 9, 73, 92, 280], "slow": [3, 9], "down": [3, 9, 92, 258], "input": [3, 4, 5, 6, 7, 8, 9, 12, 17, 18, 19, 21, 22, 23, 30, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 65, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 86, 87, 88, 116, 124, 125, 133, 151, 152, 153, 155, 163, 164, 165, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 183, 184, 187, 188, 191, 193, 195, 198, 204, 207, 228, 229, 230, 234, 236, 237, 244, 245, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 266, 272, 274, 276, 277, 278, 280, 281, 282, 283, 284, 285], "audio": [3, 4, 5, 6, 7, 8, 9, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 244], "The": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 18, 19, 29, 30, 35, 36, 37, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 87, 88, 89, 90, 92, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 168, 170, 172, 173, 177, 180, 183, 184, 188, 194, 195, 197, 198, 200, 201, 204, 207, 216, 217, 219, 220, 228, 229, 230, 234, 235, 236, 237, 243, 245, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 286], "waveform": [3, 4, 5, 6, 7, 8, 9, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57], "channel": [3, 4, 5, 7, 8, 16, 17, 18, 40, 41, 49, 51, 54, 55, 56, 68, 164, 165, 187, 189, 190, 274], "last": [3, 4, 5, 12, 39, 57, 84, 85, 86, 88, 137, 138, 139, 140, 142, 195, 197, 202, 204], "paramet": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 141, 143, 144, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 243, 244, 245, 246, 247, 248, 249, 250, 251, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "int": [3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 28, 30, 32, 34, 40, 41, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 91, 93, 94, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 152, 155, 156, 157, 160, 161, 163, 164, 165, 168, 169, 171, 172, 177, 183, 184, 187, 188, 192, 193, 200, 201, 205, 206, 207, 208, 209, 217, 223, 225, 227, 228, 229, 230, 231, 232, 233, 236, 237, 243, 247, 248, 250, 251, 272, 274, 276, 277, 279, 280, 281, 282, 283, 284, 285], "sampl": [3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 44, 45, 46, 47, 48, 49, 53, 54, 55, 56, 57, 74, 75, 95, 152, 156, 157, 176, 178, 179, 181, 191, 192, 193, 205, 207, 208, 209, 281, 282, 286], "rate": [3, 4, 5, 9, 28, 30, 44, 45, 46, 47, 48, 54, 55, 88, 231], "float": [3, 4, 5, 8, 9, 28, 44, 45, 46, 47, 48, 49, 50, 54, 56, 65, 72, 73, 76, 77, 78, 164, 173, 183, 193, 231, 234, 236, 272, 279, 280, 283, 284, 285], "desir": 3, "tempo": 3, "must": [3, 8, 53, 54, 56, 57, 67], "5": [3, 4, 5, 39, 56, 74, 75, 77, 78, 93, 139, 143, 183, 217, 229, 230, 232, 234, 236, 237, 281, 282, 284, 285], "100": [3, 8, 76, 137, 283, 284], "rang": [3, 4, 5, 8, 72, 85, 87, 143, 154, 155, 217, 234, 235, 237, 253, 256, 259, 260, 261, 262, 263, 264, 265, 266, 279], "exampl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 137, 138, 139, 140, 141, 142, 143, 144, 151, 152, 153, 154, 163, 164, 170, 172, 183, 188, 197, 198, 199, 201, 202, 203, 205, 216, 234, 236, 237, 244, 272, 280, 281, 282, 283, 284, 285], "import": [3, 4, 5, 6, 7, 8, 9, 27, 29, 30, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 73, 74, 75, 76, 77, 78, 234, 236, 237, 280, 281, 282, 283, 284, 285], "A": [3, 4, 5, 6, 7, 8, 9, 49, 50, 57, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 169, 199, 200, 202, 203, 233, 237, 273], "add_echo_tran": [3, 5], "add_echo": 3, "echo_data": [3, 5], "refer": [3, 4, 5, 6, 7, 8, 9, 12, 17, 18, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 71, 90, 216, 217, 219, 220, 243, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 278, 286], "http": [3, 4, 5, 6, 7, 8, 9, 12, 17, 18, 27, 28, 29, 30, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 67, 90, 91, 92, 93, 94, 95, 96, 97, 134, 135, 216, 217, 219, 220, 243, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 273], "pytorch": [3, 4, 5, 6, 7, 8, 9, 31, 32, 33, 34, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 215, 218, 221, 222, 223, 224, 225, 226, 227, 245, 246, 247, 248, 249, 250, 251], "org": [3, 4, 5, 6, 7, 8, 9, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 91, 92, 93, 94, 134, 135, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266], "main": [3, 4, 5, 6, 7, 8, 9, 44, 45, 46, 47, 48, 49, 50, 52, 97], "gener": [3, 6, 7, 8, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 66, 67, 98, 99, 100, 101, 156, 161, 216, 228, 229], "torchaudio": [3, 6, 7, 8, 9, 44, 45, 46, 47, 48, 50, 51, 54, 55, 56], "io": [3, 153, 220], "audioeffector": 3, "html": [3, 4, 5, 6, 7, 8, 9, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57], "ffmpeg": [3, 4, 5], "forward": [3, 4, 5, 6, 7, 8, 9, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 68, 69, 70, 84, 85, 86, 87, 88, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 163, 164, 165, 168, 169, 170, 172, 176, 177, 183, 184, 187, 188, 189, 190, 228, 229, 230, 231, 232, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 274, 276, 277], "torch": [3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 57, 66, 67, 69, 74, 75, 76, 77, 78, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 134, 135, 151, 152, 153, 163, 164, 170, 172, 183, 188, 197, 198, 199, 202, 203, 215, 218, 221, 222, 223, 224, 225, 226, 227, 244, 246, 247, 248, 249, 250, 251, 273, 276, 281, 282, 283, 284, 285, 286], "tensor": [3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 75, 76, 77, 78, 91, 92, 93, 94, 134, 135, 151, 152, 156, 163, 164, 165, 168, 169, 170, 171, 172, 173, 176, 177, 180, 183, 184, 187, 188, 191, 192, 193, 194, 195, 197, 198, 199, 202, 203, 204, 228, 229, 230, 244, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 281, 282, 283, 284, 285], "raw": [3, 4, 5, 6, 12, 17, 18, 36, 41, 51, 65, 67, 74, 75, 76, 77, 78, 82, 110, 111, 155, 209, 216, 235, 244, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 272, 281, 282, 283, 284, 285, 286], "return": [3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 71, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 143, 144, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 215, 218, 221, 222, 224, 226, 233, 234, 235, 236, 237, 244, 245, 246, 249, 278, 280, 281, 282, 283, 284, 285], "adjust": [3, 4], "type": [3, 4, 5, 6, 7, 8, 9, 21, 22, 23, 24, 25, 26, 30, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 71, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 154, 158, 159, 160, 163, 164, 170, 172, 176, 177, 193, 201, 203, 205, 215, 218, 221, 233, 235, 237, 244, 278, 280, 281, 282, 283, 284, 285], "delai": [4, 5], "decai": [4, 5, 72, 279], "depth": [4, 219, 231], "in_gain": [4, 5], "4": [4, 10, 11, 12, 13, 17, 22, 25, 28, 40, 41, 53, 57, 75, 76, 84, 85, 86, 87, 88, 93, 95, 143, 163, 164, 170, 172, 183, 188, 195, 197, 198, 202, 203, 204, 208, 216, 217, 229, 282, 283], "out_gain": [4, 5], "appli": [4, 5, 7, 8, 9, 19, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 74, 75, 85, 91, 94, 138, 142, 151, 169, 171, 173, 187, 195, 196, 203, 253, 254, 256, 258, 259, 260, 262, 264, 265, 281, 282], "choru": 4, "effect": 4, "simul": 4, "sound": [4, 12, 17, 18, 19, 20, 30, 43], "multipl": [4, 43, 51, 55, 171, 197, 208, 233], "voic": 4, "from": [4, 7, 8, 9, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 42, 43, 53, 57, 65, 66, 72, 73, 74, 75, 76, 77, 78, 82, 85, 110, 111, 112, 113, 114, 143, 144, 152, 154, 155, 156, 158, 159, 161, 163, 164, 165, 172, 187, 191, 194, 197, 199, 200, 201, 205, 206, 208, 209, 216, 217, 219, 220, 222, 224, 226, 228, 229, 233, 235, 243, 246, 249, 263, 265, 272, 279, 280, 281, 282, 283, 284, 285], "singl": [4, 36, 203, 217, 235], "vocal": 4, "track": 4, "ad": [4, 5, 6, 84], "version": [4, 234, 236, 254, 258, 266], "origin": [4, 5, 20, 42, 51, 53, 65, 66, 67, 72, 180, 195, 204, 272, 279], "list": [4, 5, 15, 65, 67, 116, 125, 153, 154, 155, 156, 158, 160, 161, 162, 169, 171, 200, 201, 203, 207, 209, 216, 219, 233, 234, 237, 272, 273], "thi": [4, 9, 14, 16, 17, 18, 19, 20, 27, 28, 31, 32, 33, 34, 38, 39, 40, 41, 42, 53, 57, 65, 68, 69, 70, 71, 72, 73, 84, 85, 86, 87, 88, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 151, 156, 157, 161, 183, 184, 187, 189, 190, 193, 215, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 272, 274, 276, 277, 278, 279, 280], "specifi": [4, 28, 43, 65, 155, 169, 171, 181, 206, 245, 272], "time": [4, 5, 7, 8, 9, 40, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 65, 71, 84, 85, 86, 87, 88, 137, 138, 139, 140, 142, 156, 157, 217, 230, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 272, 278], "each": [4, 5, 7, 8, 38, 51, 54, 56, 65, 73, 116, 124, 125, 133, 151, 152, 153, 154, 155, 158, 159, 161, 164, 165, 166, 167, 169, 172, 173, 174, 175, 181, 182, 183, 184, 185, 186, 188, 192, 193, 194, 200, 201, 203, 204, 206, 207, 208, 209, 216, 230, 231, 232, 233, 235, 237, 272, 280], "typic": [4, 70, 164, 172, 192, 193, 194, 277], "valu": [4, 5, 8, 44, 45, 46, 47, 48, 49, 65, 68, 69, 72, 76, 144, 160, 162, 173, 195, 202, 203, 204, 235, 237, 252, 257, 265, 272, 273, 274, 276, 279, 283, 286], "ar": [4, 10, 13, 14, 15, 16, 37, 49, 51, 52, 56, 67, 72, 73, 74, 75, 89, 151, 155, 156, 157, 160, 161, 162, 195, 204, 205, 206, 217, 219, 220, 233, 265, 266, 273, 279, 280, 281, 282], "around": 4, "40m": 4, "60m": 4, "allow": [4, 5, 44], "90000": [4, 5], "control": [4, 51, 57, 156], "It": [4, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 151, 157, 161, 187, 196, 252, 253, 254, 258, 264, 266], "determin": [4, 53, 57], "how": [4, 233, 235], "quickli": 4, "over": [4, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264], "larger": [4, 44, 45, 46, 47, 48], "than": [4, 86], "set": [4, 5, 17, 18, 29, 30, 36, 42, 43, 66, 67, 70, 71, 90, 97, 162, 163, 176, 192, 215, 218, 221, 277, 278], "gain": [4, 5, 45], "level": [4, 138, 206, 207, 243], "befor": [4, 12, 197], "defalt": [4, 5], "output": [4, 5, 21, 22, 23, 24, 25, 26, 31, 33, 40, 41, 51, 53, 68, 69, 70, 74, 75, 76, 77, 78, 95, 98, 99, 100, 101, 102, 103, 104, 105, 152, 163, 164, 165, 169, 170, 172, 183, 187, 188, 193, 197, 198, 199, 202, 219, 222, 224, 226, 228, 229, 230, 231, 234, 236, 244, 245, 246, 249, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 274, 276, 277, 281, 282, 283, 284, 285], "after": [4, 54, 56, 78, 151, 169, 171, 173, 195, 203, 234, 254, 256, 259, 285], "default": [4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 27, 28, 35, 36, 37, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 112, 113, 114, 115, 155, 163, 164, 165, 172, 177, 183, 197, 198, 207, 208, 231, 234, 235, 236, 237, 272, 276, 277, 279, 280, 281, 282, 283, 284, 285], "add_chorus_tran": 4, "6": [4, 5, 74, 77, 78, 91, 93, 101, 105, 143, 144, 164, 165, 172, 177, 234, 236, 237, 281, 284, 285, 286], "3": [4, 5, 8, 17, 18, 40, 68, 69, 70, 73, 74, 75, 77, 78, 86, 87, 88, 93, 99, 100, 103, 104, 116, 118, 121, 122, 125, 127, 130, 131, 134, 135, 141, 143, 144, 151, 163, 164, 170, 177, 178, 181, 192, 193, 194, 195, 198, 202, 203, 204, 231, 234, 243, 274, 276, 277, 280, 281, 282, 284, 285], "1000": [4, 5, 84, 85, 86, 87, 88, 138, 139, 141, 142], "25": [4, 15, 183, 185], "2": [4, 49, 51, 53, 54, 55, 56, 57, 68, 69, 70, 72, 73, 74, 75, 76, 93, 116, 121, 125, 130, 138, 143, 155, 158, 159, 169, 172, 183, 184, 188, 193, 194, 202, 206, 207, 217, 219, 228, 229, 230, 231, 234, 237, 243, 274, 276, 277, 279, 280, 281, 282, 283], "chorus_data": 4, "tutori": [4, 5], "effector_tutori": [4, 5], "sphx": [4, 5], "glr": [4, 5], "effector": [4, 5], "py": [4, 5, 49, 52], "echo": 5, "reflect": [5, 51, 54, 56, 57], "interv": [5, 65, 272], "millisecond": 5, "between": [5, 9, 45, 46, 51, 53, 54, 56, 57, 71, 72, 73, 159, 166, 174, 182, 185, 194, 197, 231, 278, 279, 280], "loud": 5, "aecho": 5, "nois": [6, 82, 84], "snr": 6, "length": [6, 7, 8, 9, 12, 17, 18, 30, 51, 53, 54, 57, 161, 180, 233, 234, 235, 237], "none": [6, 9, 12, 17, 18, 22, 23, 25, 26, 27, 28, 29, 30, 41, 43, 50, 51, 53, 54, 55, 56, 57, 72, 90, 91, 94, 96, 106, 107, 108, 109, 134, 135, 144, 155, 166, 174, 185, 221, 233, 237, 279], "add": [6, 82, 84, 116, 124, 125, 133, 236], "data": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 38, 39, 41, 42, 49, 51, 54, 55, 56, 57, 65, 66, 67, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 137, 138, 139, 140, 141, 142, 143, 144, 151, 152, 153, 155, 156, 157, 158, 159, 163, 169, 170, 172, 176, 177, 178, 179, 191, 193, 196, 199, 200, 203, 204, 205, 207, 208, 209, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 233, 235, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 272, 281, 282, 283, 284, 285, 286], "need": [6, 10, 13, 23, 26, 51, 54, 55, 68, 69, 70, 72, 84, 85, 86, 87, 88, 89, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 189, 190, 228, 229, 230, 231, 232, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 274, 276, 277, 279], "same": [6, 21, 22, 23, 24, 25, 26, 65, 71, 72, 74, 75, 76, 77, 78, 86, 87, 88, 98, 99, 100, 101, 102, 103, 104, 105, 173, 192, 244, 272, 278, 279, 281, 282, 283, 284, 285, 286], "size": [6, 21, 22, 23, 24, 25, 26, 28, 30, 51, 53, 54, 55, 56, 57, 65, 74, 75, 76, 77, 78, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 116, 124, 125, 133, 172, 191, 192, 194, 199, 231, 234, 244, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 272, 281, 282, 283, 284, 285], "ratio": 6, "db": [6, 50, 55], "option": [6, 7, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 27, 28, 29, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 91, 94, 155, 163, 207, 208, 216], "valid": [6, 28, 29, 56, 248, 251], "randn_lik": 6, "add_noise_tran": [6, 7], "noise_data": [6, 7], "addnois": 6, "highlight": [6, 50, 54, 55, 56], "spectrogram_aug": [7, 8, 9], "freq_mask_param": 7, "iid_mask": [7, 8], "fals": [7, 8, 12, 17, 18, 19, 30, 32, 35, 36, 37, 45, 51, 52, 53, 54, 55, 56, 57, 97, 197, 198, 199, 216, 231, 243, 254, 261, 264], "method": [7, 8, 9, 12, 17, 18, 51, 54, 56, 57, 69, 73, 144, 276, 280], "mask": [7, 8], "frequenc": [7, 44, 45, 46, 47, 48, 53, 54, 57, 87, 252, 257, 265], "domain": [7, 53, 86, 87, 88, 138, 252, 257, 265], "stft": [7, 8, 9, 51, 53, 54, 56], "maximum": [7, 8, 30, 54, 77, 192, 234, 237, 284], "possibl": [7, 8, 73, 280], "indic": [7, 8, 51, 57, 154, 155, 157, 161, 179, 191, 192, 201, 206, 207, 216, 233, 235], "uniformli": [7, 8], "bool": [7, 8, 10, 11, 12, 13, 17, 18, 19, 30, 32, 35, 36, 37, 45, 51, 52, 53, 54, 55, 56, 57, 96, 97, 197, 198, 199, 216, 219, 243, 244, 248, 251], "whether": [7, 8, 12, 17, 18, 19, 30, 32, 52, 53, 54, 56, 57, 65, 66, 67, 219, 231, 272], "differ": [7, 8, 12, 14, 16, 17, 18, 20, 38, 39, 42, 52, 72, 73, 155, 163, 164, 166, 174, 185, 200, 279, 280], "batch": [7, 8, 9, 12, 28, 30, 53, 57, 116, 125, 151, 152, 155, 156, 157, 161, 172, 187, 191, 192, 194, 204, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264], "add_nois": 7, "n_fft": [7, 50, 51, 53, 54, 55, 56, 57], "400": [7, 12, 17, 18, 50, 51, 53, 54, 55, 56, 57, 151, 152, 163, 164, 170], "implement": [7, 9, 12, 14, 17, 18, 38, 40, 41, 42, 50, 51, 53, 54, 55, 56, 57, 163, 164, 168, 170, 172, 183, 188, 193, 216, 217, 219, 220, 228, 229, 230, 231, 232], "specgram": [7, 8], "shape": [7, 8, 40, 53, 57, 71, 86, 87, 88, 110, 111, 134, 135, 151, 152, 153, 155, 158, 159, 163, 164, 165, 168, 169, 170, 172, 173, 176, 177, 180, 183, 184, 187, 188, 191, 192, 193, 194, 195, 197, 198, 199, 202, 203, 204, 205, 206, 207, 228, 229, 230, 233, 234, 236, 237, 278], "freq": [7, 8, 9, 40, 51, 56], "time_mask_param": 8, "p": [8, 180, 197], "scale": [8, 9, 50, 54, 55, 86, 176, 180, 258], "should": [8, 53, 56, 65, 68, 69, 70, 84, 85, 86, 87, 88, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 189, 190, 205, 228, 229, 230, 231, 232, 243, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 272, 273, 274, 276, 277], "onli": [8, 13, 14, 15, 20, 36, 37, 38, 39, 42, 56, 57, 71, 72, 74, 75, 199, 217, 219, 234, 236, 278, 279, 281, 282], "applic": [8, 28, 219, 257, 258, 266], "when": [8, 36, 37, 51, 54, 56, 57, 68, 69, 266, 274, 276], "ha": [8, 71, 278], "more": 8, "dimens": [8, 9, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 68, 69, 70, 71, 72, 84, 85, 86, 88, 112, 113, 117, 118, 119, 120, 123, 126, 127, 128, 129, 132, 137, 138, 139, 140, 141, 142, 164, 165, 171, 183, 197, 231, 232, 237, 253, 256, 259, 261, 263, 266, 274, 276, 277, 278, 279], "proport": 8, "step": [8, 53, 57], "can": [8, 17, 18, 44, 72, 73, 90, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 279, 280], "within": [8, 68, 69, 70, 84, 85, 86, 87, 88, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 180, 181, 189, 190, 228, 229, 230, 231, 232, 234, 235, 237, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 274, 276, 277], "timemasking_tran": 8, "timemasking_spec": 8, "implent": 8, "hop_length": [9, 51, 53, 54, 56, 57], "n_freq": 9, "201": 9, "fixed_r": 9, "stretch": [9, 86, 88], "hop": [9, 51, 53, 54, 56, 57], "window": [9, 51, 53, 54, 56, 57, 65, 74, 75, 142, 231, 233, 239, 272, 281, 282], "number": [9, 11, 12, 13, 28, 30, 50, 53, 54, 55, 56, 57, 66, 67, 69, 71, 72, 73, 91, 92, 93, 94, 95, 96, 106, 107, 108, 109, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 152, 155, 156, 157, 161, 163, 164, 165, 168, 169, 172, 177, 178, 181, 183, 184, 187, 188, 191, 192, 193, 194, 199, 205, 206, 208, 209, 217, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 276, 278, 279, 280, 286], "bank": 9, "timestretch_tran": 9, "timestretch_spec": 9, "_modul": 9, "_transform": 9, "complex_specgram": 9, "num_fram": 9, "complex": [9, 49, 51, 53, 56, 57, 252, 257, 263, 265], "dtype": 9, "overriding_r": 9, "get_dataload": [10, 11, 12, 13, 89, 90], "root": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 67, 158, 200, 201, 203, 204, 208, 215, 216, 217, 218, 219, 221, 243], "acousitc": [10, 11, 13], "samosa": [10, 21, 24, 39], "batch_siz": [10, 11, 12, 13, 89, 90, 108, 134, 135, 151, 152, 156, 157, 163, 164, 165, 168, 169, 170, 183, 184, 187, 188, 204], "64": [10, 11, 12, 13, 21, 23, 24, 26, 30, 65, 68, 69, 70, 89, 112, 113, 117, 118, 119, 120, 123, 126, 127, 128, 129, 132, 169, 244, 252, 255, 258, 261, 272, 274, 276, 277], "num_work": [10, 11, 12, 13, 28], "download": [10, 11, 12, 13, 35, 36, 37, 114], "true": [10, 11, 12, 13, 32, 35, 36, 37, 45, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 96, 152, 153, 197, 198, 199, 216, 219, 243, 244, 248, 251, 272], "aciv": 10, "recognicion": [10, 11], "str": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 35, 36, 37, 43, 49, 50, 51, 54, 55, 56, 57, 95, 96, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 156, 157, 158, 159, 162, 163, 199, 200, 201, 204, 205, 208, 209, 215, 216, 217, 218, 219, 220, 221, 228, 229, 230, 233, 235, 243], "path": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 66, 67, 72, 152, 153, 156, 157, 158, 159, 199, 201, 205, 208, 209, 215, 216, 217, 218, 219, 220, 221, 233, 235, 243, 273, 279, 286], "name": [10, 12, 13, 27, 28, 30, 35, 36, 37, 89, 112, 113, 114, 115, 170, 200, 201, 215, 218, 221, 228, 229, 230], "choic": [10, 13, 51, 56, 89, 154], "audioimu": [10, 21, 24, 38], "dataload": [10, 11, 12, 13, 15, 31, 32, 33, 34, 89, 90, 152, 204, 211, 222, 223, 224, 225, 226, 227, 246, 247, 248, 249, 250, 251], "retur": [10, 11, 13, 89, 90], "test": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 27, 28, 29, 91, 92, 93, 94, 96, 215, 216, 217, 218, 219, 220, 221, 235, 243], "train_load": [10, 11, 12, 13, 32, 34, 89, 90, 106, 107, 108, 109, 223, 225, 227, 247, 248, 250, 251], "test_load": [10, 11, 12, 13, 31, 33, 89, 222, 224, 226, 246, 249], "worker": [11, 12, 13, 28, 208], "dataset_nam": [12, 30, 90, 108], "pose_regression_timeseries_subject_1": [12, 18, 30], "sound_length": [12, 17, 18, 30], "2400": [12, 17, 18, 30], "input_featur": [12, 17, 18, 30], "logmel": [12, 17, 18, 30, 36], "shuffl": 12, "pin_memori": 12, "drop_last": 12, "target": [12, 17, 18, 182, 194, 195, 204, 256, 257], "select": [12, 13, 16, 17, 18, 22, 23, 25, 26, 37, 43, 66, 67, 161, 163, 216, 217, 219, 220, 228, 229, 230, 233, 234, 236, 243, 273], "800": [12, 17, 18], "1600": [12, 17, 18], "4800": [12, 17, 18], "4096": [12, 17, 18], "featur": [12, 17, 18, 19, 30, 42, 52, 68, 69, 70, 121, 130, 151, 153, 155, 158, 159, 164, 165, 166, 169, 172, 174, 176, 177, 183, 184, 185, 187, 188, 191, 193, 205, 209, 230, 231, 232, 253, 254, 256, 259, 262, 264, 265, 274, 276, 277], "us": [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 39, 40, 41, 42, 43, 44, 45, 51, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 72, 73, 74, 75, 102, 103, 104, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 144, 151, 152, 153, 155, 156, 157, 161, 165, 179, 183, 184, 191, 193, 194, 195, 198, 204, 205, 207, 208, 215, 216, 217, 218, 219, 221, 228, 229, 230, 231, 237, 243, 244, 252, 253, 254, 255, 256, 257, 259, 260, 264, 272, 274, 276, 279, 280, 281, 282], "all": [12, 17, 18, 39, 44, 57, 67, 68, 69, 70, 71, 72, 73, 84, 85, 86, 87, 88, 91, 92, 93, 94, 96, 97, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 153, 155, 161, 181, 189, 190, 192, 203, 205, 208, 219, 228, 229, 230, 231, 232, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 274, 276, 277, 278, 279, 280, 286], "intens": [12, 17, 18], "wheter": 12, "copi": 12, "devic": [12, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 65, 72, 73, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 114, 152, 222, 223, 224, 225, 226, 227, 234, 236, 244, 245, 246, 247, 248, 249, 250, 251, 272, 279, 280], "cuda": [12, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 152, 153, 222, 223, 224, 225, 226, 227, 244, 245, 246, 247, 248, 249, 250, 251], "pin": 12, "memori": [12, 228, 258], "them": [12, 68, 69, 70, 84, 85, 86, 87, 88, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 157, 189, 190, 203, 228, 229, 230, 231, 232, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 274, 276, 277], "drop": 12, "incomplet": 12, "compos": [12, 17, 18], "val_load": [12, 32, 90, 248, 251], "listen": [12, 17, 18, 40, 41], "behavior": [12, 17, 18, 40, 41], "3d": [12, 17, 18, 40, 41, 134, 135, 151, 163, 172, 195, 196, 200, 203, 205, 208, 209, 219, 231, 255, 260, 263], "github": [12, 17, 18, 27, 28, 29, 30, 40, 41, 43, 49, 52, 90, 95, 96, 97, 216, 217, 219, 220, 243], "com": [12, 17, 18, 27, 28, 29, 30, 40, 41, 43, 49, 52, 67, 90, 95, 96, 97, 216, 217, 219, 243], "yutoshibata07": [12, 17, 18, 29, 30, 40, 41], "acousticpose_publ": [12, 17, 18, 29, 30, 40, 41], "avp": [13, 23, 26], "task": [13, 19, 23, 26, 27, 28, 35, 36, 37, 43, 98, 99, 100, 101, 112, 113, 114, 115, 192, 243, 263, 265], "ideloc_ori_cloth": 13, "afpild": [13, 23, 26, 27, 28, 43], "id": [13, 19, 23, 26, 27, 37, 43, 67, 158, 200, 233], "loc": [13, 19, 23, 26, 27, 37, 43], "ideloc": [13, 19, 23, 26, 27, 37, 43], "accil": [13, 19, 23, 26, 27, 37, 43], "_": [13, 19, 23, 26, 27, 37, 43, 106, 107, 108, 109, 154], "ori": [13, 19, 23, 26, 27, 37, 43], "ana": [13, 19, 23, 26, 27, 37, 43], "rd": [13, 19, 23, 26, 27, 37, 43], "cloth": [13, 19, 23, 26, 27, 37, 43], "shoe": [13, 19, 23, 26, 27, 37, 43], "support": [13, 49, 217, 220, 233, 234, 235, 236, 243], "val": [13, 89, 90, 95, 216, 217, 243], "har": [14, 15, 21, 24, 31, 32, 33, 34, 35, 38, 39, 89, 91, 92, 93, 98, 106, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 215, 216, 222, 223, 228, 229, 243, 246, 247, 248, 254, 261, 264], "subset": [14, 15, 16, 19, 20, 27, 155, 161], "enhanc": [14, 38, 252, 262, 265], "inerti": [14, 38], "sens": [14, 38], "design": [14, 15, 265, 266], "imu": [14, 15], "collect": [14, 15, 19, 43, 66, 92, 216, 217, 219, 220, 235, 286], "watch": [14, 15], "action": [14, 15, 31, 32, 33, 34, 82, 95, 96, 216, 217, 222, 223, 228, 229, 235, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264], "user": [14, 15], "23": [14, 38], "directori": [14, 15, 16, 17, 18, 19, 20, 27, 28, 30, 32, 91, 92, 93, 94, 96, 97, 156, 157, 158, 200, 201, 204, 208], "where": [14, 15, 16, 19, 20, 50, 53, 56, 57, 65, 71, 74, 75, 151, 152, 154, 156, 157, 160, 172, 191, 192, 194, 195, 197, 200, 201, 202, 203, 204, 206, 234, 236, 237, 266, 272, 278, 281, 282], "found": [14, 15, 16, 19, 20, 90, 206], "tupl": [14, 15, 16, 19, 20, 156, 159, 163, 164, 169, 170, 171, 176, 177, 193, 201, 205], "follow": [14, 15, 16, 19, 20, 65, 67, 116, 118, 121, 122, 124, 125, 127, 130, 131, 133, 158, 159, 183, 187, 194, 199, 230, 272, 273], "item": [14, 15, 16, 19, 20, 67, 153, 273], "activity_class": [14, 15, 16], "orgin": [14, 38, 39, 163, 164], "paper": [14, 15, 20, 38, 39, 42, 67, 163, 164], "reimplemet": [14, 38, 39, 163, 164], "take": [14, 38, 39, 42, 68, 69, 70, 71, 84, 85, 86, 87, 88, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 163, 164, 184, 189, 190, 228, 229, 230, 231, 232, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 274, 276, 277, 278], "subject": [14, 15, 16, 36, 94, 95, 96, 220], "01": [14, 30, 65, 272], "02": [14, 65, 106, 107, 108, 109, 272], "03": 14, "04": 14, "while": [14, 16, 68, 69, 70, 84, 85, 86, 87, 88, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 189, 190, 228, 229, 230, 231, 232, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 274, 276, 277], "other": [14, 15], "audioimu_dataset": 14, "split": [14, 15, 16, 20, 95, 151, 215, 216, 217, 218, 219, 220, 221, 235, 243], "__getitem__": [14, 15, 16, 17, 18, 19, 20], "obtain": [14, 15, 16, 19, 20, 21, 22, 23, 45, 47, 48, 141, 244], "reimplement": [15, 16, 20, 39], "sensor": [15, 19, 39, 43, 72, 217, 219, 233, 235, 279], "motion": [15, 39, 257], "abd": [15, 39], "subsampl": [15, 39], "There": 15, "total": [15, 157, 161, 183, 228, 229, 230, 233], "27": [15, 39, 95], "In": [15, 16, 217, 230], "librari": [15, 16, 20, 42, 66, 67, 72, 279], "we": [15, 72, 114, 279], "provid": [15, 21, 22, 23, 24, 25, 26, 31, 32, 33, 34, 36, 37, 67, 98, 99, 100, 101, 102, 103, 104, 105, 152, 153, 154, 179, 204, 215, 218, 221, 222, 223, 224, 225, 226, 227, 244, 246, 247, 248, 249, 250, 251], "17": [15, 65, 134, 135, 231, 232, 272], "49": [15, 65, 154, 272], "53": 15, "105": [15, 66], "205": 15, "samosa_dataset": 15, "dataclass": 15, "class_dict": 15, "hgr": [16, 217, 218, 224, 225, 230, 243, 246, 249, 250, 251], "myographi": 16, "wavelet": [16, 138], "scatter": 16, "contain": [16, 18, 19, 20, 27, 28, 29, 30, 38, 57, 74, 75, 92, 110, 111, 151, 152, 153, 154, 155, 156, 158, 159, 162, 163, 196, 199, 203, 205, 206, 207, 208, 209, 216, 217, 235, 281, 282], "aucoust": 16, "8": [16, 75, 90, 93, 108, 144, 155, 158, 159, 183, 188, 199, 203, 204, 205, 231, 252, 282], "pronat": 16, "supin": 16, "wrist": 16, "flexion": 16, "extens": 16, "radial": 16, "deviat": [16, 78, 84, 173, 285], "ulnar": 16, "close": 16, "open": 16, "hook": [16, 68, 69, 70, 84, 85, 86, 87, 88, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 189, 190, 228, 229, 230, 231, 232, 245, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 274, 276, 277], "grip": [16, 66], "fine": 16, "pinch": 16, "tripod": 16, "index": [16, 17, 18, 19, 28, 149, 178, 179, 181, 191, 201, 206, 216, 233], "finger": 16, "thumb": 16, "No": 16, "movement": [16, 262], "rest": 16, "aa01": 16, "cu14": 16, "dh18": 16, "nl20": 16, "nm08": 16, "sr11": 16, "remain": [16, 234], "amg_dataset": 16, "normalization_processing_torch": [16, 20], "normalization_processing_torch_al": [16, 20], "spectrogram_process": [16, 20], "audio_data": [16, 20], "hpe": [17, 18, 22, 25, 29, 30, 36, 37, 40, 41, 95, 96, 100, 108, 114, 134, 135, 219, 220, 221, 226, 227, 231, 232], "csv_file": [17, 18], "mean": [17, 18, 74, 75, 144, 173, 216, 281, 282], "std": [17, 18, 173], "data_dir": [17, 18], "is_train": [17, 18, 66, 67], "aug": [17, 18], "gemner": [17, 18], "2d": [17, 66, 67, 72, 124, 133, 188, 230, 233, 253, 254, 256, 259, 262, 264, 279, 286], "melspectrogram": [17, 40, 55], "speech2pos": [17, 22, 25, 30, 36], "csv": [17, 18, 30, 65, 217, 272], "file": [17, 18, 27, 28, 29, 30, 65, 110, 114, 154, 156, 157, 158, 159, 196, 199, 201, 205, 209, 216, 217, 233, 235, 272], "np": [17, 18, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 95, 96, 97, 137, 138, 139, 140, 141, 142, 144, 154, 155, 157, 158, 159, 205, 233, 234, 235, 236, 237, 280, 281, 282, 283, 284, 285], "arrai": [17, 18, 19, 43, 73, 74, 75, 76, 95, 96, 97, 155, 157, 158, 159, 161, 205, 206, 207, 233, 234, 236, 280, 281, 282, 283], "normalizatoin": [17, 18], "dir": [17, 18, 95, 97, 200, 201, 203, 215, 218, 220, 221], "stage": [17, 18], "dict": [17, 18, 19, 23, 26, 43, 51, 54, 55, 92, 95, 153, 160, 237], "ani": [17, 18, 173], "seq_len": [17, 18, 40], "audio_featur": [17, 18, 27], "num_joint": [17, 18], "teste": [17, 18], "testee_num": [17, 18], "hpe_traindataset": [17, 18], "get_mean": 17, "astyp": [17, 18], "float32": [17, 18, 66, 67], "get_std": 17, "9": [17, 18, 93, 144], "1d": [18, 41, 53, 57, 68, 73, 187, 274, 280], "wipose_lstm": 18, "hpe_dataset": [18, 30], "s": [18, 50, 56, 57, 162, 176, 177, 179, 181, 191, 262], "hpe_testdataset": 18, "get_raw_mean": 18, "get_raw_std": 18, "ped_det": [19, 20, 23, 26, 42, 43], "dataset_dir": [19, 27, 28], "data_typ": 19, "spec_shift": 19, "gcc_shift": 19, "inplement": [19, 43], "footstep": [19, 20, 43], "one": [19, 43, 68, 69, 70, 71, 72, 73, 84, 85, 86, 87, 88, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 171, 189, 190, 228, 229, 230, 231, 232, 235, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 274, 276, 277, 278, 279, 280], "microphon": [19, 40, 41, 43], "lidar": [19, 43], "person": [19, 43, 217, 230], "identif": [19, 43, 82, 125, 126, 127, 128, 129, 130, 131, 132, 133], "local": [19, 20, 42, 43, 63, 68, 69, 70, 71, 72, 73, 74, 75, 163, 181, 187, 193, 273, 274, 276, 277, 278, 279, 280, 281, 282, 289], "pedestain": [19, 20, 43], "which": [19, 20, 21, 22, 23, 24, 25, 26, 42, 43, 49, 65, 68, 69, 70, 71, 72, 73, 74, 75, 98, 99, 100, 101, 102, 103, 104, 105, 141, 151, 169, 171, 177, 216, 244, 252, 257, 258, 263, 265, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282], "classif": [19, 38, 39, 43, 121, 130, 265], "aim": [19, 40, 41, 43, 261], "slect": [19, 21, 23, 24, 26, 27], "gcc": [19, 43], "numpi": [19, 71, 73, 74, 75, 76, 77, 78, 88, 158, 159, 234, 236, 278, 280, 281, 282, 283, 284, 285], "sub_label_encod": 19, "loc_theta": 19, "accdoa_xi": 19, "afpild_traindataset": 19, "ide_ori_cloth": 19, "data_dict": 19, "person_index": 19, "av": [20, 42], "pedawar": [20, 42], "self": [20, 42, 73, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 132, 220, 280], "supervis": [20, 42, 220], "visual": [20, 42, 160, 203], "fusion": [20, 27, 42], "dynam": [20, 42, 164, 165, 183, 259], "awar": [20, 42, 74, 75, 281, 282], "posit": [20, 68, 69, 71, 73, 124, 133, 151, 152, 163, 164, 170, 176, 193, 195, 199, 203, 204, 274, 276, 278, 280], "both": [20, 36, 42, 51, 52, 53, 54, 56, 57, 195, 256], "inform": [20, 152, 199, 204, 256, 257, 262], "utliz": 20, "locali": 20, "avped_dataset": 20, "inferenc": [21, 22, 23, 24, 25, 26, 98, 99, 100, 101, 102, 103, 104, 105, 244], "requir": [21, 22, 23, 24, 25, 26, 84, 85, 86, 88, 98, 99, 100, 101, 102, 103, 104, 105, 137, 138, 139, 140, 142, 244, 273], "belong": [21, 22, 23, 24, 25, 26, 67, 98, 99, 101, 102, 103, 104, 105, 273], "nn": [21, 22, 23, 24, 25, 26, 31, 32, 33, 34, 69, 106, 107, 108, 109, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 152, 153, 222, 223, 224, 225, 226, 227, 244, 246, 247, 248, 249, 250, 251, 276], "pretrain": [21, 22, 23, 24, 25, 26, 30, 35, 36, 37, 98, 99, 100, 101, 102, 103, 104, 105, 114, 152, 244], "zero": [21, 22, 23, 24, 25, 26, 49, 75, 98, 99, 100, 101, 102, 103, 104, 105, 144, 244, 282], "96": [21, 24], "is_avail": [21, 22, 23, 24, 25, 26, 31, 32, 33, 34, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 152, 222, 223, 224, 225, 226, 227, 244, 246, 247, 248, 249, 250, 251], "els": [21, 22, 23, 24, 25, 26, 31, 32, 33, 34, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 152, 222, 223, 224, 225, 226, 227, 236, 244, 246, 247, 248, 249, 250, 251], "cpu": [21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 114, 152, 222, 223, 224, 225, 226, 227, 244, 245, 246, 247, 248, 249, 250, 251], "har_samcnn": [21, 24], "soundpose2ddataset": [22, 25], "soundposelstmdataset": [22, 25], "12": [22, 25, 65, 96, 244, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 272], "128": [22, 25, 54, 142, 169, 189, 232, 244, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 266], "ideloc_ori_rd": [23, 26, 37], "If": [23, 26, 29, 35, 36, 37, 45, 51, 54, 55, 56, 86, 88, 155, 197, 198, 199, 205, 219], "ped_cnn": [23, 26, 37], "frame": [24, 25, 26, 51, 53, 54, 56, 57, 90, 95, 102, 103, 104, 105, 108, 220, 230, 231, 233, 234, 235, 236, 237], "deviv": [24, 25, 26, 244], "logit": [24, 25, 26, 102, 103], "afpild_util": [27, 28], "config_fil": [27, 28], "afpild_utli": 27, "config": [27, 28, 29, 30, 220, 221], "afpild_spec_gcc_fus": [27, 28], "json": [27, 28, 158, 159, 205, 209], "root_dir": [27, 28, 30, 91, 92, 93, 94, 97], "resume_path": 27, "save": [27, 28, 30, 32, 66, 196, 208, 209, 248, 251, 286], "crnn": [27, 28, 43], "accil_ori_cloth": [27, 28], "model_best": 27, "pth": [27, 29], "mode": [27, 28, 29, 71, 243, 278], "run_id": [27, 28], "log_nam": [27, 28], "function": [27, 28, 29, 30, 31, 32, 33, 34, 39, 44, 45, 46, 47, 48, 49, 51, 53, 54, 56, 57, 68, 69, 70, 71, 72, 84, 85, 86, 87, 88, 106, 107, 108, 109, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 151, 156, 157, 161, 189, 190, 196, 215, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 274, 276, 277, 278, 279], "run": [27, 28, 68, 69, 70, 84, 85, 86, 87, 88, 91, 92, 100, 106, 107, 108, 109, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 157, 189, 190, 228, 229, 230, 231, 232, 245, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 274, 276, 277], "execut": [27, 29, 30], "phase": [27, 44, 52, 110, 111], "machin": 27, "learn": [27, 28, 30, 121, 130, 163, 164, 183, 184], "configur": [27, 28, 29, 30, 163, 220], "result": [27, 28, 30, 38, 39, 40, 41, 49, 51, 56, 57, 71, 73, 74, 75, 155, 171, 172, 173, 188, 196, 197, 260, 263, 278, 280, 281, 282], "checkpoint": [27, 28, 29, 30], "resum": [27, 28, 30], "e": [27, 28, 30, 31, 32, 34, 44, 45, 46, 53, 57, 151, 158, 162, 172, 217, 222, 223, 224, 225, 226, 227, 228, 229, 230, 233, 235, 237, 245, 246, 247, 248, 249, 250, 251], "g": [27, 28, 30, 31, 32, 34, 44, 45, 46, 49, 151, 158, 162, 172, 222, 223, 224, 225, 226, 227, 228, 229, 230, 233, 245, 246, 247, 248, 249, 250, 251], "oper": [27, 28, 29, 68, 69, 116, 124, 125, 133, 187, 274, 276], "uniqu": [27, 28], "identifi": [27, 28, 30, 233], "current": [27, 28, 53, 57, 156, 233], "log": [27, 28, 55], "record": [27, 28, 65, 235, 272], "metric": [27, 31, 33, 71, 222, 224, 226, 246, 249, 278], "specif": [27, 28, 36, 90, 144, 158, 172, 245], "offici": [27, 28], "repo": [27, 28, 29, 30], "cratial": [27, 28], "20241030055348": 27, "accil_ori_rd": 27, "fold_idx": 28, "lr": [28, 106, 107, 108, 109], "bs": [28, 40], "tp": 28, "epoch": [28, 30, 32, 34, 106, 107, 108, 109, 223, 225, 227, 247, 248, 250, 251], "progress": [28, 35, 36, 37], "fold": 28, "cross": [28, 49, 220], "process": [28, 77, 78, 86, 87, 143, 144, 152, 155, 156, 157, 170, 188, 196, 208, 209, 252, 253, 254, 259, 260, 261, 263, 264, 284, 285], "optim": [28, 30, 32, 34, 106, 107, 108, 109, 223, 225, 227, 247, 248, 250, 251], "purpos": [28, 160], "custom_config": 28, "accil_ana_sho": 28, "project": [28, 68, 69, 173, 216, 217, 274, 276], "acousticpose_util": [29, 30], "hpe_test": 29, "config_path": [29, 30], "model_path": 29, "mpdel": [29, 30], "pre": [29, 265], "code": [29, 30], "officail": [29, 30], "acousticpos": [29, 30], "acoustic_model": 29, "yaml": [29, 30], "best_model": 29, "hpe_train": 30, "seed": [30, 66, 67], "initi": [30, 257, 265], "random": [30, 75, 84, 85, 86, 87, 88, 90, 137, 138, 139, 140, 141, 142, 151, 154, 203, 220, 234, 236, 237, 282], "generate_config": 30, "arg": [30, 217, 233], "testing_result": 30, "save_nam": 30, "seq1": 30, "experi": 30, "batchsiz": 30, "max_epoch": 30, "50": [30, 99, 103, 230], "csv_path": 30, "format": [30, 56, 65, 198, 209, 228, 229, 230, 235, 272], "sequenc": [30, 95, 228, 229, 230, 233, 235, 237, 262], "learning_r": 30, "resume_train": 30, "random_se": [30, 90, 108], "reproduc": 30, "boolean": [30, 65, 66, 67, 272], "flag": [30, 65, 272], "start": 30, "fresh": 30, "ensur": [30, 161], "har_train": [31, 32], "criterion": [31, 32, 33, 106, 107, 108, 109, 222, 223, 224, 225, 226, 227, 246, 247, 248, 249, 250, 251], "util": [31, 32, 33, 34, 42, 134, 155, 156, 157, 158, 159, 160, 161, 162, 211, 215, 218, 221, 222, 223, 224, 225, 226, 227, 246, 247, 248, 249, 250, 251, 265], "data_load": [31, 32, 33, 34, 152, 204, 222, 223, 224, 225, 226, 227, 246, 247, 248, 249, 250, 251], "lossfunct": [31, 32, 222, 223, 224, 225, 226, 227, 246, 247, 248, 249, 250, 251], "loss": [31, 32, 39, 72, 106, 107, 108, 109, 222, 223, 224, 225, 226, 227, 246, 247, 248, 249, 250, 251, 279], "crossentropyloss": [31, 32, 106, 107, 109, 222, 224, 226, 246, 249], "test_loss": [31, 33], "samosa_model": [31, 32], "samosa_testload": [31, 32], "num_epoch": [32, 34, 223, 225, 227, 247, 248, 250, 251], "save_dir": 32, "adam": [32, 34, 223, 225, 227, 247, 248, 250, 251], "0001": 32, "samosa_trainload": 32, "ped_det_train": 33, "avped_model": [33, 34], "avped_testload": 33, "avped_trainload": 34, "get_model": [35, 36, 37, 112, 113, 114, 115], "model_nam": [35, 36, 37, 112, 113, 114, 115, 248, 251], "samcnn": 35, "choos": [35, 36, 37, 73, 112, 113, 114, 144, 280], "audiocnn": 35, "pretrin": [35, 36, 37], "weight": [35, 36, 37, 54, 71, 73, 177, 257, 265, 278, 280], "displai": [35, 36, 37], "bar": [35, 36, 37], "subject2": 36, "wipos": 36, "network": [36, 40, 41, 42, 134, 135, 155, 163, 172, 184, 244, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266], "work": [36, 37, 71, 278], "equal": [36, 57, 124, 133, 193], "subject1": 36, "subject8": 36, "classroom": 36, "ped_crnn": 37, "pedstrian": 37, "For": [37, 54, 56, 216], "classes_num": 38, "consist": [38, 39, 68, 69, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 274, 276], "six": 38, "convolut": [38, 39, 40, 41, 42, 68, 116, 118, 121, 125, 127, 130, 135, 165, 187, 231, 253, 254, 255, 256, 259, 260, 262, 263, 264, 274], "block": [38, 116, 124, 125, 133, 232], "two": [38, 42, 43, 49, 51, 52, 68, 69, 70, 151, 163, 182, 187, 197, 233, 274, 276, 277], "mlp": [38, 39, 98, 99, 102, 103, 106, 107, 109, 112, 113, 122, 131, 169, 229, 231], "rocognit": [38, 39], "layer": [38, 39, 68, 69, 70, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 164, 165, 169, 183, 187, 229, 244, 245, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 274, 276, 277], "x": [38, 39, 41, 42, 49, 53, 57, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 91, 93, 94, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 151, 164, 165, 166, 167, 169, 170, 171, 172, 173, 175, 183, 184, 185, 186, 187, 188, 189, 190, 197, 198, 202, 228, 229, 230, 232, 234, 237, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 274, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286], "init_weight": 38, "num_class": [39, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 163, 172, 183, 188, 228, 229, 230, 231], "dropout": [39, 42, 118, 127, 164, 183, 229, 231], "four": [39, 162], "doe": [39, 67], "sigmoid": 39, "crossentopi": 39, "directli": 39, "in_cha": [40, 41], "out_cha": [40, 41], "63": [40, 41], "mel": [40, 54, 55], "21": [40, 154, 160], "lstm": [41, 112, 113, 117, 120, 126, 129, 228, 244, 245, 254, 259, 262], "po": [41, 151, 163, 164, 170], "05": [42, 65, 219, 272], "kernel": 42, "extract": [42, 158, 164, 165, 172, 177, 183, 187, 193, 201, 205, 209, 254, 256, 259, 262, 264, 265], "focus": [42, 256, 257], "locat": [42, 43, 65, 66, 67, 68, 69, 157, 201, 219, 272, 274, 276, 286], "perform": [43, 65, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 151, 156, 169, 171, 172, 173, 177, 178, 183, 187, 189, 190, 197, 198, 228, 229, 230, 231, 232, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 272, 274, 276, 277, 278, 280, 281, 282, 283, 284, 285], "mono": 43, "simultan": [43, 263], "branch": [43, 172], "accdoa": 43, "unifi": 43, "primari": 43, "anastroph": 43, "covari": 43, "respect": [43, 72, 151, 216, 253, 279], "nkusrlab": 43, "input_fea": 43, "spec": 43, "spec_fea": 43, "gcc_fea": 43, "central_freq": [44, 45, 46], "q": [44, 45, 46, 47, 48, 197, 198], "707": [44, 45, 46, 47, 48], "almost": 44, "pass": [44, 68, 69, 70, 84, 85, 86, 87, 88, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 163, 164, 165, 168, 169, 170, 172, 176, 183, 184, 187, 188, 189, 190, 228, 229, 230, 231, 232, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 274, 276, 277], "compens": 44, "44100": [44, 45, 46, 47, 48, 54], "hz": [44, 45, 46], "central": [44, 45, 46], "affact": [44, 45, 46, 47, 48], "bandwidth": [44, 45, 46, 47, 48], "have": [44, 45, 46, 47, 48, 110, 111, 173, 216], "narrow": [44, 45, 46, 47, 48], "en": [44, 45, 46, 47, 48], "wikipedia": [44, 45, 46, 47, 48], "wiki": [44, 45, 46, 47, 48], "q_factor": [44, 45, 46, 47, 48], "f": [44, 45, 46, 47, 48, 49, 154], "allpass_tran": 44, "700": [44, 45, 46, 47, 48, 140], "allpass_biquad": 44, "const_skirt_gain": 45, "biquad": [45, 46, 47, 48], "certain": [45, 46, 47, 48, 151], "constant": 45, "skirt": 45, "peak": 45, "0db": 45, "bandpass_tran": 45, "bandpass_biquad": 45, "bandrejct": 46, "reject": 46, "bandject_tran": 46, "bandject": 46, "bandreject_biquad": 46, "cutoff_freq": [47, 48, 139, 140], "abov": 47, "cutoff": [47, 48], "highpass_tran": 47, "highpass_biquad": 47, "below": 48, "lowpass_tran": 48, "lowpass_biquad": 48, "filt": 49, "phat": 49, "dim": [49, 72, 73, 169, 194, 231, 279, 280], "epsilon": 49, "001": 49, "multi": [49, 54, 56, 124, 133, 176, 220, 229, 232], "correl": [49, 263], "represent": [49, 53, 252, 265], "defin": [49, 50, 52, 53, 57, 68, 69, 70, 84, 85, 86, 87, 88, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 189, 190, 228, 229, 230, 231, 232, 234, 235, 237, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 274, 276, 277], "r_": 49, "x_1": [49, 52], "x_2": [49, 52], "tau": 49, "mathcal": 49, "left": [49, 52, 202], "frac": [49, 52, 53], "omega": [49, 52, 53, 57], "right": [49, 52], "invers": [49, 53, 198], "fourier": [49, 52, 53, 56, 57, 142, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266], "first": [49, 51, 52, 54, 55, 56, 65, 71, 73, 151, 156, 195, 197, 202, 204, 236, 264, 272, 278, 280], "conjug": 49, "second": [49, 52, 65, 71, 156, 197, 272, 278], "comput": [49, 52, 55, 68, 69, 70, 73, 84, 85, 86, 87, 88, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 167, 175, 186, 189, 190, 228, 229, 230, 231, 232, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 274, 276, 277, 280, 286], "vari": 49, "chosen": 49, "cc": [49, 65, 272], "roth": 49, "scot": 49, "small": [49, 124, 133, 254], "avoid": [49, 51, 56, 57], "divis": 49, "t": [49, 50, 51, 52, 53, 54, 55, 56, 57, 194, 237, 255, 261], "gcc_tran": 49, "waveform2": [49, 52], "axeber01": [49, 52], "ngcc": [49, 52], "blob": [49, 52, 97], "y": [49, 66, 67, 72, 73, 91, 93, 94, 96, 151, 197, 198, 202, 234, 237, 279, 280, 286], "stype": 50, "power": [50, 54, 56, 73, 280], "top_db": 50, "text": [50, 51, 52, 53, 54, 56, 57], "10": [50, 65, 72, 75, 77, 78, 93, 100, 104, 106, 107, 108, 109, 151, 228, 229, 230, 231, 237, 244, 253, 254, 256, 259, 260, 262, 263, 264, 272, 279, 282, 284, 285], "cdot": [50, 53, 57], "log_": [50, 72, 279], "quad": 50, "20": [50, 101, 105, 163, 174], "magnitud": [50, 51, 53, 54, 56, 57], "being": 50, "elementwis": 50, "squar": [50, 51, 53, 73, 182, 194, 280], "minimum": [50, 54, 77, 234, 237, 284], "neg": [50, 70, 277], "cut": 50, "off": 50, "decibel": 50, "reason": 50, "80": 50, "aplitude2db_tran": 50, "aplitude2db": 50, "spectrogram_db": 50, "amplitudetodb": 50, "todb": 50, "win_length": [51, 53, 54, 56, 57], "pad": [51, 53, 54, 56, 57, 74, 75, 230, 281, 282], "window_fn": [51, 54, 56], "built": [51, 54, 56], "hann_window": [51, 54, 56], "object": [51, 54, 56, 65, 71, 72, 94, 152, 153, 154, 155, 156, 200, 203, 204, 205, 207, 209, 220, 272, 278, 279], "normal": [51, 53, 54, 55, 56, 57, 66, 67, 116, 124, 125, 133, 172, 180, 187, 193, 207, 219], "wkwarg": [51, 54, 56], "center": [51, 53, 54, 56, 57, 78, 180, 285], "pad_mod": [51, 54, 56, 57], "onesid": [51, 53, 54, 56, 57], "fft": [51, 54, 56], "creat": [51, 54, 71, 160, 161, 278], "bin": [51, 54, 56, 57, 110, 235, 237], "side": [51, 53, 54, 56, 57], "callabl": [51, 54, 91, 94], "wa": [51, 53], "frame_length": [51, 56], "map": [51, 56, 72, 155, 160, 201, 279], "argument": [51, 54, 74, 75, 281, 282], "so": [51, 53, 54, 56, 57, 74, 75, 180, 281, 282], "th": [51, 53, 54, 56, 57], "_length": [51, 53, 54, 56, 57], "half": [51, 56, 57], "redund": [51, 56, 57], "inversespectorgram_tran": 51, "stabl": [51, 53, 54, 55, 56, 57], "least": [51, 53, 73, 280], "co": 52, "sin": 52, "interaur": 52, "cosin": [52, 55], "cosipd": 52, "sine": 52, "sinipd": 52, "spatial": [52, 134, 231, 252, 253, 259, 262, 263], "angl": [52, 207, 252, 253, 254, 255, 259, 260, 261], "ipd_tran": 52, "waveform1": 52, "wave1_stft": 52, "wave2_stft": 52, "si_stft": 52, "short": [52, 53, 57, 142, 217, 228], "sj_stft": 52, "return_complex": [53, 56, 57], "back": [53, 196], "its": [53, 57, 67, 166, 174, 185, 205, 257], "n": [53, 57, 71, 93, 158, 159, 172, 176, 177, 178, 179, 180, 181, 182, 191, 192, 193, 194, 206, 234, 236, 237, 278], "sum_": [53, 57], "m": [53, 57, 182, 194, 202, 217, 230], "w": [53, 57, 197, 198, 202], "j": [53, 57], "reconstruct": [53, 82, 97, 101, 105, 115, 136, 219, 220, 231], "repres": [53, 57, 157, 158, 159, 161, 162, 163, 170, 172, 188, 195, 197, 198, 200, 202, 203, 206, 207, 235, 237], "offset": [53, 57], "consecut": [53, 57], "resolut": [53, 57, 228, 229, 235, 237, 252, 266], "exponenti": [53, 57], "basi": [53, 57, 257, 265], "factor": [53, 72, 86, 279], "account": 53, "overlap": 53, "distanc": [53, 57, 71, 72, 73, 177, 182, 194, 217, 278, 279, 280], "neighbor": [53, 57, 71, 74, 163, 164, 165, 166, 167, 172, 174, 175, 183, 185, 186, 187, 192, 193, 206, 207, 278, 281], "slide": [53, 57, 93, 228, 229, 230, 233, 239], "ones": 53, "fft_size": 53, "amount": [53, 54, 56], "trim": 53, "i": [53, 217, 235], "otherwis": [53, 57, 65, 199, 272], "assum": 53, "deriv": [53, 72, 279], "real": [53, 57, 217, 230, 258], "note": [53, 84, 85, 86, 88, 137, 138, 139, 140, 142], "incompat": 53, "istft_tran": 53, "doc": [53, 57], "That": 53, "b": [53, 57, 73, 162, 172, 176, 177, 178, 179, 181, 182, 191, 192, 193, 194, 228, 229, 230, 280], "an": [53, 57, 65, 69, 72, 74, 118, 127, 155, 156, 161, 198, 228, 229, 230, 233, 234, 254, 259, 262, 272, 276, 279, 281], "16000": [54, 55], "f_min": 54, "f_max": 54, "n_mel": 54, "norm": [54, 55, 71, 278], "mel_scal": 54, "htk": 54, "filterbank": 54, "expon": [54, 56], "deprec": 54, "unus": 54, "slanei": 54, "divid": [54, 56, 124, 133], "triangular": 54, "width": 54, "band": 54, "area": 54, "melspectrogram_tran": 54, "melspectorgram_tran": 54, "n_mfcc": 55, "40": [55, 95], "dct_type": 55, "ortho": 55, "log_mel": 55, "melkwarg": 55, "coeffici": 55, "discret": [55, 138, 265], "dct": 55, "instead": [55, 68, 69, 70, 84, 85, 86, 87, 88, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 189, 190, 228, 229, 230, 231, 232, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 274, 276, 277], "addit": 55, "mfcc_tran": 55, "specgram_mel_db": 55, "convert": [56, 66, 155, 162, 202, 237], "success": 56, "spectrum": [56, 86, 87], "string": [56, 65, 66, 67, 91, 92, 93, 94, 97, 162, 272, 273, 286], "l2": [56, 71, 278], "energi": 56, "n_frame": 56, "spectorgram_tran": 56, "treat": 57, "floor": [57, 273], "extra": 57, "imaginari": 57, "compon": [57, 151, 162, 265], "stft_tran": 57, "l": [57, 71, 278], "c": [57, 73, 176, 177, 179, 180, 182, 191, 194, 280], "synchron": [63, 289], "triangul": [63, 72, 279, 289], "fingerprint": [63, 68, 69, 70, 71, 274, 276, 277, 278, 289], "bluetooth": [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 149], "variou": [65, 72, 73, 272, 279, 280], "mac": [65, 272], "either": [65, 158, 159, 272], "txt": [65, 199, 201, 216, 235, 272], "highli": [65, 272], "recommend": [65, 68, 69, 272, 274, 276], "line": [65, 272], "order": [65, 157, 272], "address": [65, 272], "also": [65, 72, 157, 272, 279], "header": [65, 272], "descript": [65, 67, 272], "appear": [65, 84, 85, 86, 88, 137, 138, 139, 140, 142, 272], "row": [65, 203, 204, 272], "read": [65, 196, 201, 272], "automat": [65, 74, 75, 170, 272, 281, 282], "like": [65, 257, 265, 272], "timestamp": [65, 110, 111, 272, 273], "ble": [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], "2024": [65, 272], "11": [65, 154, 160, 272], "59": [65, 272], "bb": [65, 272], "54": [65, 272, 286], "dd": [65, 272], "72": [65, 272], "13": [65, 272], "ee": [65, 272], "42": [65, 272], "30": [65, 74, 84, 85, 137, 138, 139, 140, 141, 142, 272, 281], "aa": [65, 272], "65": [65, 272], "44": [65, 272], "55": [65, 272], "46": [65, 272], "45": [65, 272], "43": [65, 272], "57": [65, 272], "61": [65, 272], "60": [65, 139, 228, 229, 272], "get_sync_data": [65, 272], "path_fil": [65, 272], "has_head": [65, 272], "accord": [65, 154, 234, 272], "head": [65, 124, 133, 228, 229, 230, 231, 272], "unit": [65, 168, 169, 180, 272], "read_fil": [65, 272], "descriptors_ord": [65, 272], "unsynchron": [65, 272], "sort": [65, 272], "new": [65, 78, 272, 285], "ascend": [65, 272], "defualt": [65, 272], "update_kei": [65, 272], "all_kei": [65, 272], "wmu_ble_loc": 66, "path_dataset": [66, 67, 273, 286], "train_frac": [66, 67], "7": [66, 67, 92, 93, 151, 152, 163, 164, 195, 199, 202, 204, 219], "train_se": [66, 67], "wrapper": [66, 67, 273, 286], "west": [66, 67], "michigan": [66, 67], "univeristi": [66, 67], "waldo": [66, 67], "rssi": [66, 67, 149, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "basic": [66, 67, 286], "beacon": [66, 67, 72, 73], "14": [66, 94], "form": [66, 286], "o02": 66, "p01": 66, "coordin": [66, 67, 71, 73, 151, 152, 156, 172, 191, 192, 194, 195, 196, 198, 278, 280, 286], "grid": 66, "label": [66, 91, 92, 93, 94, 97, 153, 154, 155, 158, 159, 160, 183, 188, 205, 209, 216, 228, 229, 230, 235], "percentag": [66, 67, 87], "load_basic_info": [66, 67, 273], "load_from_raw": 66, "split_dataset": [66, 67], "amazonas_indoor_env": 67, "receiv": 67, "15": 67, "folder": [67, 209, 216], "case": [67, 158, 273], "insensit": [67, 273], "104d": 67, "10b2": 67, "10ce": 67, "1210": 67, "1211": 67, "1212": 67, "121b": 67, "121d": 67, "1f61": 67, "2055": 67, "20b5": 67, "room_id": 67, "match": 67, "www": 67, "sciencedirect": 67, "scienc": 67, "articl": 67, "pii": 67, "s2352340924006590": 67, "therefor": 67, "load_all_csv": 67, "dim_in": [68, 69, 70, 274, 276, 277], "dim_out": [68, 69, 70, 274, 276, 277], "dim_emb": [68, 69, 274, 276], "16": [68, 70, 164, 165, 232, 274, 277], "32": [68, 69, 90, 108, 116, 125, 155, 156, 159, 172, 177, 228, 229, 231, 237, 274, 276], "scan": [68, 274], "includ": [68, 69, 160, 161, 172, 199, 217, 219, 274, 276], "encod": [68, 69, 118, 121, 124, 127, 130, 133, 169, 183, 274, 276], "linear": [68, 69, 70, 164, 228, 229, 230, 252, 257, 265, 274, 276, 277], "leakyrelu": [68, 69, 70, 274, 276, 277], "tanh": [68, 69, 274, 276], "sever": [68, 274], "stack": [68, 274], "combin": [68, 195, 255, 262, 274], "conv1d": [68, 274], "vector": [68, 69, 70, 71, 72, 73, 155, 158, 159, 198, 202, 257, 265, 274, 276, 277, 278, 279, 280], "dim_hidden": [68, 70, 274, 277], "hidden": [68, 69, 70, 112, 113, 117, 118, 119, 120, 123, 126, 127, 128, 129, 132, 168, 274, 276, 277], "usual": [68, 69, 70, 110, 111, 274, 276, 277], "final": [68, 69, 274, 276], "relu": [68, 69, 187, 229, 230, 231, 274, 276], "becaus": [68, 69, 72, 274, 276, 279], "mai": [68, 69, 274, 276], "probabl": [68, 69, 85, 151, 155, 164, 177, 183, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 274, 276], "non": [68, 69, 72, 220, 232, 274, 276, 279], "everi": [68, 69, 70, 84, 85, 86, 87, 88, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 189, 190, 228, 229, 230, 231, 232, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 274, 276, 277], "call": [68, 69, 70, 71, 84, 85, 86, 87, 88, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 189, 190, 228, 229, 230, 231, 232, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 274, 276, 277, 278], "overridden": [68, 69, 70, 84, 85, 86, 87, 88, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 189, 190, 228, 229, 230, 231, 232, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 274, 276, 277], "subclass": [68, 69, 70, 84, 85, 86, 87, 88, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 189, 190, 228, 229, 230, 231, 232, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 274, 276, 277], "although": [68, 69, 70, 84, 85, 86, 87, 88, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 189, 190, 228, 229, 230, 231, 232, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 274, 276, 277], "recip": [68, 69, 70, 84, 85, 86, 87, 88, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 189, 190, 228, 229, 230, 231, 232, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 274, 276, 277], "instanc": [68, 69, 70, 84, 85, 86, 87, 88, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 189, 190, 228, 229, 230, 231, 232, 245, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 274, 276, 277], "afterward": [68, 69, 70, 84, 85, 86, 87, 88, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 189, 190, 228, 229, 230, 231, 232, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 274, 276, 277], "sinc": [68, 69, 70, 84, 85, 86, 87, 88, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 189, 190, 228, 229, 230, 231, 232, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 274, 276, 277], "former": [68, 69, 70, 84, 85, 86, 87, 88, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 189, 190, 228, 229, 230, 231, 232, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 274, 276, 277], "care": [68, 69, 70, 84, 85, 86, 87, 88, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 189, 190, 228, 229, 230, 231, 232, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 274, 276, 277], "regist": [68, 69, 70, 84, 85, 86, 87, 88, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 189, 190, 228, 229, 230, 231, 232, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 274, 276, 277], "latter": [68, 69, 70, 84, 85, 86, 87, 88, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 189, 190, 228, 229, 230, 231, 232, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 274, 276, 277], "silent": [68, 69, 70, 84, 85, 86, 87, 88, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 189, 190, 228, 229, 230, 231, 232, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 274, 276, 277], "ignor": [68, 69, 70, 84, 85, 86, 87, 88, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 189, 190, 228, 229, 230, 231, 232, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 274, 276, 277], "generate_embed": [68, 69, 70, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 274, 276, 277], "dim_lstm": [69, 276], "num_lay": [69, 276], "three": [70, 151, 263, 277], "slope": [70, 277], "database_posit": [71, 278], "database_bl": 71, "k": [71, 74, 75, 163, 164, 165, 166, 167, 174, 175, 183, 184, 185, 186, 187, 192, 193, 206, 278, 281, 282], "nearest": [71, 163, 164, 165, 166, 167, 174, 175, 183, 185, 186, 192, 278], "algorithm": [71, 278], "euclidean": [71, 194, 278], "similar": [71, 257, 278], "ndarrai": [71, 73, 74, 75, 76, 77, 78, 88, 155, 157, 158, 159, 205, 234, 235, 236, 237, 278, 280, 281, 282, 283, 284, 285, 286], "point": [71, 151, 152, 153, 155, 157, 161, 163, 164, 165, 166, 167, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 205, 206, 208, 209, 216, 217, 219, 220, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 258, 278, 286], "r": [71, 72, 162, 278, 279], "whole": [71, 278], "preduc": [71, 278], "compute_similar": [71, 278], "point_queri": [71, 278], "point_support": [71, 278], "check": [71, 278], "queri": [71, 181, 192, 278], "store": [71, 110, 111, 156, 200, 204, 278], "diff_height": [72, 73, 279, 280], "known": [72, 279], "height": [72, 73, 279, 280], "mobil": [72, 73, 279, 280], "neglig": [72, 279], "consid": [72, 152, 163, 172, 206, 207, 279], "assumpt": [72, 279], "instal": [72, 279], "move": [72, 74, 256, 257, 279, 281], "horizont": [72, 279], "plane": [72, 279], "propag": [72, 279], "express": [72, 279], "begin": [72, 279], "align": [72, 184, 211, 279], "p_": [72, 279], "alpha": [72, 279], "d": [72, 73, 74, 75, 176, 193, 231, 232, 279, 280, 281, 282], "sqrt": [72, 279], "d_": [72, 279], "h": [72, 93, 279], "v": [72, 93, 279], "end": [72, 157, 279], "vertic": [72, 154, 206, 207, 279], "given": [72, 73, 74, 75, 151, 159, 192, 200, 205, 206, 234, 235, 236, 237, 279, 280, 281, 282], "denot": [72, 279], "transmit": [72, 279], "strength": [72, 279], "create_funct": [72, 279], "fit": [72, 73, 279, 280], "static": [72, 279], "func": [72, 73, 279, 280], "p0": [72, 279], "init_param": [72, 279], "param": [72, 231, 279], "param_init": [72, 279], "base_posit": [73, 280], "basedistanceregressor": [73, 280], "averag": [73, 74, 207, 280, 281, 286], "custom": [73, 168, 280], "realiz": [73, 280], "overwrit": [73, 280], "newtriangul": [73, 280], "staticmethod": [73, 280], "def": [73, 280], "reshap": [73, 74, 77, 78, 116, 125, 280, 281, 284, 285], "calcul": [73, 182, 194, 207, 280], "num_anchor": [73, 280], "new_triangul": [73, 280], "predict_dist": [73, 280], "rel": [73, 280], "randomli": [73, 280], "pair": [73, 194, 280], "ap": [73, 74, 75, 279, 280, 281, 282, 286], "correspond": [73, 151, 155, 163, 164, 200, 201, 204, 205, 235, 237, 280], "error": [73, 280], "lse": [73, 280], "Then": [73, 124, 133, 280], "sum": [73, 194, 280], "observ": [73, 280], "kernel_s": [74, 75, 281, 282], "tensor_in": [74, 75, 76, 77, 78, 281, 282, 283, 284, 285], "arang": [74, 77, 78, 281, 284, 285], "tensor_out": [74, 75, 76, 77, 78, 281, 282, 283, 284, 285], "array_in": [74, 75, 76, 77, 78, 281, 282, 283, 284, 285], "array_out": [74, 75, 76, 77, 78, 281, 282, 283, 284, 285], "Be": [74, 75, 281, 282], "even": [74, 75, 281, 282], "matrix": [74, 75, 184, 202, 281, 282], "column": [74, 75, 202, 281, 282], "physic": [74, 75, 281, 282], "independ": [74, 75, 217, 230, 281, 282], "axi": [74, 75, 151, 152, 156, 169, 171, 195, 196, 199, 204, 281, 282], "actual": [74, 75, 281, 282], "median": [75, 144, 282], "randn": [75, 84, 85, 86, 87, 88, 137, 138, 139, 140, 141, 142, 151, 163, 164, 170, 183, 188, 203, 282], "default_valu": [76, 283], "200": [76, 77], "nan": [76, 144, 283], "remov": [76, 144, 234, 283], "replac": [76, 151, 283], "without": [76, 219, 283], "inf": [76, 144, 283], "min_valu": [77, 284], "max_valu": [77, 284], "global": [77, 169, 284], "99": [77, 78, 284, 285], "mean_new": [78, 285], "std_new": [78, 285], "load_raw_data": [82, 149], "athero": [82, 110, 111], "deform": [82, 86, 87, 88], "denois": [82, 137, 138, 139, 140, 141, 142], "get_load": 82, "csi": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149], "adding_nois": [84, 85], "noise_std": 84, "gaussian": [84, 173], "csi_sign": [84, 85], "wifi": [84, 85, 92, 95, 96, 110, 111, 134, 135, 142, 279, 280, 286], "standard": [84, 173], "csi_signal_noisi": 84, "csi_process": [84, 85, 86, 87, 88], "csi_data": [84, 85, 86, 87, 88, 97, 137, 138, 139, 140, 141, 142], "144": [84, 85, 86, 87, 88, 141], "reduced_csi_data": [84, 85, 86, 87, 88, 141], "dropout_prob": 85, "csi_signal_dropout": 85, "scale_factor": 86, "greater": 86, "less": 86, "compress": [86, 88], "scaled_csi_data": 86, "shift_min": 87, "shift_max": 87, "shift": [87, 257], "num_sampl": 87, "num_subcarri": 87, "num_timestep": [87, 88], "lower": [87, 158, 160, 172, 258, 266], "bound": [87, 234], "upper": [87, 158, 160, 172, 202], "shifted_csi_data": 87, "stretch_rat": 88, "ut_har": [89, 98, 102, 106, 112, 116, 117, 118, 119, 120, 121, 122, 123, 124], "hid": [89, 94, 99, 107, 109, 113, 114, 125, 126, 127, 128, 129, 130, 131, 132, 133], "ntufi_humanid": [89, 99, 101, 103, 107, 109, 113, 125, 126, 127, 128, 129, 130, 131, 132, 133], "ntufi_har": [89, 112, 116, 117, 118, 119, 120, 121, 122, 123, 124], "widar3": [89, 112, 116, 117, 118, 119, 120, 121, 122, 123, 124], "mmfi": [90, 95, 100, 104, 108], "protocol": [90, 108], "protocol3": 90, "split_to_us": [90, 108], "data_unit": [90, 95, 108], "random_ratio": [90, 108], "manual_train_subject": 90, "manual_val_subject": 90, "manual_train_act": 90, "manual_val_act": 90, "mm": [90, 220, 232], "fi": [90, 91, 94, 220, 232, 281, 282, 283, 284, 285], "wi": [90, 96, 281, 282, 283, 284, 285], "ybhbingo": [90, 95], "mmfi_dataset": [90, 95], "websit": [90, 114], "protocol1": [90, 108], "random_split": [90, 95, 108], "modal": [91, 94, 95, 219, 220, 232], "csiamp": [91, 94], "ntu": [91, 94, 220, 286], "ieeexplor": [91, 92, 93, 94, 134], "ieee": [91, 92, 93, 94, 134], "document": [91, 92, 93, 94, 134], "9667414": 91, "3x114x500": [91, 94], "box": [91, 216, 234], "circl": 91, "clean": [91, 144], "fall": [91, 92], "walk": [91, 92, 163, 216], "936": 91, "264": 91, "imag": [91, 94, 96, 97, 105, 219, 220, 228, 229, 233, 235, 237], "csiphas": [91, 94], "ut": 92, "8067693": 92, "tool": 92, "univers": 92, "texa": 92, "austin": 92, "250x90": 92, "lie": 92, "pickup": 92, "sit": 92, "stand": 92, "3977": 92, "996": 92, "train_data": 92, "train_label": 92, "test_data": [92, 143, 144], "test_label": 92, "wifi_data": 92, "9516988": 93, "bvp": 93, "22x20x20": 93, "22": 93, "push": 93, "pull": 93, "sweep": 93, "clap": 93, "draw": 93, "o": 93, "rectangl": 93, "triangl": 93, "zigzag": 93, "34926": 93, "8726": 93, "humanid": 94, "abstract": [94, 134, 176], "9726794": 94, "gait": 94, "546": 94, "294": 94, "data_bas": 95, "data_form": 95, "3x114x10": 95, "scene": [95, 219], "metafi_databas": 95, "metafi": [95, 220], "databas": 95, "cross_scene_split": 95, "cross_subject_split": 95, "manual_split": 95, "structur": [95, 117, 118, 119, 120, 123, 126, 127, 128, 129, 132, 195, 228, 229, 230, 233], "input_mod": 95, "get_scen": [95, 220], "load_data": [95, 220], "read_dir": [95, 220], "read_fram": [95, 220], "dataroot": 96, "istrain": 96, "njtechcvlab": 96, "posedataset": 96, "5x30x5x5": 96, "packet": 96, "166600": 96, "skeletonpoint": 96, "return_train": 97, "joints_data": 97, "joint": [97, 232], "image_data": 97, "250": [98, 102], "90": [98, 102], "load_har_model": [98, 102, 106], "load_pretrain": [98, 99, 100, 101, 102, 103, 104, 105], "114": [99, 100, 101, 103, 104, 105, 138, 142], "load_hid_model": [99, 103, 107, 109], "load_hpe_model": [100, 104, 108], "wpnet": [100, 104, 108], "load_recon_model": [101, 105], "handfi": [101, 105, 115], "autoencod": [101, 105, 115], "skeleton": 104, "loader": [106, 107, 108, 109], "rutur": [106, 107, 108, 109], "load_classification_dataset": [106, 107, 109], "sgd": [106, 107, 108, 109], "load_hpe_dataset": 108, "mseloss": 108, "hid_train": 109, "load_raw": [110, 111], "load_raw_from_athero": [110, 111], "msg_csi_dir": 110, "amplitud": [110, 111], "msg_csi": [110, 111], "messag": [110, 111], "rosbag": [110, 111], "topic": [110, 111], "dictionari": [110, 111, 153, 158, 160], "msg": 111, "hidden_dim": [112, 113, 117, 119, 120, 123, 126, 128, 129, 132], "lenet": [112, 113, 121, 130], "resnet18": [112, 113], "resnet50": [112, 113], "resnet101": [112, 113], "rnn": [112, 113, 123, 132], "gru": [112, 113, 118, 119, 127, 128, 168], "bilstm": [112, 113, 117, 126], "cnn_gru": [112, 113], "vit": [112, 113, 124, 133], "revis": 114, "resblock": [116, 125], "layer_list": [116, 125], "bottleneck": [116, 125], "And": [116, 125], "resudu": [116, 125], "connect": [116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 183], "fc": [116, 117, 119, 120, 121, 123, 125, 126, 128, 129, 130, 132], "fulli": [116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 162, 170, 183], "bidirect": [117, 126], "cnn": [118, 127, 164, 183, 230], "classifi": [118, 127], "consisti": [118, 127], "maxpool": [121, 130, 230], "simpl": [122, 131, 135, 169], "kwarg": [124, 133], "sequenti": [124, 133], "patchembed": [124, 133], "piec": [124, 133], "concaten": [124, 133, 166, 174, 185, 193], "cls_token": [124, 133], "do": [124, 133], "classificationhead": [124, 133], "transformerencoderblock": [124, 133], "attent": [124, 133, 172], "residu": [124, 133], "feed": [124, 133, 262], "channeltransform": 134, "captur": [134, 253, 257, 262, 263], "depend": [134, 234, 236, 254, 262], "ref": [134, 135, 273], "10086600": 134, "bodi": [134, 135, 219, 231], "resnet34": 135, "backbon": 135, "decod": 135, "arxiv": [135, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266], "pdf": [135, 219, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266], "2208": 135, "10414": 135, "low_cutoff_freq": 137, "high_cutoff_freq": 137, "bandpass": 137, "wifi_csi_filt": [137, 139, 140], "500": [137, 205, 234, 236, 237], "10000": [137, 155, 172, 208], "filtered_csi_data": [137, 138, 139, 140, 142], "db4": 138, "threshold_ratio": [138, 142], "dwt_filter": 138, "passband_rippl": 139, "stopband_attenu": 139, "ellipt": 139, "3000": [139, 236], "lowpass": 140, "51000": 140, "\u968f\u673a\u751f\u6210\u4e00\u4e2a\u793a\u4f8bcsi\u6570\u636e": 140, "n_compon": 141, "dimension_to_filt": 141, "disir": 141, "demonstr": 141, "conduct": 141, "pca_filt": 141, "hann": 142, "nperseg": 142, "256": [142, 231, 253, 254, 256, 259, 260, 262, 263, 264, 266], "noverlap": 142, "stft_filter": 142, "print": [143, 144, 152, 163, 164, 170, 172, 183, 188, 197, 198, 199, 201, 202, 205], "interpolation_method": 144, "abnorm": 144, "interpol": 144, "strategi": 144, "mmwave_pc": 149, "intraoral_scan": [149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209], "search": 149, "page": 149, "ta_aug": 151, "rotat": [151, 196, 198, 202], "translat": [151, 195, 196, 202], "misalign": 151, "element": [151, 156, 159, 162, 195, 252], "teeth": [151, 158, 159, 160, 203, 204], "expect": [151, 152, 172], "num_teeth": 151, "num_point": [151, 165, 183, 184], "num_featur": [151, 165, 183, 184], "z": [151, 197, 198, 202, 234, 237], "quaternion": [151, 152, 163, 164, 170, 195, 196, 197, 198, 199, 202, 203, 204], "part": [151, 155, 183, 188, 208], "quat": [151, 163, 164, 170], "modifi": [151, 234], "28": [151, 152, 160, 163, 164, 170, 195, 199, 203, 204, 230], "tooth": [151, 152, 158, 159, 164, 170, 172, 199, 200, 203, 204, 211], "augmented_input": 151, "ta_predict": 152, "num_point_tooth": 152, "dentit": [152, 156, 163, 164], "per": [152, 155, 156, 157, 177, 182, 194, 206, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264], "dataset_path": [152, 153], "dgcnn": [152, 153, 165, 166, 167, 183, 184, 185, 186, 211], "weight_path": [152, 153], "weight_of_dgcnn": [152, 153], "load_state_dict": [152, 153], "weights_onli": [152, 153], "map_loc": [152, 153], "pred": [152, 204], "ts_predict": [153, 154], "segment": [153, 172, 183, 188, 192, 193, 208, 211], "fdi": [153, 154, 155, 160, 199, 203, 204, 205], "jaw_dir": [153, 158], "case_dir": [153, 158], "categori": [153, 155, 158, 159, 172, 183, 188], "kei": [153, 158, 160], "mesh": [153, 154, 155, 161, 205, 206, 207, 208, 209, 219], "make": [153, 266], "dataparallel": 153, "extract_data_from_root": 153, "data_len": 153, "number_of_point": 153, "33": [153, 155, 158, 159, 172, 183, 188], "lbl": 154, "color": [154, 160, 162], "vertex": [154, 206, 207], "trimesh": [154, 200, 203, 207], "gum": [154, 160], "exchang": 154, "obj": [154, 203, 205, 209], "load_obj": 154, "19": 154, "29": 154, "31": [154, 160], "39": 154, "41": [154, 160], "len": 154, "colored_mesh": 154, "show": [154, 203], "per_batch_pt": 155, "numpart": 155, "num_categori": 155, "neural": [155, 253, 256, 263, 264, 265], "convert_clzz_to_label": 155, "clzz": 155, "predefin": 155, "raw_featur": 155, "findic": 155, "all_n": 155, "ta_dataload": [156, 157], "wait_tim": 156, "pointcloud": [156, 163, 164, 178], "wait": [156, 157], "dure": 156, "monitor": 156, "yield": 156, "spawn": 156, "separ": [156, 157], "parallel": 156, "commun": [156, 157], "multiprocess": [156, 157], "pipe": [156, 157], "parent": [156, 157], "asynchron": 156, "manner": [156, 220], "num_batch": 157, "data_idx_limit": 157, "idx": [157, 166, 174, 179, 185, 191, 201, 233], "pchild": 157, "via": 157, "avail": [157, 161, 163, 261], "child": 157, "send": 157, "measur": 157, "spent": 157, "readi": 157, "ts_dataload": [158, 159], "root_path": [158, 208], "subdirectori": 158, "jaw": [158, 172], "data_path": 159, "integ": [159, 169], "ts_util": [160, 161, 162], "rgba": [160, 162], "18": 160, "38": 160, "48": 160, "face_numb": 161, "n_point": 161, "face": 161, "necessari": 161, "repeat": 161, "fill": 161, "max_batch": 161, "hexadecim": 162, "b1cbbb": 162, "decim": 162, "255": 162, "opaqu": 162, "tooth_align": [163, 164, 165, 166, 167, 168, 169, 170, 171], "cloud": [163, 164, 165, 167, 169, 170, 172, 175, 177, 178, 180, 183, 184, 186, 188, 216, 217, 219, 220, 228, 229, 230, 233, 234, 236, 237], "curv": 163, "analysi": [163, 219, 231], "aggreg": [163, 228, 229, 230, 233], "curve_config": 163, "ntooth": [163, 164, 170], "npoint": [163, 164, 169, 170, 176, 178, 183, 187, 188, 193, 230, 236], "nfeatur": [163, 164, 170, 183, 188], "tranform": [163, 164], "xyz": [163, 166, 176, 177, 178, 181, 192, 193], "chn_in": [164, 165], "emb_dim": [164, 165, 183], "1024": [164, 165, 169, 183, 188, 195, 231], "output_channel": 164, "graph": [164, 165, 166, 172, 174, 183, 185], "detit": 164, "hierarch": [165, 177], "approach": 165, "construct": [166, 174, 185, 215, 218, 221], "tanet": [168, 169, 171, 211], "cell": 168, "state": 168, "through": [168, 169, 170, 187, 188, 216, 228, 229, 262], "updat": 168, "max": [169, 171, 181, 187, 237], "pool": [169, 171, 187], "ax": [169, 171, 195], "along": [169, 171], "toward": 170, "arrang": 170, "tooth_segment": [172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194], "num_neighbor": 172, "dual": 172, "geometr": 172, "accur": [172, 252, 261], "region": [172, 181, 193], "rand": 172, "coord": [172, 195, 204], "dbganet": [173, 174, 175, 177, 211], "distribut": 173, "coor": 174, "nor": 174, "dbganet_util": [176, 177, 178, 179, 180, 181, 182], "radius_list": 176, "nsample_list": 176, "in_channel": [176, 187], "mlp_list": 176, "pointnet": 176, "group": [176, 181, 192, 193, 231, 235], "new_xyz": [176, 181, 192, 193], "new_points_concat": 176, "input_feauture_num": 177, "diment": 177, "deal": [177, 266], "dist_result": 177, "class_result": 177, "score": [177, 183, 188], "farthest": 178, "radiu": [181, 193, 231], "nsampl": [181, 192, 193, 231], "find": [181, 192], "src": [182, 194], "dst": [182, 194], "euclid": 182, "seg_num_al": 183, "canon": 184, "space": 184, "pct": [187, 189, 190, 211], "out_channel": 187, "adapt": 187, "neighborhood": 187, "part_num": 188, "8d": 188, "sement": 188, "pct_util": [191, 192, 193, 194], "new_point": 193, "destin": 194, "formula": 194, "dist": 194, "ta_pr": [195, 196], "axis_o": 195, "axis_t": 195, "similarli": 195, "binari": 196, "integr": 196, "ta_util": [197, 198, 199, 200, 201, 202, 203, 204], "invp": 197, "invq": 197, "invert": [197, 198], "re": 197, "inv": 198, "rotated_x": 198, "keep_fdi": 199, "teethaxis_ori": 199, "patient_id": 200, "patient": 200, "idx_dir": 201, "tooth_alignment_exampl": 201, "4x4": 202, "tx": 202, "ty": 202, "tz": 202, "3x3": 202, "submatrix": 202, "merg": 203, "gettooth": 203, "result_obj": 203, "ts_pre": [205, 206, 207, 208, 209], "obj_path": 205, "gt_path": 205, "sample_s": [205, 207, 208, 209], "ground": [205, 219, 220, 273], "truth": [205, 219, 220, 273], "gt": 205, "obj_fea": 205, "neighbors_arrai": 206, "point_idx": 206, "retriev": 206, "whose": 206, "direct": [206, 252], "etc": 206, "sampled_indic": 207, "curvatur": 207, "save_path": [208, 209], "concurr": 208, "multithread": 208, "thread": 208, "part_raw_fold": 209, "curvenet": 211, "mmwave": [215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 244], "pc": [215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237], "dataset_root": [215, 218, 221], "quick": [215, 218, 221], "test_dataset": [215, 218, 221], "train_dataset": [215, 218, 221], "home": [216, 217], "junqiao": [216, 217], "humanhar": 216, "jack": 216, "jump": 216, "squat": 216, "load_from_preprocess": 216, "millimet": [216, 217, 219, 228, 229, 230, 231], "wave": [216, 217, 219, 228, 229, 230, 231], "radar": [216, 217, 219, 220, 228, 229, 230, 231, 233, 234, 235, 236, 237, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265], "ro": 216, "packag": 216, "ti": [216, 217, 220, 235], "develop": 216, "lab": [216, 220, 286], "partit": 216, "further": 216, "python": [216, 237], "proprocess": 216, "npz": 216, "nesl": 216, "class_num": 217, "air": [217, 230], "commod": [217, 230], "fmcw": 217, "iwr1443": 217, "chip": 217, "76": 217, "ghz": 217, "81": 217, "evalu": 217, "scenario": 217, "hrd": 217, "long": [217, 228], "2m": 217, "5m": 217, "fengxudi": 217, "mmpose": 219, "rgb": [219, 220], "test_scenario": 219, "lab1": 219, "benchmark": [219, 231], "4d": [219, 220, 231, 232, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264], "see": 219, "arberobot": 219, "wp": 219, "content": [219, 243], "upload": 219, "2021": 219, "product": 219, "overview": 219, "lab2": 219, "furnish": 219, "occlus": 219, "rain": 219, "smoke": 219, "poor_light": 219, "calibr": 219, "torso": 219, "subtract": 219, "chen3110": 219, "data_root": 220, "intrus": [220, 232], "iwr6843": 220, "fwcm": 220, "annot": 220, "environ": 220, "aiot": 220, "decode_config": 220, "load_databas": 220, "term": 228, "radhar": [228, 229], "voxel": [228, 229, 233, 235], "Of": [228, 229, 230], "sliding_window": [228, 229, 230], "frame_togeth": [228, 229, 230, 233], "x_point": [228, 229, 235, 237], "y_point": [228, 229, 235, 237], "z_point": [228, 229, 235, 237], "hot": [228, 229, 230], "perceptron": 229, "engin": 230, "rpm": 230, "rpm_feat": 230, "spatial_strid": 231, "temporal_kernel_s": 231, "temporal_strid": 231, "emb_relu": 231, "dim_head": 231, "mlp_dim": 231, "dropout1": 231, "dropout2": 231, "mmbodi": 231, "radarr": 231, "anchor": [231, 232], "stride": [231, 233], "tempor": [231, 253, 254, 259, 262, 263], "transformerf": 231, "get_positional_embeddings1": [231, 232], "sequence_length": [231, 232], "input_dim": 232, "nblock": 232, "nneighbor": 232, "transformer_dim": 232, "n_p": 232, "pointtransform": 232, "neighbour": 232, "inner": 232, "keypoint": 232, "index_typ": 233, "frames_togeth": 233, "input_path": 233, "slicing_mark": [233, 235], "mani": [233, 235], "togeth": 233, "frame_": 233, "slicing_marks": 233, "stream": [233, 235], "n_sampl": 233, "tabl": 233, "uniform": [234, 235, 236, 237, 239], "radar_pc": [234, 236, 237], "x_rang": [234, 237], "67": 234, "y_rang": [234, 237], "z_rang": [234, 237], "u": [234, 236, 237], "parent_dir": 235, "sub_dir": 235, "file_ext": 235, "labels_al": 235, "voxels_al": 235, "null": 236, "crop": 236, "300": 236, "variabl": 237, "min": 237, "voxal": 237, "mmwave_raw": [243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266], "cubelearn": [243, 268], "dat": 243, "rdat": 243, "parser": 243, "zhaoymn": 243, "hand_organ": 243, "agr": 243, "pysenes": 244, "dat_2dcnnlstm": 244, "input_data": 245, "layer_to_hook": 245, "get": 245, "intermedi": 245, "intermediate_output": 245, "arriv": 252, "aoa": [252, 253, 259], "expand": 252, "vital": 252, "incom": 252, "system": 252, "2111": [252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266], "03976": [252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266], "range_fourier_net": [253, 254, 256, 257, 264, 266], "aoa_fourier_net": 253, "subsequ": 253, "cube": [253, 254, 255, 256, 259, 260, 261, 262, 263, 264], "chirp": [253, 254, 255, 256, 259, 260, 261, 262, 263, 264], "virtual": [253, 254, 255, 256, 259, 260, 261, 262, 263, 264], "antenna": [253, 254, 255, 256, 259, 260, 261, 262, 263, 264], "doppler": [254, 255, 256, 257, 258, 261, 262, 263], "smaller": [254, 266], "doppler_fourier_net": [254, 256, 258], "variant": 254, "effici": 254, "emploi": [256, 263], "emphas": 256, "veloc": [256, 257], "dft": [257, 265], "analyz": 257, "crucial": 257, "reduc": [258, 266], "fewer": 258, "benefici": [258, 263], "faster": 258, "usag": 258, "especi": 258, "leverag": [260, 261], "comprehens": 261, "most": 261, "abil": 262, "recogn": 262, "dimension": 263, "By": [263, 265], "cplxlinear": 265, "essenti": 265, "downstream": 265, "compact": 266, "handl": 266, "suitabl": 266, "resourc": 266, "limit": 266, "rss": [272, 280], "uji_indoor_loc": 273, "output_descriptor": 273, "ujiindoorloc": 273, "archiv": 273, "ic": 273, "uci": 273, "edu": 273, "310": 273, "longitud": 273, "latitud": 273, "buildingid": 273, "spaceid": 273, "relativeposit": 273, "userid": 273, "phoneid": 273, "database_rssi": 278, "wireless": 279, "ntu_iot_rssi": 286, "iot": 286, "get_compact": 286, "read_txt": 286}, "objects": {"pysensing.acoustic.augmentation.signal_aug": [[3, 0, 1, "", "add_atempo"], [4, 0, 1, "", "add_chorus"], [5, 0, 1, "", "add_echo"], [6, 0, 1, "", "add_noise"]], "pysensing.acoustic.augmentation.signal_aug.add_atempo": [[3, 1, 1, "", "forward"]], "pysensing.acoustic.augmentation.signal_aug.add_chorus": [[4, 1, 1, "", "forward"]], "pysensing.acoustic.augmentation.signal_aug.add_echo": [[5, 1, 1, "", "forward"]], "pysensing.acoustic.augmentation.signal_aug.add_noise": [[6, 1, 1, "", "forward"]], "pysensing.acoustic.augmentation.spectrogram_aug": [[7, 0, 1, "", "frequencymasking"], [8, 0, 1, "", "timemasking"], [9, 0, 1, "", "timestretch"]], "pysensing.acoustic.augmentation.spectrogram_aug.frequencymasking": [[7, 1, 1, "", "forward"]], "pysensing.acoustic.augmentation.spectrogram_aug.timemasking": [[8, 1, 1, "", "forward"]], "pysensing.acoustic.augmentation.spectrogram_aug.timestretch": [[9, 1, 1, "", "forward"]], "pysensing.acoustic.datasets.get_dataloader": [[10, 2, 1, "", "load_har_dataset"], [11, 2, 1, "", "load_hgr_dataset"], [12, 2, 1, "", "load_hpe_dataset"], [13, 2, 1, "", "load_ped_det_dataset"]], "pysensing.acoustic.datasets.har": [[14, 0, 1, "", "AudioIMU"], [15, 0, 1, "", "SAMoSA"]], "pysensing.acoustic.datasets.hgr": [[16, 0, 1, "", "AMG"]], "pysensing.acoustic.datasets.hgr.AMG": [[16, 1, 1, "", "normalization_processing_torch"], [16, 1, 1, "", "normalization_processing_torch_all"], [16, 1, 1, "", "spectrogram_process"]], "pysensing.acoustic.datasets.hpe": [[17, 0, 1, "", "SoundPose2DDataset"], [18, 0, 1, "", "SoundPoseLSTMDataset"]], "pysensing.acoustic.datasets.ped_det": [[19, 0, 1, "", "AFPILD"], [20, 0, 1, "", "AVPed"]], "pysensing.acoustic.datasets.ped_det.AVPed": [[20, 1, 1, "", "normalization_processing_torch"], [20, 1, 1, "", "normalization_processing_torch_all"], [20, 1, 1, "", "spectrogram_process"]], "pysensing.acoustic.inference.embedding": [[21, 0, 1, "", "har_embedding"], [22, 0, 1, "", "hpe_embedding"], [23, 0, 1, "", "ped_det_embedding"]], "pysensing.acoustic.inference.predict": [[24, 0, 1, "", "har_predict"], [25, 0, 1, "", "hpe_predict"], [26, 0, 1, "", "ped_det_predict"]], "pysensing.acoustic.inference.training.AFPILD_utils.testing": [[27, 2, 1, "", "afpild_testing"]], "pysensing.acoustic.inference.training.AFPILD_utils.training": [[28, 2, 1, "", "afpild_train"]], "pysensing.acoustic.inference.training.AcousticPose_utils.hpe_test": [[29, 2, 1, "", "evaluate_model"]], "pysensing.acoustic.inference.training.AcousticPose_utils.hpe_train": [[30, 2, 1, "", "train_model"]], "pysensing.acoustic.inference.training.har_train": [[31, 2, 1, "", "har_test"], [32, 2, 1, "", "har_train_val"]], "pysensing.acoustic.inference.training.ped_det_train": [[33, 2, 1, "", "ped_det_test"], [34, 2, 1, "", "ped_det_train"]], "pysensing.acoustic.models.get_model": [[35, 2, 1, "", "load_har_model"], [36, 2, 1, "", "load_hpe_model"], [37, 2, 1, "", "load_ped_det_model"]], "pysensing.acoustic.models.har": [[38, 0, 1, "", "HAR_AUDIOCNN"], [39, 0, 1, "", "HAR_SAMCNN"]], "pysensing.acoustic.models.har.HAR_AUDIOCNN": [[38, 1, 1, "", "forward"], [38, 1, 1, "", "init_weight"]], "pysensing.acoustic.models.har.HAR_SAMCNN": [[39, 1, 1, "", "forward"]], "pysensing.acoustic.models.hpe": [[40, 0, 1, "", "Speech2pose"], [41, 0, 1, "", "Wipose_LSTM"]], "pysensing.acoustic.models.hpe.Speech2pose": [[40, 1, 1, "", "forward"]], "pysensing.acoustic.models.hpe.Wipose_LSTM": [[41, 1, 1, "", "forward"]], "pysensing.acoustic.models.ped_det": [[42, 0, 1, "", "PED_CNN"], [43, 0, 1, "", "PED_CRNN"]], "pysensing.acoustic.models.ped_det.PED_CNN": [[42, 1, 1, "", "features"], [42, 1, 1, "", "forward"]], "pysensing.acoustic.models.ped_det.PED_CRNN": [[43, 1, 1, "", "forward"]], "pysensing.acoustic.preprocessing.filtering": [[44, 0, 1, "", "allpass"], [45, 0, 1, "", "bandpass"], [46, 0, 1, "", "bandreject"], [47, 0, 1, "", "highpass"], [48, 0, 1, "", "lowpass"]], "pysensing.acoustic.preprocessing.filtering.allpass": [[44, 1, 1, "", "forward"]], "pysensing.acoustic.preprocessing.filtering.bandpass": [[45, 1, 1, "", "forward"]], "pysensing.acoustic.preprocessing.filtering.bandreject": [[46, 1, 1, "", "forward"]], "pysensing.acoustic.preprocessing.filtering.highpass": [[47, 1, 1, "", "forward"]], "pysensing.acoustic.preprocessing.filtering.lowpass": [[48, 1, 1, "", "forward"]], "pysensing.acoustic.preprocessing.transform": [[49, 0, 1, "", "GCC"], [50, 0, 1, "", "amplitude2db"], [51, 0, 1, "", "inversespectrogram"], [52, 0, 1, "", "ipd"], [53, 0, 1, "", "istft"], [54, 0, 1, "", "melspectrogram"], [55, 0, 1, "", "mfcc"], [56, 0, 1, "", "spectrogram"], [57, 0, 1, "", "stft"]], "pysensing.acoustic.preprocessing.transform.GCC": [[49, 1, 1, "", "forward"]], "pysensing.acoustic.preprocessing.transform.amplitude2db": [[50, 1, 1, "", "forward"]], "pysensing.acoustic.preprocessing.transform.inversespectrogram": [[51, 1, 1, "", "forward"]], "pysensing.acoustic.preprocessing.transform.ipd": [[52, 1, 1, "", "forward"]], "pysensing.acoustic.preprocessing.transform.istft": [[53, 1, 1, "", "forward"]], "pysensing.acoustic.preprocessing.transform.melspectrogram": [[54, 1, 1, "", "forward"]], "pysensing.acoustic.preprocessing.transform.mfcc": [[55, 1, 1, "", "forward"]], "pysensing.acoustic.preprocessing.transform.spectrogram": [[56, 1, 1, "", "forward"]], "pysensing.acoustic.preprocessing.transform.stft": [[57, 1, 1, "", "forward"]], "pysensing.bluetooth.augmentation.synchronization": [[65, 0, 1, "", "Synchronizer"]], "pysensing.bluetooth.augmentation.synchronization.Synchronizer": [[65, 1, 1, "", "get_sync_data"], [65, 1, 1, "", "read_file"], [65, 1, 1, "", "update_keys"]], "pysensing.bluetooth.datasets.amazonas_indoor_env": [[67, 0, 1, "", "AmazonasIndoorEnv_Dataset"]], "pysensing.bluetooth.datasets.amazonas_indoor_env.AmazonasIndoorEnv_Dataset": [[67, 1, 1, "", "load_all_csvs"], [67, 1, 1, "", "load_basic_info"], [67, 1, 1, "", "split_dataset"]], "pysensing.bluetooth.datasets.wmu_ble_loc": [[66, 0, 1, "", "WMUBLELoc_Dataset"]], "pysensing.bluetooth.datasets.wmu_ble_loc.WMUBLELoc_Dataset": [[66, 1, 1, "", "load_basic_info"], [66, 1, 1, "", "load_from_raw"], [66, 1, 1, "", "split_dataset"]], "pysensing.bluetooth.models.localization.fingerprinting": [[68, 0, 1, "", "CNN"], [69, 0, 1, "", "LSTM"], [70, 0, 1, "", "MLP"], [71, 0, 1, "", "WKNN"]], "pysensing.bluetooth.models.localization.fingerprinting.CNN": [[68, 1, 1, "", "forward"], [68, 1, 1, "", "generate_embeddings"]], "pysensing.bluetooth.models.localization.fingerprinting.LSTM": [[69, 1, 1, "", "forward"], [69, 1, 1, "", "generate_embeddings"]], "pysensing.bluetooth.models.localization.fingerprinting.MLP": [[70, 1, 1, "", "forward"], [70, 1, 1, "", "generate_embeddings"]], "pysensing.bluetooth.models.localization.fingerprinting.WKNN": [[71, 1, 1, "", "compute_similarity"]], "pysensing.bluetooth.models.localization.triangulation": [[72, 0, 1, "", "BaseDistanceRegressor"], [73, 0, 1, "", "Triangulator"]], "pysensing.bluetooth.models.localization.triangulation.BaseDistanceRegressor": [[72, 1, 1, "", "create_functions"], [72, 3, 1, "", "diff_height"], [72, 3, 1, "", "dim"], [72, 1, 1, "", "fit"], [72, 1, 1, "", "func"], [72, 1, 1, "", "init_param"], [72, 3, 1, "", "param_init"]], "pysensing.bluetooth.models.localization.triangulation.Triangulator": [[73, 1, 1, "", "predict_distance"], [73, 1, 1, "", "triangulation"]], "pysensing.bluetooth.preprocessing.filtering": [[74, 0, 1, "", "average_filter"], [75, 0, 1, "", "median_filter"], [76, 0, 1, "", "remove_nan"]], "pysensing.bluetooth.preprocessing.transform": [[77, 0, 1, "", "normalization"], [78, 0, 1, "", "standardization"]], "pysensing.csi.augmentation.adding_noise": [[84, 0, 1, "", "add_noise"], [85, 0, 1, "", "dropout"]], "pysensing.csi.augmentation.adding_noise.add_noise": [[84, 1, 1, "", "forward"]], "pysensing.csi.augmentation.adding_noise.dropout": [[85, 1, 1, "", "forward"]], "pysensing.csi.augmentation.deformation": [[86, 0, 1, "", "spectrum_scaling"], [87, 0, 1, "", "spectrum_shifting"], [88, 0, 1, "", "time_stretching"]], "pysensing.csi.augmentation.deformation.spectrum_scaling": [[86, 1, 1, "", "forward"]], "pysensing.csi.augmentation.deformation.spectrum_shifting": [[87, 1, 1, "", "forward"]], "pysensing.csi.augmentation.deformation.time_stretching": [[88, 1, 1, "", "forward"]], "pysensing.csi.dataset.get_dataloader": [[89, 0, 1, "", "load_classification_dataset"], [90, 0, 1, "", "load_hpe_dataset"]], "pysensing.csi.dataset.har": [[91, 0, 1, "", "NTUFi_HAR"], [92, 0, 1, "", "UT_HAR"], [93, 0, 1, "", "Widar3"]], "pysensing.csi.dataset.hid": [[94, 0, 1, "", "NTUFi_HumanID"]], "pysensing.csi.dataset.hpe": [[95, 0, 1, "", "MetaFi_Dataset"], [96, 0, 1, "", "WiPose"]], "pysensing.csi.dataset.hpe.MetaFi_Dataset": [[95, 1, 1, "", "get_scene"], [95, 1, 1, "", "load_data"], [95, 1, 1, "", "read_dir"], [95, 1, 1, "", "read_frame"]], "pysensing.csi.dataset.reconstruction": [[97, 0, 1, "", "HandFi"]], "pysensing.csi.inference.embedding": [[98, 0, 1, "", "har_csi_embedding"], [99, 0, 1, "", "hid_csi_embedding"], [100, 0, 1, "", "hpe_csi_embedding"], [101, 0, 1, "", "recon_csi_embedding"]], "pysensing.csi.inference.predict": [[102, 0, 1, "", "har_predict"], [103, 0, 1, "", "hid_predict"], [104, 0, 1, "", "hpe_predict"], [105, 0, 1, "", "recon_predict"]], "pysensing.csi.inference.train": [[106, 0, 1, "", "har_train"], [107, 0, 1, "", "hid_train"], [108, 0, 1, "", "hpe_train"], [109, 0, 1, "", "recon_train"]], "pysensing.csi.load_raw.load_raw_from_atheros": [[110, 0, 1, "", "load_raw_bin"], [111, 0, 1, "", "load_raw_msg"]], "pysensing.csi.model.get_model": [[112, 0, 1, "", "load_har_model"], [113, 0, 1, "", "load_hid_model"], [114, 0, 1, "", "load_pretrain"], [115, 0, 1, "", "load_recon_model"]], "pysensing.csi.model.har": [[116, 0, 1, "", "ResNet"], [117, 0, 1, "", "har_BiLSTM"], [118, 0, 1, "", "har_CNN_GRU"], [119, 0, 1, "", "har_GRU"], [120, 0, 1, "", "har_LSTM"], [121, 0, 1, "", "har_LeNet"], [122, 0, 1, "", "har_MLP"], [123, 0, 1, "", "har_RNN"], [124, 0, 1, "", "har_ViT"]], "pysensing.csi.model.har.ResNet": [[116, 1, 1, "", "forward"], [116, 1, 1, "", "generate_embeddings"]], "pysensing.csi.model.har.har_BiLSTM": [[117, 1, 1, "", "forward"], [117, 1, 1, "", "generate_embeddings"]], "pysensing.csi.model.har.har_CNN_GRU": [[118, 1, 1, "", "forward"], [118, 1, 1, "", "generate_embeddings"]], "pysensing.csi.model.har.har_GRU": [[119, 1, 1, "", "forward"], [119, 1, 1, "", "generate_embeddings"]], "pysensing.csi.model.har.har_LSTM": [[120, 1, 1, "", "forward"], [120, 1, 1, "", "generate_embeddings"]], "pysensing.csi.model.har.har_LeNet": [[121, 1, 1, "", "forward"], [121, 1, 1, "", "generate_embeddings"]], "pysensing.csi.model.har.har_MLP": [[122, 1, 1, "", "forward"], [122, 1, 1, "", "generate_embeddings"]], "pysensing.csi.model.har.har_RNN": [[123, 1, 1, "", "forward"], [123, 1, 1, "", "generate_embeddings"]], "pysensing.csi.model.har.har_ViT": [[124, 1, 1, "", "forward"], [124, 1, 1, "", "generate_embeddings"]], "pysensing.csi.model.hid": [[125, 0, 1, "", "ResNet"], [126, 0, 1, "", "hid_BiLSTM"], [127, 0, 1, "", "hid_CNN_GRU"], [128, 0, 1, "", "hid_GRU"], [129, 0, 1, "", "hid_LSTM"], [130, 0, 1, "", "hid_LeNet"], [131, 0, 1, "", "hid_MLP"], [132, 0, 1, "", "hid_RNN"], [133, 0, 1, "", "hid_ViT"]], "pysensing.csi.model.hid.ResNet": [[125, 1, 1, "", "forward"], [125, 1, 1, "", "generate_embeddings"]], "pysensing.csi.model.hid.hid_BiLSTM": [[126, 1, 1, "", "forward"], [126, 1, 1, "", "generate_embeddings"]], "pysensing.csi.model.hid.hid_CNN_GRU": [[127, 1, 1, "", "forward"], [127, 1, 1, "", "generate_embeddings"]], "pysensing.csi.model.hid.hid_GRU": [[128, 1, 1, "", "forward"], [128, 1, 1, "", "generate_embeddings"]], "pysensing.csi.model.hid.hid_LSTM": [[129, 1, 1, "", "forward"], [129, 1, 1, "", "generate_embeddings"]], "pysensing.csi.model.hid.hid_LeNet": [[130, 1, 1, "", "forward"], [130, 1, 1, "", "generate_embeddings"]], "pysensing.csi.model.hid.hid_MLP": [[131, 1, 1, "", "forward"], [131, 1, 1, "", "generate_embeddings"]], "pysensing.csi.model.hid.hid_RNN": [[132, 1, 1, "", "forward"]], "pysensing.csi.model.hid.hid_ViT": [[133, 1, 1, "", "forward"], [133, 1, 1, "", "generate_embeddings"]], "pysensing.csi.model.hpe": [[134, 0, 1, "", "WPFormer"], [135, 0, 1, "", "WPNet"]], "pysensing.csi.model.hpe.WPFormer": [[134, 1, 1, "", "forward"], [134, 1, 1, "", "generate_embeddings"]], "pysensing.csi.model.hpe.WPNet": [[135, 1, 1, "", "forward"], [135, 1, 1, "", "generate_embeddings"]], "pysensing.csi.model.reconstruction": [[136, 0, 1, "", "CSI_AutoEncoder"]], "pysensing.csi.model.reconstruction.CSI_AutoEncoder": [[136, 1, 1, "", "forward"]], "pysensing.csi.preprocessing.denoising": [[137, 0, 1, "", "bandpass_filter"], [138, 0, 1, "", "dwt"], [139, 0, 1, "", "elliptic_filter"], [140, 0, 1, "", "lowpass_filter"], [141, 0, 1, "", "pca"], [142, 0, 1, "", "stft"]], "pysensing.csi.preprocessing.denoising.bandpass_filter": [[137, 1, 1, "", "forward"]], "pysensing.csi.preprocessing.denoising.dwt": [[138, 1, 1, "", "forward"]], "pysensing.csi.preprocessing.denoising.elliptic_filter": [[139, 1, 1, "", "forward"]], "pysensing.csi.preprocessing.denoising.lowpass_filter": [[140, 1, 1, "", "forward"]], "pysensing.csi.preprocessing.denoising.pca": [[141, 1, 1, "", "forward"]], "pysensing.csi.preprocessing.denoising.stft": [[142, 1, 1, "", "forward"]], "pysensing.csi.preprocessing.transform": [[143, 0, 1, "", "normalization"], [144, 0, 1, "", "remove_nan"]], "pysensing.intraoral_scan.augmentation.ta_aug": [[151, 2, 1, "", "random_augmentation"]], "pysensing.intraoral_scan.inference.ta_predict": [[152, 2, 1, "", "predict"]], "pysensing.intraoral_scan.inference.ts_predict": [[153, 2, 1, "", "predict"], [154, 2, 1, "", "visualization"]], "pysensing.intraoral_scan.inference.utils.segmenter": [[155, 0, 1, "", "Segmenter"]], "pysensing.intraoral_scan.inference.utils.segmenter.Segmenter": [[155, 1, 1, "", "convert_clzz_to_label"], [155, 1, 1, "", "segment"]], "pysensing.intraoral_scan.inference.utils.ta_dataloader": [[156, 0, 1, "", "DataLoader"], [157, 2, 1, "", "load_process"]], "pysensing.intraoral_scan.inference.utils.ta_dataloader.DataLoader": [[156, 1, 1, "", "batches"]], "pysensing.intraoral_scan.inference.utils.ts_dataloader": [[158, 2, 1, "", "extract_data_from_root"], [159, 2, 1, "", "load"]], "pysensing.intraoral_scan.inference.utils.ts_utils": [[160, 2, 1, "", "create_colors"], [161, 2, 1, "", "generate_findices"], [162, 2, 1, "", "to_dec"]], "pysensing.intraoral_scan.models.tooth_alignment.curvenet": [[163, 0, 1, "", "CurveNet"]], "pysensing.intraoral_scan.models.tooth_alignment.curvenet.CurveNet": [[163, 1, 1, "", "forward"]], "pysensing.intraoral_scan.models.tooth_alignment.dgcnn": [[164, 0, 1, "", "DGCNN"], [165, 0, 1, "", "Encoder"], [166, 2, 1, "", "get_graph_feature"], [167, 2, 1, "", "knn"]], "pysensing.intraoral_scan.models.tooth_alignment.dgcnn.DGCNN": [[164, 1, 1, "", "forward"]], "pysensing.intraoral_scan.models.tooth_alignment.dgcnn.Encoder": [[165, 1, 1, "", "forward"]], "pysensing.intraoral_scan.models.tooth_alignment.tanet": [[168, 0, 1, "", "GRUCell"], [169, 0, 1, "", "PointNet"], [170, 0, 1, "", "TANet"], [171, 2, 1, "", "custom_max"]], "pysensing.intraoral_scan.models.tooth_alignment.tanet.GRUCell": [[168, 1, 1, "", "forward"]], "pysensing.intraoral_scan.models.tooth_alignment.tanet.PointNet": [[169, 1, 1, "", "forward"]], "pysensing.intraoral_scan.models.tooth_alignment.tanet.TANet": [[170, 1, 1, "", "forward"]], "pysensing.intraoral_scan.models.tooth_segmentation.dbganet": [[172, 0, 1, "", "DBGANet"], [173, 2, 1, "", "GaussProjection"], [174, 2, 1, "", "get_graph_feature"], [175, 2, 1, "", "knn"]], "pysensing.intraoral_scan.models.tooth_segmentation.dbganet.DBGANet": [[172, 1, 1, "", "forward"]], "pysensing.intraoral_scan.models.tooth_segmentation.dbganet_utils": [[176, 0, 1, "", "PointNetSetAbstractionMsg"], [177, 0, 1, "", "centroid"], [178, 2, 1, "", "farthest_point_sample"], [179, 2, 1, "", "index_points"], [180, 2, 1, "", "pc_normalize"], [181, 2, 1, "", "query_ball_point"], [182, 2, 1, "", "square_distance"]], "pysensing.intraoral_scan.models.tooth_segmentation.dbganet_utils.PointNetSetAbstractionMsg": [[176, 1, 1, "", "forward"]], "pysensing.intraoral_scan.models.tooth_segmentation.dbganet_utils.centroid": [[177, 1, 1, "", "forward"]], "pysensing.intraoral_scan.models.tooth_segmentation.dgcnn": [[183, 0, 1, "", "DGCNN_partseg"], [184, 0, 1, "", "Transform_Net"], [185, 2, 1, "", "get_graph_feature"], [186, 2, 1, "", "knn"]], "pysensing.intraoral_scan.models.tooth_segmentation.dgcnn.DGCNN_partseg": [[183, 1, 1, "", "forward"]], "pysensing.intraoral_scan.models.tooth_segmentation.dgcnn.Transform_Net": [[184, 1, 1, "", "forward"]], "pysensing.intraoral_scan.models.tooth_segmentation.pct": [[187, 0, 1, "", "Local_op"], [188, 0, 1, "", "PCT"], [189, 0, 1, "", "Point_Transformer_Last"], [190, 0, 1, "", "SA_Layer"]], "pysensing.intraoral_scan.models.tooth_segmentation.pct.Local_op": [[187, 1, 1, "", "forward"]], "pysensing.intraoral_scan.models.tooth_segmentation.pct.PCT": [[188, 1, 1, "", "forward"]], "pysensing.intraoral_scan.models.tooth_segmentation.pct.Point_Transformer_Last": [[189, 1, 1, "", "forward"]], "pysensing.intraoral_scan.models.tooth_segmentation.pct.SA_Layer": [[190, 1, 1, "", "forward"]], "pysensing.intraoral_scan.models.tooth_segmentation.pct_utils": [[191, 2, 1, "", "index_points"], [192, 2, 1, "", "knn_point"], [193, 2, 1, "", "sample_and_group"], [194, 2, 1, "", "square_distance"]], "pysensing.intraoral_scan.preprocessing.ta_pre": [[195, 2, 1, "", "load"], [196, 2, 1, "", "main"]], "pysensing.intraoral_scan.preprocessing.ta_utils": [[197, 2, 1, "", "QuatMul"], [198, 2, 1, "", "QuatRotate"], [199, 2, 1, "", "getAxis"], [200, 2, 1, "", "getTooth"], [201, 2, 1, "", "get_idx_dirs"], [202, 2, 1, "", "quaternion_to_matrix"], [203, 2, 1, "", "showTooth"], [204, 2, 1, "", "trans_pred"]], "pysensing.intraoral_scan.preprocessing.ts_pre": [[205, 2, 1, "", "extract_feature_labels"], [206, 2, 1, "", "get_neighbors"], [207, 2, 1, "", "get_vertices_defined_curvature"], [208, 2, 1, "", "multithreading_pre"], [209, 2, 1, "", "process_part_folders"]], "pysensing.mmwave.PC.dataset.har": [[215, 0, 1, "", "load_har_dataset"], [216, 0, 1, "", "radHAR"]], "pysensing.mmwave.PC.dataset.hgr": [[217, 0, 1, "", "MGesture"], [218, 0, 1, "", "load_hgr_dataset"]], "pysensing.mmwave.PC.dataset.hpe": [[219, 0, 1, "", "MMBody"], [220, 0, 1, "", "MetaFi_Dataset"], [221, 0, 1, "", "load_hpe_dataset"]], "pysensing.mmwave.PC.dataset.hpe.MetaFi_Dataset": [[220, 1, 1, "", "decode_config"], [220, 1, 1, "", "get_scene"], [220, 1, 1, "", "load_data"], [220, 1, 1, "", "load_database"], [220, 1, 1, "", "read_dir"], [220, 1, 1, "", "read_frame"]], "pysensing.mmwave.PC.inference.har": [[222, 0, 1, "", "har_test"], [223, 0, 1, "", "har_train"]], "pysensing.mmwave.PC.inference.hgr": [[224, 0, 1, "", "hgr_test"], [225, 0, 1, "", "hgr_train"]], "pysensing.mmwave.PC.inference.hpe": [[226, 0, 1, "", "hpe_test"], [227, 0, 1, "", "hpe_train"]], "pysensing.mmwave.PC.model.har": [[228, 0, 1, "", "har_LSTM"], [229, 0, 1, "", "har_MLP"]], "pysensing.mmwave.PC.model.har.har_LSTM": [[228, 1, 1, "", "forward"]], "pysensing.mmwave.PC.model.har.har_MLP": [[229, 1, 1, "", "forward"]], "pysensing.mmwave.PC.model.hgr": [[230, 0, 1, "", "EVL_NN"]], "pysensing.mmwave.PC.model.hgr.EVL_NN": [[230, 1, 1, "", "RPM_feat"], [230, 1, 1, "", "forward"]], "pysensing.mmwave.PC.model.hpe": [[231, 0, 1, "", "P4Transformer"], [232, 0, 1, "", "PointTransformerReg"]], "pysensing.mmwave.PC.model.hpe.P4Transformer": [[231, 1, 1, "", "forward"], [231, 1, 1, "", "get_positional_embeddings1"]], "pysensing.mmwave.PC.model.hpe.PointTransformerReg": [[232, 1, 1, "", "forward"], [232, 1, 1, "", "get_positional_embeddings1"]], "pysensing.mmwave.PC.preprocessing.sliding_window": [[233, 0, 1, "", "sliding_window"]], "pysensing.mmwave.PC.preprocessing.uniform": [[234, 0, 1, "", "cropping"], [235, 0, 1, "", "load_from_raw"], [236, 0, 1, "", "padding"], [237, 0, 1, "", "voxelizing"]], "pysensing.mmwave_raw.dataset.CubeLearn": [[243, 0, 1, "", "Gesture_Dataset"]], "pysensing.mmwave_raw.inference.embedding": [[244, 0, 1, "", "embedding"], [245, 0, 1, "", "get_intermediate_output"]], "pysensing.mmwave_raw.inference.har": [[246, 0, 1, "", "har_test"], [247, 0, 1, "", "har_train"], [248, 0, 1, "", "har_train_val"]], "pysensing.mmwave_raw.inference.hgr": [[249, 0, 1, "", "hgr_test"], [250, 0, 1, "", "hgr_train"], [251, 0, 1, "", "hgr_train_val"]], "pysensing.mmwave_raw.models.network": [[252, 0, 1, "", "AOA_Fourier_Net"], [253, 0, 1, "", "AT_2DCNN"], [254, 0, 1, "", "DAT_2DCNNLSTM"], [255, 0, 1, "", "DAT_3DCNN"], [256, 0, 1, "", "DT_2DCNN"], [257, 0, 1, "", "Doppler_Fourier_Net"], [258, 0, 1, "", "Doppler_Fourier_Net_Small"], [259, 0, 1, "", "RAT_2DCNNLSTM"], [260, 0, 1, "", "RAT_3DCNN"], [261, 0, 1, "", "RDAT_3DCNNLSTM"], [262, 0, 1, "", "RDT_2DCNNLSTM"], [263, 0, 1, "", "RDT_3DCNN"], [264, 0, 1, "", "RT_2DCNN"], [265, 0, 1, "", "Range_Fourier_Net"], [266, 0, 1, "", "Range_Fourier_Net_Small"]], "pysensing.mmwave_raw.models.network.AOA_Fourier_Net": [[252, 1, 1, "", "forward"]], "pysensing.mmwave_raw.models.network.AT_2DCNN": [[253, 1, 1, "", "forward"]], "pysensing.mmwave_raw.models.network.DAT_2DCNNLSTM": [[254, 1, 1, "", "forward"]], "pysensing.mmwave_raw.models.network.DAT_3DCNN": [[255, 1, 1, "", "forward"]], "pysensing.mmwave_raw.models.network.DT_2DCNN": [[256, 1, 1, "", "forward"]], "pysensing.mmwave_raw.models.network.Doppler_Fourier_Net": [[257, 1, 1, "", "forward"]], "pysensing.mmwave_raw.models.network.Doppler_Fourier_Net_Small": [[258, 1, 1, "", "forward"]], "pysensing.mmwave_raw.models.network.RAT_2DCNNLSTM": [[259, 1, 1, "", "forward"]], "pysensing.mmwave_raw.models.network.RAT_3DCNN": [[260, 1, 1, "", "forward"]], "pysensing.mmwave_raw.models.network.RDAT_3DCNNLSTM": [[261, 1, 1, "", "forward"]], "pysensing.mmwave_raw.models.network.RDT_2DCNNLSTM": [[262, 1, 1, "", "forward"]], "pysensing.mmwave_raw.models.network.RDT_3DCNN": [[263, 1, 1, "", "forward"]], "pysensing.mmwave_raw.models.network.RT_2DCNN": [[264, 1, 1, "", "forward"]], "pysensing.mmwave_raw.models.network.Range_Fourier_Net": [[265, 1, 1, "", "forward"]], "pysensing.mmwave_raw.models.network.Range_Fourier_Net_Small": [[266, 1, 1, "", "forward"]], "pysensing.rssi.augmentation.synchronization": [[272, 0, 1, "", "Synchronizer"]], "pysensing.rssi.augmentation.synchronization.Synchronizer": [[272, 1, 1, "", "get_sync_data"], [272, 1, 1, "", "read_file"], [272, 1, 1, "", "update_keys"]], "pysensing.rssi.datasets.ntu_iot_rssi": [[286, 0, 1, "", "NTUIoTRSSI_Dataset"]], "pysensing.rssi.datasets.ntu_iot_rssi.NTUIoTRSSI_Dataset": [[286, 1, 1, "", "get_compact"], [286, 1, 1, "", "read_txt"]], "pysensing.rssi.datasets.uji_indoor_loc": [[273, 0, 1, "", "UJIIndoorLoc_Dataset"]], "pysensing.rssi.datasets.uji_indoor_loc.UJIIndoorLoc_Dataset": [[273, 1, 1, "", "load_basic_info"]], "pysensing.rssi.models.localization.fingerprinting": [[274, 0, 1, "", "CNN"], [276, 0, 1, "", "LSTM"], [277, 0, 1, "", "MLP"], [278, 0, 1, "", "WKNN"]], "pysensing.rssi.models.localization.fingerprinting.CNN": [[274, 1, 1, "", "forward"], [274, 1, 1, "", "generate_embeddings"]], "pysensing.rssi.models.localization.fingerprinting.LSTM": [[276, 1, 1, "", "forward"], [276, 1, 1, "", "generate_embeddings"]], "pysensing.rssi.models.localization.fingerprinting.MLP": [[277, 1, 1, "", "forward"], [277, 1, 1, "", "generate_embeddings"]], "pysensing.rssi.models.localization.fingerprinting.WKNN": [[278, 1, 1, "", "compute_similarity"]], "pysensing.rssi.models.localization.triangulation": [[279, 0, 1, "", "BaseDistanceRegressor"], [280, 0, 1, "", "Triangulator"]], "pysensing.rssi.models.localization.triangulation.BaseDistanceRegressor": [[279, 1, 1, "", "create_functions"], [279, 3, 1, "", "diff_height"], [279, 3, 1, "", "dim"], [279, 1, 1, "", "fit"], [279, 1, 1, "", "func"], [279, 1, 1, "", "init_param"], [279, 3, 1, "", "param_init"]], "pysensing.rssi.models.localization.triangulation.Triangulator": [[280, 1, 1, "", "predict_distance"], [280, 1, 1, "", "triangulation"]], "pysensing.rssi.preprocessing.filtering": [[281, 0, 1, "", "average_filter"], [282, 0, 1, "", "median_filter"], [283, 0, 1, "", "remove_nan"]], "pysensing.rssi.preprocessing.transform": [[284, 0, 1, "", "normalization"], [285, 0, 1, "", "standardization"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:attribute"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"]}, "titleterms": {"acoust": [0, 1, 2, 58, 59, 60, 61], "modul": [0, 63, 82, 211, 239, 268, 289], "augment": [1, 62, 81, 150, 270], "spectrogram": [1, 56], "signal": 1, "dataset": [2, 64, 83, 214, 242, 271], "human": [2, 59, 61, 83, 147, 214, 238, 240, 267], "pose": [2, 59, 61, 83, 147, 214, 238, 240], "estim": [2, 59, 61, 83, 147, 214, 238, 240], "activ": [2, 59, 61, 214, 238, 240, 267], "recognit": [2, 59, 61, 83, 147, 214, 238, 240, 267], "hand": 2, "gestur": [2, 214, 238, 240, 267], "pedestrian": [2, 59, 61], "detect": [2, 59, 61], "load": [2, 59, 146, 159, 195], "add_atempo": 3, "add_choru": 4, "add_echo": 5, "add_nois": [6, 84], "frequencymask": 7, "timemask": 8, "timestretch": 9, "load_har_dataset": [10, 215], "load_hgr_dataset": [11, 218], "load_hpe_dataset": [12, 90, 221], "load_ped_det_dataset": 13, "audioimu": 14, "samosa": 15, "amg": 16, "soundpose2ddataset": 17, "soundposelstmdataset": 18, "afpild": 19, "avp": 20, "har_embed": 21, "hpe_embed": 22, "ped_det_embed": 23, "har_predict": [24, 102], "hpe_predict": [25, 104], "ped_det_predict": 26, "afpild_test": 27, "afpild_train": 28, "evaluate_model": 29, "train_model": 30, "har_test": [31, 222, 246], "har_train_v": [32, 248], "ped_det_test": 33, "ped_det_train": 34, "load_har_model": [35, 112], "load_hpe_model": 36, "load_ped_det_model": 37, "har_audiocnn": 38, "har_samcnn": 39, "speech2pos": 40, "wipose_lstm": 41, "ped_cnn": 42, "ped_crnn": 43, "allpass": 44, "bandpass": 45, "bandreject": 46, "highpass": 47, "lowpass": 48, "gcc": 49, "amplitude2db": 50, "inversespectrogram": 51, "ipd": 52, "istft": 53, "melspectrogram": 54, "mfcc": 55, "stft": [57, 142], "infer": [58, 145, 210, 238, 267], "predict": [58, 145, 152, 153, 210], "embed": [58, 145, 244, 267], "model": [59, 79, 147, 212, 240, 269, 287], "preprocess": [60, 80, 148, 213, 241, 288], "filter": [60, 80, 288], "transform": [60, 80, 148, 150, 288], "train": [61, 145], "bluetooth": [62, 63, 64, 79, 80], "synchron": [62, 65, 270, 272], "local": [64, 79, 271, 287], "wmubleloc_dataset": 66, "amazonasindoorenv_dataset": 67, "cnn": [68, 274], "lstm": [69, 276], "mlp": [70, 277], "wknn": [71, 278], "basedistanceregressor": [72, 279], "triangul": [73, 79, 280, 287], "average_filt": [74, 281], "median_filt": [75, 282], "remove_nan": [76, 144, 283], "normal": [77, 143, 284], "standard": [78, 285], "fingerprint": [79, 287], "csi": [81, 82, 83, 145, 146, 147, 148], "add": 81, "nois": 81, "deform": 81, "action": [83, 147], "identif": [83, 147], "reconstruct": [83, 147], "get_load": [83, 147], "dropout": 85, "spectrum_sc": 86, "spectrum_shift": 87, "time_stretch": 88, "load_classification_dataset": 89, "ntufi_har": 91, "ut_har": 92, "widar3": 93, "ntufi_humanid": 94, "metafi_dataset": [95, 220], "wipos": 96, "handfi": 97, "har_csi_embed": 98, "hid_csi_embed": 99, "hpe_csi_embed": 100, "recon_csi_embed": 101, "hid_predict": 103, "recon_predict": 105, "har_train": [106, 223, 247], "hid_train": 107, "hpe_train": [108, 227], "recon_train": 109, "load_raw_bin": 110, "load_raw_msg": 111, "load_hid_model": 113, "load_pretrain": 114, "load_recon_model": 115, "resnet": [116, 125], "har_bilstm": 117, "har_cnn_gru": 118, "har_gru": 119, "har_lstm": [120, 228], "har_lenet": 121, "har_mlp": [122, 229], "har_rnn": 123, "har_vit": 124, "hid_bilstm": 126, "hid_cnn_gru": 127, "hid_gru": 128, "hid_lstm": 129, "hid_lenet": 130, "hid_mlp": 131, "hid_rnn": 132, "hid_vit": 133, "wpformer": 134, "wpnet": 135, "csi_autoencod": 136, "bandpass_filt": 137, "dwt": 138, "elliptic_filt": 139, "lowpass_filt": 140, "pca": 141, "load_raw_data": 146, "raw": 146, "from": 146, "athero": 146, "denois": 148, "pysens": 149, "document": 149, "content": 149, "indic": 149, "tabl": 149, "intraoral_scan": [150, 210, 211, 212, 213], "random_augment": 151, "visual": 154, "segment": [155, 210, 212, 213], "dataload": [156, 210], "load_process": 157, "extract_data_from_root": 158, "create_color": 160, "generate_findic": 161, "to_dec": 162, "curvenet": [163, 212], "dgcnn": [164, 212], "encod": 165, "get_graph_featur": [166, 174, 185], "knn": [167, 175, 186], "grucel": 168, "pointnet": 169, "tanet": [170, 212], "custom_max": 171, "dbganet": [172, 212], "gaussproject": 173, "pointnetsetabstractionmsg": 176, "centroid": 177, "farthest_point_sampl": 178, "index_point": [179, 191], "pc_normal": 180, "query_ball_point": 181, "square_dist": [182, 194], "dgcnn_partseg": 183, "transform_net": 184, "local_op": 187, "pct": [188, 212], "point_transformer_last": 189, "sa_lay": 190, "knn_point": 192, "sample_and_group": 193, "main": 196, "quatmul": 197, "quatrot": 198, "getaxi": 199, "gettooth": 200, "get_idx_dir": 201, "quaternion_to_matrix": 202, "showtooth": 203, "trans_pr": 204, "extract_feature_label": 205, "get_neighbor": 206, "get_vertices_defined_curvatur": 207, "multithreading_pr": 208, "process_part_fold": 209, "tooth": [210, 212, 213], "align": [210, 212, 213], "util": [210, 212, 213], "mmwave_pc": [214, 238, 239, 240, 241], "radhar": 216, "mgestur": 217, "mmbodi": 219, "hgr_test": [224, 249], "hgr_train": [225, 250], "hpe_test": 226, "evl_nn": 230, "p4transform": 231, "pointtransformerreg": 232, "sliding_window": 233, "crop": 234, "load_from_raw": 235, "pad": 236, "voxel": 237, "uniform": 241, "slide": 241, "window": 241, "mmwave_raw": [242, 267, 268, 269], "cubelearn": [242, 269], "gesture_dataset": 243, "get_intermediate_output": 245, "hgr_train_val": 251, "aoa_fourier_net": 252, "at_2dcnn": 253, "dat_2dcnnlstm": 254, "dat_3dcnn": 255, "dt_2dcnn": 256, "doppler_fourier_net": 257, "doppler_fourier_net_smal": 258, "rat_2dcnnlstm": 259, "rat_3dcnn": 260, "rdat_3dcnnlstm": 261, "rdt_2dcnnlstm": 262, "rdt_3dcnn": 263, "rt_2dcnn": 264, "range_fourier_net": 265, "range_fourier_net_smal": 266, "rssi": [270, 271, 287, 288, 289], "ujiindoorloc_dataset": 273, "cnnloc1d": 275, "ntuiotrssi_dataset": 286}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})